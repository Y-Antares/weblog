<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>电子显微镜工作原理 -- How do Electron Microscopes Work?</title>
      <link href="/2024/10/04/nanoscopic/"/>
      <url>/2024/10/04/nanoscopic/</url>
      
        <content type="html"><![CDATA[<h1 id="How-do-Electron-Microscopes-Work"><a href="#How-do-Electron-Microscopes-Work" class="headerlink" title="How do Electron Microscopes Work"></a>How do Electron Microscopes Work</h1><p>时值国庆，鄙人原打算去用电镜见见世面，可惜被实验室预约系统背刺了。</p><p>写一篇电镜原理笔记聊以自慰。</p><h2 id="视频学习"><a href="#视频学习" class="headerlink" title="视频学习"></a>视频学习</h2><blockquote><p>Branch Education在YouTube的原视频：<a href="https://www.youtube.com/watch?v=9DnnxvS6BBQ">The Nanoscopic World How do Electron Microscopes Work? Taking Pictures of Atoms</a></p><p>尽整没用的B站烤肉：<a href="https://www.bilibili.com/video/BV1Xw4qenEDg/?spm_id_from=333.999.0.0&vd_source=9e7904c84532311f0da86c13f50ba4e2">电子显微镜工作原理</a></p></blockquote><h3 id="生词"><a href="#生词" class="headerlink" title="生词"></a>生词</h3><p>electron microscope 电子显微镜</p><p>nanoscopic transistors 纳米晶体管</p><p>zoom in on …  放大观察…</p><p>overlapping 重叠的</p><p>scale 鳞片</p><p>Scanning Electron Microscope (SEM) 扫描电子显微镜，观察物体表面 resolution up to 1 nanometer</p><p>maximum resolution 最大分辨率 spacing between 2 adjacent features or dots of resolvable data in an image &#x3D; 1 nanometer</p><p>Transmission Electron Microscope (TEM) 透射电子显微镜，拍摄材料内部结构 resolution up to 50 picometers</p><p>magnetic </p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><ul><li>TEM</li></ul><p>generate electrons and accelerates them to around 70% the speed of light, thus creating a beam of electron.</p><ul><li>SEM</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> video learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 材料 </tag>
            
            <tag> science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中西艺术比较</title>
      <link href="/2024/09/28/%E4%B8%AD%E8%A5%BF%E8%89%BA%E6%9C%AF%E6%AF%94%E8%BE%831-4/"/>
      <url>/2024/09/28/%E4%B8%AD%E8%A5%BF%E8%89%BA%E6%9C%AF%E6%AF%94%E8%BE%831-4/</url>
      
        <content type="html"><![CDATA[<h1 id="Course-4："><a href="#Course-4：" class="headerlink" title="Course 4："></a>Course 4：</h1><p>艺术史从公元前4世纪起。</p><h2 id="1-死后世界"><a href="#1-死后世界" class="headerlink" title="1. 死后世界"></a>1. 死后世界</h2><p>the world of afterlife</p><p>埃及，纸莎草纸，《忽内法的最后审判》Last judgement of Hunefer，灵魂轻于羽毛</p><p>带卜辞龟腹甲，丙遍411</p><p>孔子所著《易经解》，中式“暗物质”</p><p>曾侯乙外棺（椁）、曾侯乙内棺，可视为死后世界的建筑，而不仅仅是尸体的容器</p><h2 id="2-逝者形象表现"><a href="#2-逝者形象表现" class="headerlink" title="2. 逝者形象表现"></a>2. 逝者形象表现</h2><p>representing image of the dead</p><p>古埃及：两位法老，Statue of Djoser &amp; Khafre enthroned，旧王国时期，头巾、捆扎胡子、坐姿端正（平面绘画的正面律）、真人大小（中国玩，兵马俑前无）</p><p>Death mask &amp; Innermost coffin of Tutankhamen， 新王国时期，镶嵌</p><p>希腊：黄金覆面，迈锡尼</p><p>西周晚期：玉覆面（重要的人物，重要的材料！！：D）</p><p>纳巴姆墓室壁画，猎禽图（正面律：侧首，正身，腿一前一后），官员，将自己扮作法老；宴会：死后世界的欢乐</p><p>帛画“龙凤人物”，长沙，服饰等级化，无平面律，龙凤为死后世界物</p><p>长沙马王堆1号汉墓，T字型铭旌，天地相交之所（作用：盖在尸体上）</p><h2 id="3-营造死后的空间"><a href="#3-营造死后的空间" class="headerlink" title="3. 营造死后的空间"></a>3. 营造死后的空间</h2><p>龙虎堆塑，河南濮阳西水坡，仰韶文化</p><p>河南洛阳烧沟61号墓墓顶壁画，顶上是日月流云，模仿小型宇宙；横穴墓</p><p>曾侯乙墓之俯瞰</p><p>古埃及，马斯塔巴</p><p>法老乔塞，阶梯式金字塔，死后之城，</p><p>吉萨金字塔群：死后宫殿，向上堆砌，通神的纪念碑</p><p>中王朝时期：崖墓，利用空间纵深递进</p><p>妇好墓：商王之妻，有军权</p><p>长沙马王堆1号汉墓，竖穴墓，“视死如生”，湿尸（石膏层之功？）</p><p>中山国王陵：东汉诸侯，礼崩乐坏，近祖&gt;元祖（周），祭祀地移至近祖墓地。高台建高庙之平面设计图（青铜嵌金银）</p><p>秦始皇陵兵马俑，覆斗形（金字塔形）陵丘，死后之城</p><p>河北满城西汉墓：依山凿墓，横穴墓，粗度破（佛教石窟，转一圈）</p><h2 id="4-艺术手法"><a href="#4-艺术手法" class="headerlink" title="4. 艺术手法"></a>4. 艺术手法</h2><h3 id="4-1-复制真实世界"><a href="#4-1-复制真实世界" class="headerlink" title="4.1 复制真实世界"></a>4.1 复制真实世界</h3><p>jian fou冰箱、湿蜡法青铜器 “丧礼者，以生者饰死者也，大象其生以送其死也。故如死如生，如亡如存”（荀况（前313-前238）《荀子·礼论篇》）</p><p>“Serving the Dead as the Living”——Xunzi(313 BCE-238 BCE), On Rite</p><p>死，生之镜？</p><p>兵马俑：细节—“真实”；原本全是上了彩的。</p><p>楚木俑、刘邦墓陶兵俑、汉景帝墓木俑，迷你俑：穿衣可动手</p><h3 id="4-2-象征手法"><a href="#4-2-象征手法" class="headerlink" title="4.2 象征手法"></a>4.2 象征手法</h3><p>刘胜及其妻墓：</p><p>金缕玉衣，玉—长生永恒、西王母，并非衣，而是封人</p><p>错金博山炉</p><p>画像石《东王公与西王母》</p><p>弋射耕作、画像版：二维剪影、但生动</p><p>墓室用料：陶、木—&gt;石（刘胜左右，西方传入）</p><p>霍去病墓前，马踏匈奴石雕</p><p>高颐阙：以石仿木</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 艺术人文 </tag>
            
            <tag> 死亡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog迁移</title>
      <link href="/2024/09/25/blog%E8%BF%81%E7%A7%BB/"/>
      <url>/2024/09/25/blog%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="blog从wordpress迁移至hexo-github-page"><a href="#blog从wordpress迁移至hexo-github-page" class="headerlink" title="blog从wordpress迁移至hexo+github page"></a>blog从wordpress迁移至hexo+github page</h1><blockquote><p>主要参考了<a href="https://interjc.net/2020-04-18/from-wordpress-to-hexo/">这篇博客</a>，还综合网上其他教程做了优化。</p></blockquote><h2 id="wp导出"><a href="#wp导出" class="headerlink" title="wp导出"></a>wp导出</h2><p>wordpress方面，在【后台–工具–导出】可导出xml文件。存储这个文件为<code>wordpress.xml</code>，后续我们用<code>hexo-migrator-wordpress</code>插件将它导入hexo。</p><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><ol><li><p>创建文件夹<code>blog</code>作为博客文件的存储地</p></li><li><p>打开<code>git bash</code>，安装<code>hexo-cli</code>（默认已安装<code>git</code>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>hexo-cli</code> 在本地创建 hexo 工程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog  <span class="comment"># 定位到blog</span></span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>导入wp数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-migrator-wordpress --save  <span class="comment"># 安装转换插件</span></span><br><span class="line">hexo migrate wordpress [path to wordpress.xml] <span class="comment"># 输入xml文件的绝对路径。我这里是hexo migrate wordpress &quot;..\wordpress_blog_data\lonetrialantares.WordPress.2024-09-22.xml&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>github repositery建立</p><table><thead><tr><th>名称</th><th>性质</th><th>作用</th></tr></thead><tbody><tr><td>weblog</td><td>public</td><td>静态文件</td></tr><tr><td>blog</td><td>private</td><td>博客程序</td></tr></tbody></table></li><li><p>git push同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git checkout -b main  <span class="comment"># 建main分支（因为github repo的default branch是main）</span></span><br><span class="line">git remote add origin [SSH of blog]  <span class="comment"># attention : origin &amp; blog</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;init&quot;</span></span><br><span class="line">git push --set-upstream origin main --force <span class="comment"># 建议先git push，否则一来就force也会报错</span></span><br></pre></td></tr></table></figure></li><li><p>下载配置主题</p><p>在<a href="https://hexo.io/themes/">hexo官网</a>可选择主题。多番对比后我选择了<a href="https://github.com/Cerallin/hexo-theme-yuzu">yuzu的theme</a>，因为适合我学术博客与随笔并行的写作风格。之后有时间也可能fork并个性化一下。为完整展示安装流程和注意事项，我把<strong>theme-yuzu</strong>的readme搬过来演示：</p><ol><li>安装主题与必要的依赖</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在blog内运行</span><br><span class="line">npm i hexo-renderer-pug</span><br><span class="line">mkdir -p themes &amp;&amp; cd themes</span><br><span class="line">git clone https://github.com/Cerallin/hexo-theme-yuzu</span><br></pre></td></tr></table></figure><ol start="2"><li>修改blog根目录下的 <code>config.yml</code>。</li></ol><p>将 <code>config.yml</code> 中 <code>theme</code> 字段改为 <code>hexo-theme-yuzu</code>。将主题文件夹下 <code>_root_config_example.yml</code> 的内容添加到 <code>config.yml</code> 中。</p><ol start="3"><li>根据自己的需要修改主题配置</li></ol><p>可创建一个<code>_config.[theme name].yml</code>文件来覆盖主题的默认设置。对于上述安装方法来说，就是<code>_config.hexo-theme-yuzu.yml</code>。</p><p><strong>更新：</strong>这个主题加载比较慢，换成<strong>solar</strong>试一下：</p><ol><li>In the <code>root</code> directory of Hexo:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/tzvetkov75/solar-theme-hexo.git themes/solar</span><br><span class="line">$ npm install hexo-pagination --save</span><br></pre></td></tr></table></figure><ol start="2"><li>Change the <code>theme</code> property in the <code>config.yml</code> file (hexo config file).</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: solar</span><br></pre></td></tr></table></figure><p>solar是基于cactus改写的，性能比较好，加载比较快。</p><p>尝试更换主题时，需耐心等待，电脑端加载比较慢（也可能是因为cookie残留之类的？）用手机预览会比较好。</p></li></ol><h2 id="构建与发布"><a href="#构建与发布" class="headerlink" title="构建与发布"></a>构建与发布</h2><ol><li><p>更改<code>config.yml</code>的<code>deploy</code>设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/weblog.git <span class="comment"># yourname 替换为 github 用户名</span></span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure></li><li><p>安装发布插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>构建、发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li><li><p>github绑定域名</p><ul><li>域名方面</li></ul><p>以阿里云购买的域名为例，需添加5条域名解析记录：</p><table><thead><tr><th>记录类型</th><th>主机记录-域名前缀</th><th>记录值</th></tr></thead><tbody><tr><td>A</td><td>@</td><td>185.199.108.153</td></tr><tr><td>A</td><td>@</td><td>185.199.109.153</td></tr><tr><td>A</td><td>@</td><td>185.199.110.153</td></tr><tr><td>A</td><td>@</td><td>185.199.111.153</td></tr><tr><td>CNAME</td><td>www</td><td>yourname.github.io</td></tr></tbody></table><ul><li>github方面</li></ul><p>在<code>weblog</code>的【setting–page–custom domain】处添加自己的域名即可。解析记录添加过了就能通过DNS审核。记得勾选<code>Enforce HTTPS</code>。</p><p>想要以后每次构建发布自动添加域名，可在【blog&#x2F;source】添加一个无后缀的文件【CNAME】，内容为你的域名。</p></li></ol><p>至于自动化构建与发布，感觉意义不大，之后再弄。现今阶段更改完文件直接<code>hexo g -d</code>就行了，已经很方便。</p><h2 id="后续建设（个性化）"><a href="#后续建设（个性化）" class="headerlink" title="后续建设（个性化）"></a>后续建设（个性化）</h2><h3 id="catagories"><a href="#catagories" class="headerlink" title="catagories"></a>catagories</h3>]]></content>
      
      
      <categories>
          
          <category> posts </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网文手法技巧借鉴</title>
      <link href="/2024/08/29/%E7%BD%91%E6%96%87%E6%89%8B%E6%B3%95%E6%8A%80%E5%B7%A7%E5%80%9F%E9%89%B4/"/>
      <url>/2024/08/29/%E7%BD%91%E6%96%87%E6%89%8B%E6%B3%95%E6%8A%80%E5%B7%A7%E5%80%9F%E9%89%B4/</url>
      
        <content type="html"><![CDATA[<p>如题，生发该想法的直接原因是cpy市场步入中老年，低质量文章充斥各大平台，某些“成功案例”中的“经典兴奋点”被借来合成小爽文，进而让在下一个老年读者“阅君标题，知君八九”。 文荒得慌，又不肯降低审美水准去读那些废纸，干脆弄点高级美学—试图自割腿肉。然而鄙人向来眼高手低，并无长篇写作经验，也不敢一上来就学海明威等人（自觉被cpy污染已深，自视甚高地吃老本怕是闹笑话），于是决定先从看过的网文中汲取些微…</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>执笔如执镜，观星亦观心</title>
      <link href="/2024/08/29/%E6%89%A7%E7%AC%94%E5%A6%82%E6%89%A7%E9%95%9C%EF%BC%8C%E8%A7%82%E6%98%9F%E4%BA%A6%E8%A7%82%E5%BF%83/"/>
      <url>/2024/08/29/%E6%89%A7%E7%AC%94%E5%A6%82%E6%89%A7%E9%95%9C%EF%BC%8C%E8%A7%82%E6%98%9F%E4%BA%A6%E8%A7%82%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<p><strong>引理：</strong> 作者写作的成果永远是祂自己，作品是不会也不能骗人的。</p><p><strong>证明：</strong></p><ol><li>(<a href="https://m.weibo.cn/detail/5057062743052308">https://m.weibo.cn/detail/5057062743052308</a> “socioeconomic influences on literary quality: a critical analysis of American female writers’work”)</li><li>各种作品（小说、影视、游戏）中出现的皮套型人物。这种人物的出现意味着创作者的表达欲和自我意识溢出了作品中其他的人物，祂不满足于在主角或功能性人物上放置自己的碎片，并将这部作品视作独有产，故创造自身的锚点展示给读者。 这种皮套人物是完整的作者，其他人物是不完整的作者；缺失的那一块通常由更大众的形象来补齐。</li><li>歌德：“读一本好书，就是在与高尚的人对话。” 高尚的人是谁呢？是作者及其好友。这些人（主要是作者）品德高尚，自然大概率写出好书。</li></ol>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>问道</title>
      <link href="/2024/06/21/%E9%97%AE%E9%81%93/"/>
      <url>/2024/06/21/%E9%97%AE%E9%81%93/</url>
      
        <content type="html"><![CDATA[<h1 id="道"><a href="#道" class="headerlink" title="道"></a>道</h1><h2 id="名道"><a href="#名道" class="headerlink" title="名道"></a>名道</h2><p>何谓“道”？“道可道，非常道”，道即是“不可道”。</p><p>何谓“名”？“名可名，非常名”，名即是强道不可道之物。[1]</p><h2 id="新名"><a href="#新名" class="headerlink" title="新名"></a>新名</h2><p>今吾有两“名”，一曰“语言”，一曰“锚点”。</p><p>所谓语言，先已有述。巴别塔之先论，即论语言。[2]</p><p>所谓锚点，今方有知。时间之矢固有所引，然茕茕孑立于世，难免自疑。锚点之效，在于超越空间，替代时间，成为最终时刻“我存在的唯一证明”。</p><p>史上贤者锚点众多，量变产生质变，质量带来惯性，惯性重塑锚点之影，更绘其形；虽有扰动偏差，贤者之型弥越千年，仍可一观。</p><p>一般人的锚点零星几个，虽则留影片刻，终与他人搅合，以造新人。</p><p>极度漂泊者一个锚点也无，似乎人死神灭了；然而“孤星”是否本身是无可动摇、比贤者更坚定的锚点？宇宙背景辐射告诉我们，也许是的。脱耦的光子失去了与电子碰撞的机会，却永远留在了热平衡的彼刻；光年以外，辰宿流转，宇宙变样；唯有这束光子的辐射永恒，即使它也因膨胀而红移降温（今2.7K）。更奇妙的是，被时间分隔的两颗“孤星”，光子和中微子，竟共同树立起了真正的永恒：二者均在降温，中微子的具体温度甚至难测（约2K），但它们的温差却是恒定了。[3]</p><p>此外，两枚孤星的联系或许比双星更紧密：毕竟锚点足够强壮的双星才能继续存在，可若是双星的联系那般强大，那还是双星吗？如昴宿星团的七姐妹疑案[4]一样，”万年之后，吾与汝不分你我“，无论是被吞噬还是被眩光效应掩盖，其中一方都被牺牲或淘汰。如此看来，想要维持在吸引而不坍陷的距离，着实有难度，故称”求不得“。</p><h2 id="驭道升道形"><a href="#驭道升道形" class="headerlink" title="驭道升道形"></a>驭道升道形</h2><p>两”名“各有千秋，但也可分出个大小。依我之见，语言是工具性的、泛用的；锚点是对策性的、本源的。本源的”名“是否一定大于工具的”名“？不见得。”大道至简“，合格的大道应包罗万象且无须繁文注释，亦即是说：大道基于语言，语言居于”一道之下，万道之上“。</p><p>再论”以名驭道“之术。人一生不可能只有一道；他可以悟道，可以驭道，可以忘道，亦可以失道。悟道之事，缘分居多；驭道之事，技巧居多；忘道之事，乃悟大道而弃小道，道有所精进；失道之事，是被动的忘道。其中驭道之事犹可言说，借”名“以道”不可道“便可。”以名驭道“，一则像戏文里的曲牌名，做一个承情载意的合适容器；二则像并行式大型计算机，或者深度学习的branches，考验驭道者的RAM及CPU。</p><p>总觉得”道“和”仙“不只是雅俗之分。仙人即先人贤人，立初道者。后人羡他的道久存，誉之为”仙“；不明白的好事者按宗教那一套传了，还把”仙“中的”道“遗落，便造出了不伦不类的产物：修仙、迷信，且颇为火热。至于今天的诸多类似的事物，我想，它既已在概率统计上令我可见了，必然在我身上也有体现。何不去观察品评一番？</p><p>附：澡堂哲学家最怕的就是自己的习惯，这简直是格式化一切新思维的利器。如此看来美容都需修闭口禅，毕竟”天机不可泄露“。：D</p><hr><p><strong>链接：</strong></p><p>[1] 老子《道德经》。盐炒匀先生在多年前的一个夜晚给我讲了《道德经》第一章，今终究只记得第一句。倒也没关系，若李耳写得够好，一句可顶千万句。</p><p>[2] 旧约·创世纪·11章</p><p>[3] 宇宙背景辐射（CMB）推荐文献：Fixsen, THE TEMPERATURE OF THE COSMIC MICROWAVE BACKGROUND; 俞允强，宇宙演化与热寂说</p><p>[4] 昴宿星团在肉眼观测下是六颗星，在各地的传说神话中是”七姐妹“。原因是有两位如文中所说，”万年之后，不分你我“。推荐文献：Norris, Why are there Seven Sisters.</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 澡堂哲学 </tag>
            
            <tag> 道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长歌行</title>
      <link href="/2024/06/10/%E9%95%BF%E6%AD%8C%E8%A1%8C/"/>
      <url>/2024/06/10/%E9%95%BF%E6%AD%8C%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>天覆吾，地载吾，天地生吾有意无？</p><p>不然绝粒升天衢，不然鸣珂游帝都。</p><p>焉能不贵复不去，空作昂藏一丈夫。</p><p>一丈夫兮一丈夫，干生气志是良图。</p><p>请君看取百年事，业就扁舟泛五湖。</p><p>— 李泌，739，时年17</p><hr><p>天赋吾志，地载吾形，天地为鞘我为刀。</p><p>不若沉心万卷章，不若投身万箭中。</p><p>安能徘徊两俱空，空作彷徨一倥偬。</p><p>一倥偬兮一倥偬，气志凌云力有终。</p><p>请君阅取千秋宗，风雨如晦亦如梦。</p><p>— YzY，2024，时年19</p><hr><p>2024.06.10</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>足金红玛瑙手链</title>
      <link href="/2024/06/09/%E9%80%81%E7%BB%99%E6%AF%8D%E4%BA%B2%E7%9A%84%E8%B6%B3%E9%87%91%E7%BA%A2%E7%8E%9B%E7%91%99%E6%89%8B%E9%93%BE/"/>
      <url>/2024/06/09/%E9%80%81%E7%BB%99%E6%AF%8D%E4%BA%B2%E7%9A%84%E8%B6%B3%E9%87%91%E7%BA%A2%E7%8E%9B%E7%91%99%E6%89%8B%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<p><strong>同济大学 珠宝鉴赏课程 结课论文 底稿</strong></p><h1 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h1><p>以“给妈妈买珠宝首饰”为目标展开行动。</p><p>针对珠宝鉴赏课上讲到的珠宝，选取了每种宝石比较有代表性的图片，做了一个概览PPT。把这个PPT拿给妈妈看，她选择了海蓝宝石。我首先在网上搜索了海蓝宝石的情报，然后回顾了课堂上讲到的海蓝宝石相关内容，最后前往实体店考察。</p><h2 id="网上调查"><a href="#网上调查" class="headerlink" title="网上调查"></a>网上调查</h2><p>我询问GPT-4o适合买给母亲的海蓝宝石为主石的饰品，它向我推荐了18K白金镶嵌海蓝宝石与钻石的项链。询问可以购买到该首饰的店铺时，它首先建议了Tiffany &amp; Co.，Cartier，Van Cleef &amp; Arpels，Bvlgari等知名品牌；我将预算缩减至1万元内后，它继而推荐了Blue Nile，James Allen，Etsy，Gemvara等定制珠宝品牌。</p><p>在Blue Nile官网，我找到了一款不错的14k白金镶嵌海蓝宝石吊坠（<a href="https://www.bluenile.com/jewelry/necklaces/aquamarine-solitaire-pendant-in-14k-white-gold-7mm-item-195508">https://www.bluenile.com/jewelry/necklaces/aquamarine-solitaire-pendant-in-14k-white-gold-7mm-item-195508</a>） ，其价格也在我负担范围内。但是网购远在美国的奢侈品终究令人不放心。</p><p>最终，由于上述珠宝品牌大多没有中国分店（或是分店地址距嘉定校区太远），经过考量后，我选择了上海嘉亭荟的珠宝店片区（包括老凤祥、周大生、六福珠宝等连锁店）进行实地考察。在进行考察前，我专门回顾了课堂上讲到的海蓝宝石品鉴赏析方法。</p><h2 id="海蓝宝石（Aquamarine）的品鉴与赏析"><a href="#海蓝宝石（Aquamarine）的品鉴与赏析" class="headerlink" title="海蓝宝石（Aquamarine）的品鉴与赏析"></a>海蓝宝石（Aquamarine）的品鉴与赏析</h2><h3 id="基本特点"><a href="#基本特点" class="headerlink" title="基本特点"></a>基本特点</h3><p>颜色：蓝色、绿色。浓郁的蓝色最好。比蓝宝石的蓝鲜艳、浓郁。</p><p>属中端彩色宝石，但也常出现在高端珠宝中。小颗的虽不贵重，单颗大颗的价值却高。</p><p>优势：因为颜色淡，所以不惧灯光幽暗。</p><p>切割：多切割为方形或长圆形。</p><h3 id="古董珠宝"><a href="#古董珠宝" class="headerlink" title="古董珠宝"></a>古董珠宝</h3><ul><li>奥尔加公主海蓝宝石钻石皇冠、项链<ul><li>拍卖时间：2009年5月12日</li><li>地点：日内瓦苏富比</li><li>皇冠起拍估价：12万到17万瑞士法郎</li><li>项链起拍估价12万到17万瑞士法郎</li></ul></li></ul><h3 id="寓意"><a href="#寓意" class="headerlink" title="寓意"></a>寓意</h3><ul><li>三月生辰石、双鱼座</li><li>寓意先见之明（透视）、召唤魔鬼</li><li>属绿柱石BRILLE（德语“眼镜”）</li><li>望远镜、潜望镜用料</li></ul><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p>原石晶体：六方晶系，易共生。</p><p>巴基斯坦的双色绿柱石：上蓝下粉</p><p>绿柱石：铍、铝硅酸盐；掺杂有铁变红，锰变粉（摩根石）。</p><h3 id="采购"><a href="#采购" class="headerlink" title="采购"></a>采购</h3><p>市面上的一般个头小、颜色浅（普通），几百一克拉。</p><p>挑选时，</p><ul><li><p>首选颜色。越深邃越好。</p><ul><li>新出的颜色分级标准：SANTA-MARIA圣玛丽（最好） <img src="http://yantares.cn/wp-content/uploads/2024/06/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2024-06-08-160525-300x173.png"></li></ul></li><li><p>其次切割。长方柱状，对净度要求高（肉眼无瑕）</p></li><li><p>镶嵌方式。</p></li><li><p><img src="http://yantares.cn/wp-content/uploads/2024/06/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2024-06-08-160702-300x185.png"></p></li><li><p>一般都是和钻石搭配？</p></li><li><p><img src="http://yantares.cn/wp-content/uploads/2024/06/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2024-06-08-160733-300x191.png"></p></li></ul><p>作假的不多，所以鉴定不讲（乐）</p><p>但设计和镶嵌工艺可以变中端宝石为高端饰品。</p><h1 id="2024-6-8-嘉亭荟考察"><a href="#2024-6-8-嘉亭荟考察" class="headerlink" title="2024.6.8 嘉亭荟考察"></a>2024.6.8 嘉亭荟考察</h1><p>晚上先吃了顿牛火锅，买了杯茶去逛的。然而逛得汗流浃背（应付柜姐能力有待提高），茶是坐上校车才喝到第一口。</p><h2 id="周大生"><a href="#周大生" class="headerlink" title="周大生"></a>周大生</h2><p>店铺主要售卖红蓝宝石和金饰银饰；除此之外，还列有足金和田玉挂坠数枚。</p><p>较为有趣的一枚豆荚状的足金和田玉挂坠，其形态可爱，颜色比图片展示的要浅些。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/06/%E8%B1%86%E8%8D%9A%E5%92%8C%E7%94%B0%E7%8E%891-300x288.jpg"></p><h2 id="老凤祥"><a href="#老凤祥" class="headerlink" title="老凤祥"></a>老凤祥</h2><p>除大量红蓝宝和金银钻石饰品外，有翡翠挂坠数枚。</p><p>此处也有一枚豆荚状的翡翠挂饰，并且在我肉眼观察下与周大生的那枚足金和田玉挂坠几乎一样。经搜索发现翡翠豆荚有耕耘收获、福寿安康、多子多福、岁岁平安之寓意。可以作为送给妈妈礼物的备选。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/06/%E7%BF%A1%E7%BF%A0%E6%8C%82%E5%9D%A0-225x300.jpg"></p><h2 id="六福珠宝"><a href="#六福珠宝" class="headerlink" title="六福珠宝"></a>六福珠宝</h2><p>柜台中有一串糖果色手串（未询问店员，许是糖果碧玺？）十分亮眼。不同于课上见到的糖果碧玺颜色的明艳，这串珠子的颜色复古、淡雅。但是颜色偏浅，不适合送予母亲。同时价格对于普通本科学生也太高。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/06/%E7%B3%96%E6%9E%9C-225x300.jpg"></p><h2 id="亚一金店"><a href="#亚一金店" class="headerlink" title="亚一金店"></a>亚一金店</h2><p>在亚一金店凭直觉看中了一款足金红玛瑙手链（符合我的审美和妈妈的气质：D），遂询问店员详情。店员介绍，这手串上的足金挂坠包含四颗转运珠，一枚四叶草，寓意好运连连；另有20颗红玛瑙，象征勇气、力量、健康和热情。计算下来这串足金红玛瑙手链售价2136元；而若将红玛瑙换做我妈妈指定的海蓝宝石，加价100，总价2236元。由于需要等待妈妈回复和回校班车时间问题，我暂离该店，继续考虑。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/06/%E8%B6%B3%E9%87%91%E7%BA%A2%E7%8E%9B%E7%91%99-300x169.jpg"></p><h1 id="复盘分析"><a href="#复盘分析" class="headerlink" title="复盘分析"></a>复盘分析</h1><p>老妈表示，比起其他的饰品或海蓝宝石，她更喜欢红玛瑙手串。但她表示我家没有购买首饰的传统，可不必在这方面浪费。而我浏览了这家金店的官网，确认它主营的是金饰，在此店购买彩宝有些不合理。况且此店拿出的红玛瑙和海蓝宝质量实在一般（颜色浅淡），其价格也有些虚高（详见后续分析）。故我决定现阶段不进行购买，待我经济实力增长再购买更高质量、更合适的饰品作礼物。</p><h2 id="问题回答"><a href="#问题回答" class="headerlink" title="问题回答"></a>问题回答</h2><p><strong>(1) 请详细描述你选择的珠宝首饰，包括款式，主石、配石所用的宝石品种，所用金属等细节，给出细节图片？</strong></p><p>我所选择的首饰是足金红玛瑙手串，这款手串采用经典的弹力绳设计，方便佩戴和取下。整体设计简洁大方，红玛瑙的红色与足金的金色形成鲜明的对比，既有传统的韵味，又不失现代的时尚感。</p><p><strong>主要元素</strong></p><ol><li><strong>红玛瑙珠子</strong>：<ul><li>数量：20颗</li><li>颜色：深红色，质地光滑，良好的光泽</li><li>直径：珠子的直径均匀一致，佩戴起来舒适且美观</li></ul></li><li><strong>足金配件</strong>：<ul><li><strong>转运珠</strong>：<ul><li>数量：4颗</li><li>材质：足金</li><li>位置：分布在红玛瑙珠之间</li></ul></li><li><strong>四叶草吊坠</strong>：<ul><li>设计：立体的四叶草造型，精致细腻</li><li>材质：足金</li><li>位置：作为手串的主吊坠，位于手串的中心位置</li></ul></li></ul></li></ol><p><strong>(2) 从宝石的象征意义方面阐述你选择这件首饰的理由；</strong></p><ul><li><strong>红玛瑙</strong>：<ul><li>红玛瑙在许多文化中象征着勇气、力量、爱和热情。</li></ul></li><li><strong>足金</strong>：<ul><li>足金是指含金量达到99%以上的黄金，颜色纯正，质地柔软，具有很高的价值和收藏意义。</li></ul></li><li><strong>海蓝宝石：</strong>（因不够美观被淘汰）<ul><li>在古希腊和古罗马神话，海蓝宝石是海神波塞冬的宝石。可用于保护水手和旅客在海上的安全。而古埃及人认为海蓝宝石具有神秘的力量，可以保护佩戴者免受邪恶力量的侵害。</li><li>如今，在西方文化中，海蓝宝石被视为希望和友谊的象征；在一些东方文化中，海蓝宝石被认为能够启迪智慧、具有净化心灵和身体的力量。</li></ul></li><li><strong>综合寓意：</strong><ul><li><strong>好运</strong>：转运珠和四叶草共同象征带来好运和幸运，帮助佩戴者在生活中转变运势。</li><li><strong>平安</strong>：转运珠和红玛瑙的保护作用，以及四叶草的幸运象征，为佩戴者提供全方位的保护和平安。</li><li><strong>成就</strong>：足金象征财富和成功，转运珠则增强佩戴者在事业和生活中的成就感。</li><li><strong>勇气</strong>：红玛瑙增强佩戴者的勇气和力量，帮助他们克服生活中的各种挑战。</li><li><strong>健康</strong>：红玛瑙与四叶草共同象征健康和活力，帮助佩戴者保持身体和精神的健康。</li><li><strong>热情</strong>：红玛瑙的爱与热情寓意结合四叶草的爱情象征，带来幸福的爱情生活和增进人际关系的热情。</li><li><strong>希望</strong>：四叶草的希望、信心寓意与红玛瑙的情感稳定作用相结合，帮助佩戴者保持内心的平静和积极的心态。</li></ul></li></ul><p><strong>(3) 试着实体店购买和网络购买两种渠道，比较一下这两种购买渠道的优缺点；你最终选择哪种购买渠道？给出你的理由</strong>；</p><p>网络购买的优点是可选宝石和饰品种类丰富，且搜寻效率高，方便快捷；缺点是无法观察和验证实物，难以保证珠宝的质量、颜色和质感。</p><p>实体店购买的优点是可以仔细观察、甚至触摸珠宝，并立刻购买，获得全面的售后服务等；缺点是线下可选宝石门类少（例如我在前三家店都没怎么见到彩宝）、首饰样式单一（少见有创意的设计），挑选更加耗费时间和精力。</p><p>最终我选择实体店购买。对于珠宝首饰这类商品，亲眼观察是最重要的。</p><p><strong>(4) 结合所学，讨论一下你如何对这件首饰进行鉴定，以确保货真？</strong>：</p><ul><li><strong>红玛瑙的鉴定</strong><ul><li><strong>颜色</strong>：天然红玛瑙的颜色通常较为均匀，但会有一定的自然色差。人工染色的红玛瑙颜色过于鲜艳且均匀。</li><li><strong>光泽</strong>：天然红玛瑙有玻璃光泽，表面光滑。</li><li><strong>质地</strong>：真红玛瑙摩氏硬度在6.5-7之间（硬度计测试），用指甲划过不会留下痕迹。</li><li><strong>透明度</strong>：天然红玛瑙通常半透明或微透明，内部可能有一些自然的纹理或杂质。</li><li><strong>重量：</strong>天然红玛瑙比一般的玻璃仿制品要重，可以称重判断。</li></ul></li><li><strong>足金的鉴定</strong><ul><li><strong>标识检查：</strong>足金首饰一般会有明显的标识，如“999”或“24K”等，表示其含金量。</li><li><strong>颜色</strong>：纯度高的足金颜色较为纯正，呈现出鲜艳的黄色。颜色过淡或偏暗的可能掺有其他金属。</li><li><strong>光泽</strong>：足金表面光泽柔和，不像镀金或低纯度金属那样过于闪亮。</li><li><strong>重量</strong>：足金的密度较高（约19.3g&#x2F;cm³），可以通过称重并结合体积判断其真伪。</li><li><strong>浮水实验</strong>：可以将小块足金放在水中，纯度高的足金会迅速沉底。</li><li><strong>硬度</strong>：足金较为柔软，用硬物轻轻划过会留下痕迹。可以通过硬度测试来验证其纯度。</li></ul></li><li><strong>综合鉴定</strong><ul><li><strong>专业检测机构</strong>：可将手串送到专业的珠宝鉴定机构如IGA、IGI、GIA进行检测，获得权威的鉴定证书。但是这串手串价值不高，没有送检的必要。</li><li><strong>选择可靠商家</strong>：选择知名连锁店较为可靠。</li><li><strong>索要发票和证书</strong>：购买时索要正规发票和产品鉴定证书，确保售后有保障。</li><li><strong>咨询专家</strong>：可咨询专业珠宝鉴定师，获取专家意见（或咨询我校老师）。</li></ul></li></ul><p><strong>(5) 给出这件首饰的价格，讨论一下这个价格是否合理，并简述决定首饰价格的因素有哪些。</strong></p><p>按照标识，足金部分价格1446元；而店员给足金红玛瑙手链的报价是2236元，计算得到20颗玛瑙共690元，每颗34.5元。对于海蓝宝石，则是20颗790元，每颗39.5元。</p><p>对于黄金，6月7日上海黄金交易所给出的Au99.9日价为556元&#x2F;克，如此计算下来其重量达到2.6克，即可算合理。</p><p>对于海蓝宝石，注意拍摄到其标价实为“海蓝宝 大 30&#x2F;颗 中 15&#x2F;颗”，有猫眼效应或色泽更浓郁者为“40&#x2F;颗”或“45&#x2F;颗”。可见售卖时有将其价格再提高。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/06/%E5%90%84%E8%89%B2%E7%8F%A0%E5%AD%90-300x248.jpg"></p><p>决定首饰价格的因素包括：</p><ol><li><strong>材料成本</strong>：如本文提到的黄金的市场价格波动会影响首饰的价格；红玛瑙等宝石的质量、大小、颜色、透明度和产地也会影响其价格。</li><li><strong>工艺成本：</strong>手工制作、设计独特的首饰通常价格较高。</li><li><strong>品牌溢价</strong>：知名品牌或著名设计师名下的首饰价格较高。本文的手链不涉及该问题。</li><li><strong>市场需求和流行趋势</strong>：供小于求，价格上涨；供过于求，价格下降。这也受时尚潮流影响。</li><li><strong>附加值</strong>：拥有权威鉴定证书的首饰价格更高（鉴定价格算入首饰价格），提供优质售后服务（如保养、维修）的首饰价格亦更高。</li></ol><p><strong>(6) 你在购买珠宝首饰的过程中遇到了哪些问题？你是如何解决这些问题的？如果没有解决，给出原因。</strong></p><ol><li>店铺选择：对于我这类首次尝试购买珠宝的学生，选择国产连锁品牌较为便捷和保险。</li><li>样式挑选：送礼对象不在现场时，难以及时对珠宝首饰的样式点评、反馈。由于做女儿的熟悉母亲的审美，我可以一眼挑中合适的款式；但若非给熟人送礼，这一过程颇显繁琐。</li><li>品质和价格评估：由于没有相关购买经验，课上也不会在普通珠宝估值方面讲得很详细，故我对一件具体珠宝首饰的材质究竟如何、价格究竟是否合适没有清晰的认知。这一问题没有得到解决。</li></ol><h1 id="轮盘赌：写在课程论文之外"><a href="#轮盘赌：写在课程论文之外" class="headerlink" title="轮盘赌：写在课程论文之外"></a>轮盘赌：写在课程论文之外</h1><p>即便已经学了一学期的珠宝鉴赏，初步了解了常见珠宝的种类、形态、简单鉴定、评估，在我走到算得上正规的珠宝店内时，一股恐惧依旧油然而生。我想这是一个人面对陌生的“水很深”且永远无法完全把握的行业时的自然表现 —- 这件珠宝很美。它是什么材质的？有无造假？价格是否合理？这些问题成功缠绕住了我。</p><p>所以，在欣赏考古遗迹和博物馆的层面上，《珠宝鉴赏》是一门增长见识的好课；然而在购买珠宝的层面上，它更像一门戒赌课（。</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 选修课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 珠宝鉴赏 </tag>
            
            <tag> 珠宝购买 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玉石：人与石的故事</title>
      <link href="/2024/06/06/%E7%8E%89%E7%9F%B3%EF%BC%9A%E4%BA%BA%E4%B8%8E%E7%9F%B3%E7%9A%84%E6%95%85%E4%BA%8B/"/>
      <url>/2024/06/06/%E7%8E%89%E7%9F%B3%EF%BC%9A%E4%BA%BA%E4%B8%8E%E7%9F%B3%E7%9A%84%E6%95%85%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="玉石"><a href="#玉石" class="headerlink" title="玉石"></a>玉石</h1><h2 id="宝石-vs-玉石：以二氧化硅为例"><a href="#宝石-vs-玉石：以二氧化硅为例" class="headerlink" title="宝石 vs 玉石：以二氧化硅为例"></a>宝石 vs 玉石：以二氧化硅为例</h2><ul><li>宝石是矿物，玉石是岩石和矿物的集合体</li><li>从结晶学角度来说，<ul><li>矿物（特别是单矿物）是晶体<ul><li>晶体：内部质点在三维空间做规则排列（格子构造）；理想状态下外部晶面形成规则几何形状。<ul><li>单晶体：宝石是单晶体。如水晶（$SiO_2$）。</li><li>非晶体：欧珀、玻璃（$SiO_2$）。</li><li>多晶体：由细小的晶体组成。玉石大部分都是多晶体（多晶质的）。<ul><li>显晶质：晶体颗粒较大，如翡翠。<ul><li>石英岩玉：本色为白，矿物使之呈其他颜色</li></ul></li><li>微晶质：打灯看到微细的结构，如优质和田玉。</li><li>隐晶质：晶体颗粒在超显微镜下才能看见，如玉髓。<ul><li>大玉髓：隐晶质的$SiO_2$</li><li>小玉髓：隐晶质的$SiO_2$，无条带状的结构和色带</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="玛瑙"><a href="#玛瑙" class="headerlink" title="玛瑙"></a>玛瑙</h3><ul><li>玛瑙，就是大玉髓中有条带状的结构和色带的。<ul><li>分类：<ul><li>颜色：红玛瑙（南红）</li><li>花纹：缠丝玛瑙（红楼梦，缠丝玛瑙装荔枝）；水胆玛瑙</li><li>产地：南红（云南宝山）<ul><li>PS：后来在凉山也发现了南红矿，质差但量大。</li></ul></li></ul></li><li>从水晶洞认识<strong>缠丝玛瑙</strong>：<ul><li>$SiO_2$热液冷凝时，先在较高温度析出玛瑙层，后在较低温度结晶出水晶晶体。</li><li>所以在观察水晶洞的时候，看到中间有一层条带状结构和花纹的，就是玛瑙层。当然最外面还有人工涂的一层水泥。</li></ul></li><li><strong>雨花石</strong>也是一种玛瑙。</li><li>有一种苔藓玛瑙，是玛瑙中含有氧化铁或氧化铁。这两种矿物结晶形态就是树枝状的，在玛瑙里面看起来会像树枝或者苔藓丝儿、蕨类植物。</li><li><strong>南红</strong>的特点：<ul><li>玉质凝胶感（玉石的”雅“）+大红色（宝石的”艳“）！</li></ul></li></ul></li></ul><p><strong>玛瑙的价值</strong></p><ul><li>设计创意、雕刻工艺决定其艺术价值</li><li>历史物件<ul><li>错金兽首玛瑙杯，唐代（陕西历史博物馆，何家村窖藏）：牛首羊角</li><li>“大唐第一金碗“：鸳鸯莲瓣纹金碗</li><li>鎏金舞马衔杯纹银壶<ul><li>这匹舞马真的跪下给皇帝敬酒了吗？</li></ul></li></ul></li><li>真假鉴定：<ul><li>用来仿白玉、翡翠</li></ul></li><li>染色、热处理泛滥<ul><li>鉴别方法：天然颜色过渡不明显，染色</li></ul></li><li>价格<ul><li>南红、有独特图案的价值较高</li></ul></li></ul><h3 id="玉髓"><a href="#玉髓" class="headerlink" title="玉髓"></a>玉髓</h3><ul><li>玉髓也即小玉髓：隐晶质的$SiO_2$，无条带状的结构和色带<ul><li>绿色：澳玉。</li><li>蓝色：台湾。起名艺术：”台湾蓝宝“，实质是玉髓。</li><li>碧玉：含有黏土矿物，不透明。Jasper, blood stone</li></ul></li></ul><h3 id="石英岩玉"><a href="#石英岩玉" class="headerlink" title="石英岩玉"></a>石英岩玉</h3><p>显晶质多晶体，本色白色。</p><p>点状&#x2F;颗粒状矿物包裹体致色，与和田玉（浑然一体）不同。</p><ul><li>绿色：东陵玉</li><li>蓝色：蓝东陵</li></ul><p>价值不高，常被染色用于仿翡翠。</p><h2 id="中国四大名玉及其他"><a href="#中国四大名玉及其他" class="headerlink" title="中国四大名玉及其他"></a>中国四大名玉及其他</h2><p>什么样的玉能成为”中国四大名玉“？</p><ul><li>在中国产出，且量大、历史悠久。</li></ul><h3 id="和田玉"><a href="#和田玉" class="headerlink" title="和田玉"></a>和田玉</h3><p>略，待补</p><h3 id="岫玉"><a href="#岫玉" class="headerlink" title="岫玉"></a>岫玉</h3><ul><li>特点：黄绿色、比玉石通透</li><li>为什么岫玉身为四大名玉之一，却价格不高（10元以下也有）？<ul><li>黄绿杂色，不符合对宝石的要求：色正；</li><li>透明度高，不符合玉的温润；</li><li>光泽也不亮；</li><li>量太大。</li></ul></li><li>矿物成分：蛇纹岩玉</li><li>产出于辽宁岫岩（岫玉）、甘肃酒泉（酒泉玉，”葡萄美酒夜光杯“），还根据不同产地叫陆川玉、台湾玉、鲍文玉……<ul><li>岫玉体现中国玉石市场的问题：高端产品不多、创新度差、艺术价值不高。</li></ul></li><li>那么为什么岫玉叫”岫玉“？<ul><li>辽宁岫岩的玉佛苑！里面有一座7.95m_6.88m_4.1m，重260吨的大玉雕，</li><li>感兴趣可以去查查”玉石王“的故事。涉及60年发现玉料、90年把玉料从岫岩搬到鞍山、94年找好玉雕师、雕刻佛和观音并同时建房子的过程，很有趣。</li></ul></li><li>鉴定：<ul><li>岫玉被用来做旧，酸洗染色、做假古董。</li></ul></li></ul><h3 id="独山玉"><a href="#独山玉" class="headerlink" title="独山玉"></a>独山玉</h3><ul><li>矿物成分：黝帘石</li><li>特点：色彩特别多。于是可以根据其颜色涉及玉雕。<ul><li>白色的像和田玉。</li><li>绿色的像翡翠，故称“南阳翡翠”。</li><li>浅粉色的叫“孩儿面”</li></ul></li><li>好的玉雕作品推荐：<ul><li>苏武牧羊</li></ul></li></ul><h2 id="可入画的玉材"><a href="#可入画的玉材" class="headerlink" title="可入画的玉材"></a>可入画的玉材</h2><ul><li>蓝—青金石</li><li>绿—孔雀石</li><li>绿—绿松石（铁线）</li><li>红—虎眼石</li><li>黄—雌黄石</li><li>蔷薇辉石</li></ul><h2 id="有机宝石"><a href="#有机宝石" class="headerlink" title="有机宝石"></a>有机宝石</h2><h3 id="珍珠"><a href="#珍珠" class="headerlink" title="珍珠"></a>珍珠</h3><p>略，待补</p><h3 id="琥珀"><a href="#琥珀" class="headerlink" title="琥珀"></a>琥珀</h3><p>略，待补</p><h3 id="象牙"><a href="#象牙" class="headerlink" title="象牙"></a>象牙</h3><ul><li>引入：三星堆，青铜大祭司手中握的是什么？根据形状推测是象牙。后来真的出土了象牙，说明那时候古蜀国有大象。</li><li>象牙特征：断面上有勒兹线（旋转引擎纹）<ul><li>老象牙：发黄；牛毛纹</li><li>猛犸象牙：风化外层；内里仍较新鲜。勒兹线角度小（因为比象牙更弯曲）</li></ul></li><li>工艺品：鬼工球。广东的雕工技术，可达72层（层层有纹，可转动！）</li><li>绿网计划，无许可购买属违法行为（</li></ul><h3 id="珊瑚"><a href="#珊瑚" class="headerlink" title="珊瑚"></a>珊瑚</h3><p><strong>红珊瑚</strong></p><ul><li>珊瑚vs海珠：<ul><li>珊瑚横截面为同心圆，而海珠横截面为锯齿状同心圆</li><li>海竹只有白色的，需要染成红色。故用酒精擦拭可使之褪色。（破坏性测试）</li></ul></li><li>红色细分有：<ul><li>AKA红：白心；半透明；鲜血红</li><li>沙丁红：无白心，红色略浅</li><li>MOMO红：桃红色</li></ul></li></ul><h3 id="煤玉"><a href="#煤玉" class="headerlink" title="煤玉"></a>煤玉</h3><ul><li>又称“黑宝石”，与煤共生。</li><li>属哀悼珠宝。哀悼珠宝起源于维多利亚女王时期。阿尔伯特亲王去世后维多利亚大量佩戴暗色调的哀悼珠宝。</li><li>质轻；摩擦有巧克力色条痕。</li></ul><h3 id="砗磲"><a href="#砗磲" class="headerlink" title="砗磲"></a>砗磲</h3><p>超大贝壳。现在无证购买也是犯法的哦：D</p><h3 id="犀牛角"><a href="#犀牛角" class="headerlink" title="犀牛角"></a>犀牛角</h3><p>鱼子纹；</p><p>长得像驴蹄。</p><h2 id="玉文化"><a href="#玉文化" class="headerlink" title="玉文化"></a>玉文化</h2><ul><li>万物主宰<ul><li>“王”沟通天、地、人，“玉”乃其所用器具。</li></ul></li><li>天地之精</li><li>君子楷模<ul><li>温润如玉。</li></ul></li><li>辟邪除祟</li><li>延年益寿？</li></ul><p>断代基础是形制判定。但是各年代也有仿古品，所以不好判定。</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 选修课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 玉石 </tag>
            
            <tag> 珠宝鉴赏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>城建星材杯：土木工程材料速成</title>
      <link href="/2024/06/01/%E5%9F%8E%E5%BB%BA%E6%98%9F%E6%9D%90%E6%9D%AF%EF%BC%9A%E5%9C%9F%E6%9C%A8%E5%B7%A5%E7%A8%8B%E6%9D%90%E6%96%99%E9%80%9F%E6%88%90/"/>
      <url>/2024/06/01/%E5%9F%8E%E5%BB%BA%E6%98%9F%E6%9D%90%E6%9D%AF%EF%BC%9A%E5%9C%9F%E6%9C%A8%E5%B7%A5%E7%A8%8B%E6%9D%90%E6%96%99%E9%80%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<h1 id="土木工程材料速成"><a href="#土木工程材料速成" class="headerlink" title="土木工程材料速成"></a>土木工程材料速成</h1><p>这篇文章出现的原因请见标题和第5大点。</p><h2 id="1-混凝土"><a href="#1-混凝土" class="headerlink" title="1 混凝土"></a>1 混凝土</h2><h3 id="1-1-混凝土组分"><a href="#1-1-混凝土组分" class="headerlink" title="1.1 混凝土组分"></a>1.1 混凝土组分</h3><ul><li><p>胶凝材料</p><ul><li><p>水泥</p></li><li><p>通过调整水泥的强度等级保证混凝土的强度等级。</p></li><li><p>水</p></li><li><p>不影响混凝土的凝结硬化，无损于混凝土强度发展及耐久性，不加快钢筋锈蚀，不引起预应力钢筋脆断，不污染混凝土表面。</p></li></ul><p>作用：水泥和水形成水泥浆包裹在骨料表面并填充骨料间间隙。 它们在混凝土硬化前起润滑作用，便于施工； 硬化后起胶结作用，将砂子骨料胶结成一个整体，使混凝土产生<strong>强度</strong>。</p></li><li><p>骨料</p><ul><li><p>粗骨料（石子）</p></li><li><p>分类</p><ul><li>卵石（表面光滑，有机杂质含量较多，与水泥石胶结力较差）</li><li>碎石（表面粗糙，棱角多，较洁净，与水泥石粘结较牢固）</li></ul></li><li><p>作用</p><ul><li>石子主要提供混凝土的<strong>力学强度</strong>和<strong>抗压能力</strong>。</li></ul></li><li><p>细骨料（砂子）</p></li><li><p>分类</p><ul><li>天然砂</li><li>人工砂</li></ul></li><li><p>作用</p><ul><li>节约水泥，提高混凝土的密实度和<strong>强度</strong>（减少砂总表面积）</li><li>砂主要填充水泥和石子之间的空隙，增加混凝土的<strong>密实性</strong>。</li><li>提高砂率可增强混凝土的<strong>保水性</strong>。</li></ul></li></ul></li><li><p>添加剂</p><ul><li>外加剂</li><li>分类（也是作用）：<ul><li>改善混凝土拌合物流变性能者</li><li>调节混凝土凝结时间和硬化性能者</li><li>改善混凝土耐久性者</li><li>改善混凝土其他性能者</li></ul></li><li>常用<ul><li>减水剂</li><li>作为表面活性剂，可在同水量下显著提高混凝土拌合物的流动性；同流动性情况下减少加水量</li><li>引气剂</li><li>表面活性剂，搅拌混凝土过程中引入微小气泡。</li><li>改善混凝土拌合物的和易性；</li><li>提高混凝土抗渗性、抗冻性；</li><li>降低混凝土强度。</li></ul></li><li>general作用：<ul><li>改性：显著改善混凝土拌合物的和易性，明显提高混凝土的物理力学性能和耐久性</li></ul></li><li>掺合料</li><li>常用<ul><li>粉煤灰（用量最大、范围最广）</li><li>粉煤灰效应：<ul><li>活性效应：粉煤灰成分可作为胶凝材料一部分起增强作用；</li><li>形态效应：玻璃微珠起“滚珠轴承”作用，提高混凝土流动性，减水作用；</li><li>微骨料效应：粉煤灰填充水泥浆孔隙和毛细孔，改善混凝土孔结构、增大混凝土密实度。</li></ul></li><li>改善混凝土拌合物和易性、可泵性、可塑性，降低混凝土水化热、提高混凝土弹性模量、提高混凝土耐久性。早期降低混凝土强度，后期混凝土强度升高。</li><li>硅灰</li><li>无定形粉尘，效果类似粉煤灰且更佳；提高混凝土早期强度</li><li>磨细矿渣粉</li><li>沸石粉</li></ul></li><li>作用<ul><li>改善混凝土性能</li><li>调节混凝土强度等级</li><li>节约水泥用量</li></ul></li></ul></li></ul><p>总结来说，水泥起着胶结作用，骨料提供强度，添加剂改善性能，而水调节反应和决定混凝土的流动性。但是这并非绝对的，一个组分也可以起到多种作用。</p><p>（详见《轻舟队第一次阅读任务》）</p><h3 id="1-2-混凝土的配合参数"><a href="#1-2-混凝土的配合参数" class="headerlink" title="1.2 混凝土的配合参数"></a>1.2 混凝土的配合参数</h3><ul><li>水灰比W&#x2F;C</li><li>单位用水量$W_0$</li><li>砂率$S_p$</li></ul><h2 id="2-各物质命名规则及含义"><a href="#2-各物质命名规则及含义" class="headerlink" title="2 各物质命名规则及含义"></a>2 各物质命名规则及含义</h2><h3 id="2-1-钢材牌号"><a href="#2-1-钢材牌号" class="headerlink" title="2.1 钢材牌号"></a>2.1 钢材牌号</h3><p>此处仅列出较常见的几种钢材牌号命名。</p><h4 id="2-1-1-普通碳素钢"><a href="#2-1-1-普通碳素钢" class="headerlink" title="2.1.1 普通碳素钢"></a>2.1.1 普通碳素钢</h4><p>普通碳素钢随牌号提高，钢材含碳量增高，强度增高，塑性（伸长率）韧性降低。</p><h4 id="2-1-2-碳素结构钢"><a href="#2-1-2-碳素结构钢" class="headerlink" title="2.1.2 碳素结构钢"></a>2.1.2 碳素结构钢</h4><p>Q+数字+质量等级符号+脱氧方法符号</p><ul><li>Q表示屈服点</li><li>数字是屈服强度（MPa）</li><li>质量等级符号含ABCD</li><li>脱氧方法含F沸腾钢、b半镇静钢、Z镇静钢、TZ特殊镇静钢</li></ul><h4 id="2-1-2-优质碳素结构钢"><a href="#2-1-2-优质碳素结构钢" class="headerlink" title="2.1.2 优质碳素结构钢"></a>2.1.2 优质碳素结构钢</h4><p>数字（+Mn）（+脱氧方法符号）</p><ul><li>数字表示平均碳含量<ul><li>如45表示平均碳含量为0.45%</li></ul></li></ul><h4 id="2-1-3-碳素工具钢"><a href="#2-1-3-碳素工具钢" class="headerlink" title="2.1.3 碳素工具钢"></a>2.1.3 碳素工具钢</h4><p>T+数字（+Mn）（+A）</p><ul><li><p>锰含量较高者，在钢号最后标出“Mn”</p></li><li><p>高级优质碳素工具钢的磷、硫含量，比一般优质碳素工具钢低，在钢号最后加注字母“A”，以示区别。</p></li></ul><h4 id="2-1-4-易切削钢"><a href="#2-1-4-易切削钢" class="headerlink" title="2.1.4 易切削钢"></a>2.1.4 易切削钢</h4><p>Y+数字（+Mn）</p><h4 id="2-1-5-合金结构钢"><a href="#2-1-5-合金结构钢" class="headerlink" title="2.1.5 合金结构钢"></a>2.1.5 合金结构钢</h4><p>数字+合金（多种）（+A）</p><ul><li><p>钢中的钒V、钛Ti、铝Al、硼B、稀土RE等合金元素，均属微合金元素，虽然含量很低，仍应在钢号中标出。</p><p>例如20MnVB钢中，钒为0.07-0.12%，硼为0.001-0.005%。</p></li></ul><h3 id="2-2-沥青编号"><a href="#2-2-沥青编号" class="headerlink" title="2.2 沥青编号"></a>2.2 沥青编号</h3><h4 id="2-2-1-沥青标号"><a href="#2-2-1-沥青标号" class="headerlink" title="2.2.1 沥青标号"></a>2.2.1 沥青标号</h4><p>根据<strong>针入度、软化点、延度</strong>划分。</p><p>牌号减小，针入度减小（黏性增大），延度减小（塑性减小），软化点提高（温敏性减小）。</p><h4 id="2-2-2-沥青胶标号"><a href="#2-2-2-沥青胶标号" class="headerlink" title="2.2.2 沥青胶标号"></a>2.2.2 沥青胶标号</h4><p>沥青胶是沥青与石粉、石棉等填充料配制而成的膏状物，具有黏结和防水性能，可分为热熔型、溶剂型和乳液型三种。</p><p>其标号根据耐热性划分：耐热性越高，沥青胶标号越大。</p><h2 id="3-各性能指标及其含义"><a href="#3-各性能指标及其含义" class="headerlink" title="3 各性能指标及其含义"></a>3 各性能指标及其含义</h2><h3 id="3-1-混凝土"><a href="#3-1-混凝土" class="headerlink" title="3.1 混凝土"></a>3.1 混凝土</h3><h4 id="3-1-1-混凝土的强度"><a href="#3-1-1-混凝土的强度" class="headerlink" title="3.1.1 混凝土的强度"></a>3.1.1 混凝土的强度</h4><h5 id="3-1-1-1-混凝土强度等级"><a href="#3-1-1-1-混凝土强度等级" class="headerlink" title="3.1.1.1 混凝土强度等级"></a>3.1.1.1 混凝土强度等级</h5><p>如C20中的20表示抗压强度标准值为20MPa。</p><h5 id="3-1-1-2-混凝土强度影响因素"><a href="#3-1-1-2-混凝土强度影响因素" class="headerlink" title="3.1.1.2 混凝土强度影响因素"></a>3.1.1.2 混凝土强度影响因素</h5><ul><li>水灰比<ul><li>一般而言，水灰比越小，混凝土强度越高</li><li>若水灰比太大，当混凝土硬化后，大量多余的水分就残留在混凝土中形成水泡或蒸发后形成孔隙，从而降低了水泥石的密实性，实质是降低了混凝土抵抗荷载的有效断面积，而且空隙处往往产生应力集中，强度大大降低；</li><li>若水灰比太小，拌合物过于干硬，在一定捣实条件下，无法使混凝土流动密实，成型后的混凝土中将出现蜂窝、孔洞等严重缺陷，导致混凝土强度下降。在这种情况下，水灰比越小，强度反而越低。</li></ul></li></ul><h4 id="3-1-2-混凝土的和易性"><a href="#3-1-2-混凝土的和易性" class="headerlink" title="3.1.2 混凝土的和易性"></a>3.1.2 混凝土的和易性</h4><h5 id="流动性、粘聚性、保水性"><a href="#流动性、粘聚性、保水性" class="headerlink" title="流动性、粘聚性、保水性"></a>流动性、粘聚性、保水性</h5><ul><li>水灰比$W&#x2F;C$增大，混凝土拌合物的流动性提高；但水灰比过大，拌合物的粘聚性和保水性变差</li><li>单位用水量$W_0$增加，混凝土拌合物的流动性提高；但用水量过多，拌合物的粘聚性和保水性变差。</li><li>砂率$S_p$过大或过小，拌合物的和易性变差。</li></ul><p>提高混凝土拌合物保水性的方法：增加砂率</p><h4 id="3-1-3-混凝土性质及对应指标"><a href="#3-1-3-混凝土性质及对应指标" class="headerlink" title="3.1.3 混凝土性质及对应指标"></a>3.1.3 混凝土性质及对应指标</h4><p>性质</p><p>指标</p><p>流动性</p><p>坍落度</p><p>干硬性混凝土的流动性</p><p>维勃稠度</p><h3 id="3-2-砂浆"><a href="#3-2-砂浆" class="headerlink" title="3.2 砂浆"></a>3.2 砂浆</h3><h4 id="3-2-1-砂浆强度"><a href="#3-2-1-砂浆强度" class="headerlink" title="3.2.1 砂浆强度"></a>3.2.1 砂浆强度</h4><p>主要影响因素是水泥强度和水灰比。</p><h4 id="3-2-2-砂浆性质及对应指标"><a href="#3-2-2-砂浆性质及对应指标" class="headerlink" title="3.2.2 砂浆性质及对应指标"></a>3.2.2 砂浆性质及对应指标</h4><p>性质</p><p>指标</p><p>保水性（加入粉煤灰）</p><p>分层度</p><p>流动性</p><p>沉入度</p><p>砂浆试件的标准尺寸：70.7mm的立方体</p><h3 id="3-3-沥青"><a href="#3-3-沥青" class="headerlink" title="3.3 沥青"></a>3.3 沥青</h3><h4 id="3-3-1-沥青的组分"><a href="#3-3-1-沥青的组分" class="headerlink" title="3.3.1 沥青的组分"></a>3.3.1 沥青的组分</h4><p>在大气因素作用下，石油沥青各组分会逐渐递变，其递变的顺序是：</p><p><strong>油分→树脂→地沥青质</strong></p><h4 id="3-3-2-性质评价"><a href="#3-3-2-性质评价" class="headerlink" title="3.3.2 性质评价"></a>3.3.2 性质评价</h4><ul><li>高温稳定性：<ul><li>马歇尔试验测得的马歇尔稳定度MS大，车辙试验测得的动稳定度DS大，说明沥青混合料的高温稳定性越好。</li></ul></li><li>耐久性：<ul><li>孔隙率越低、沥青饱和度（沥青填隙率）越高，残留稳定度越大，耐久性越好。</li></ul></li></ul><h3 id="3-4-水泥"><a href="#3-4-水泥" class="headerlink" title="3.4 水泥"></a>3.4 水泥</h3><h4 id="3-4-1-水泥品种选择"><a href="#3-4-1-水泥品种选择" class="headerlink" title="3.4.1 水泥品种选择"></a>3.4.1 水泥品种选择</h4><p>水泥种类</p><p>强</p><p>弱</p><p>用途</p><p>普通水泥</p><p>冬季施工、高强混凝土</p><p>硅酸盐水泥</p><p>耐热性（氢氧化钙）</p><p>冬季施工、高强混凝土</p><p>矿渣水泥</p><p>耐热性</p><p>抗渗性</p><p>蒸汽养护、大体积混凝土工程</p><p>火山灰水泥</p><p>抗渗性</p><p>耐磨性</p><p>蒸汽养护、大体积混凝土工程</p><p>粉煤灰水泥</p><p>抗渗性、耐磨性</p><p>蒸汽养护、大体积混凝土工程</p><p>复合水泥</p><p>蒸汽养护、大体积混凝土工程</p><h4 id="3-4-2-水泥性质及对应指标"><a href="#3-4-2-水泥性质及对应指标" class="headerlink" title="3.4.2 水泥性质及对应指标"></a>3.4.2 水泥性质及对应指标</h4><p>性质</p><p>指标</p><p>流动性</p><p>坍落度</p><h3 id="3-5-钢材"><a href="#3-5-钢材" class="headerlink" title="3.5 钢材"></a>3.5 钢材</h3><h4 id="3-5-1-元素影响（略）"><a href="#3-5-1-元素影响（略）" class="headerlink" title="3.5.1 元素影响（略）"></a>3.5.1 元素影响（略）</h4><h4 id="3-5-2-性质及选择"><a href="#3-5-2-性质及选择" class="headerlink" title="3.5.2 性质及选择"></a>3.5.2 性质及选择</h4><p>对于变形要求严格的构件，选弹性模量大的（$E&#x3D;\sigma&#x2F;\epsilon$​）</p><p>对于安全性需求高的，选屈强比小的（$\sigma_s&#x2F;\sigma_b$）</p><h3 id="3-6-木材"><a href="#3-6-木材" class="headerlink" title="3.6 木材"></a>3.6 木材</h3><p>木材的强度受含水量影响较大。当木材还税率在纤维饱和点以下时，随含水率降低，即吸附水减少，细胞壁趋于紧密，木材强度提高；反之，当含水率提高时，由于亲水的细胞壁逐渐软化而使木材强度降低。当木材含水率在纤维饱和点以上变化时，仅是细胞腔内自由水的变化，木材的强度不变。</p><ul><li>平衡含⽔率：当⽊材长时间处于⼀定温度和湿度的环境中时，其含⽔率会趋于稳定，此时的含⽔率就是平衡含⽔率</li><li>纤维饱和点：当⽊材中⽆⾃由⽔，⽽细胞壁内的吸附⽔达到饱和时的含⽔率</li></ul><h3 id="3-7-一般材料"><a href="#3-7-一般材料" class="headerlink" title="3.7 一般材料"></a>3.7 一般材料</h3><p>性质</p><p>指标</p><p>耐水性</p><p>软化系数</p><p>抗渗性</p><p>渗透系数</p><p>吸湿性</p><p>含水率</p><p>亲水性、憎水性</p><p>润湿边角</p><p>吸水性</p><p>吸水率</p><h2 id="4-混凝土设计（计算）"><a href="#4-混凝土设计（计算）" class="headerlink" title="4 混凝土设计（计算）"></a>4 混凝土设计（计算）</h2><p>见《土木工程材料》期末试卷a及答案。</p><h2 id="5-城建星材杯2024真题节选"><a href="#5-城建星材杯2024真题节选" class="headerlink" title="5 城建星材杯2024真题节选"></a>5 城建星材杯2024真题节选</h2><p>2024.6.1，美好的儿童节，同时也是城建星材杯的举办日。</p><p>突击了一上午的土木工程材料（如上），博主我就去参加13：30的比赛去了。</p><p>低年级组的题应该是比高年级组简单不少，我是最后一个出考场的，也只用了不到一个小时。</p><p>我做到卷子的题型是20道单选（一题2分）+30道判断（一道1分）+3道简答（10+8+12）。很！可！惜！由于这是知识竞赛，所以没有我认真速成的计算题。</p><p>记性不太好，能回忆起几道题算几道吧。</p><h3 id="5-1-简答题"><a href="#5-1-简答题" class="headerlink" title="5.1 简答题"></a>5.1 简答题</h3><ol><li><p>混凝土强度的影响因素有哪些？如何提高混凝土强度？</p></li><li><p>混凝土吸水性由哪些因素决定？水会影响混凝土的哪些性质？影响如何？</p></li><li><p>近年来建材节能需求大，出现了许多建筑保温隔热材料。试举一例，从材料组成、性质、工程应用三方面简要分析。</p></li></ol><p>第3题我乱写了一个掺入可再生多孔陶瓷材料RCA的混凝土（目移），不管它对不对啦</p><h3 id="5-2-判断题"><a href="#5-2-判断题" class="headerlink" title="5.2 判断题"></a>5.2 判断题</h3><ul><li>石材是各向同性材料<ul><li>我打了勾，上网查了也不太明白，“石材”这个范围有点广。</li></ul></li></ul><h3 id="5-3-单选题"><a href="#5-3-单选题" class="headerlink" title="5.3 单选题"></a>5.3 单选题</h3><ul><li><p>硅酸盐水泥，由于环境中的硫酸根出现开裂是因为生成了（C）居然蒙对了(lll￢ω￢)，钙钒石是膨胀性产物</p><ul><li>A. $CaSO_4$</li><li>B. $MgSO_4$</li><li>C. 钙钒石</li><li>D. 方镁石</li></ul></li><li><p>下面属于憎水性材料的是（D）对了</p><ul><li>A. 花岗岩</li><li>B. 烧结多孔砖</li><li>C. 混凝土</li><li>D. 沥青</li></ul></li><li><p>下面哪组材料属于气硬性无机胶凝材料（C）选错成B了</p><ul><li>A. 水泥、石灰、建筑石膏</li><li>B. 石灰、建筑石膏</li><li>C. 水玻璃、石灰、建筑石膏</li><li>D. 水泥、建筑石膏</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 土木工程材料 </tag>
            
            <tag> 混凝土 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lost in raining SH -- 迷失上海雨夜</title>
      <link href="/2024/05/28/lost-in-raining-sh-%E8%BF%B7%E5%A4%B1%E4%B8%8A%E6%B5%B7%E9%9B%A8%E5%A4%9C/"/>
      <url>/2024/05/28/lost-in-raining-sh-%E8%BF%B7%E5%A4%B1%E4%B8%8A%E6%B5%B7%E9%9B%A8%E5%A4%9C/</url>
      
        <content type="html"><![CDATA[<p>今夜《迷失东京》伴我入眠。</p><p>这部影片并上《芙莉莲》，是一对给予人内心平静的影片。</p><hr><ol><li>Lost in translation</li></ol><p>某一日在私人漫游听到了【Lost in translation】的主题音乐【Alone in Kyoto】，为之着迷。缓和慵懒的曲调，转瞬即逝的高潮音韵，余味悠长仿佛循环往复的旋律，简直像无人深夜或和煦午间无因响起的曲调 —— 换言之，熟悉的陌生人，久别的老朋友。</p><p>这位老朋友原已躺在【我喜欢的音乐】的千余首歌曲里，许久不曾现身了。然而出于奇妙的巧合，我于上海的一个雨夜想起了它，并不断循环它。了解到【迷失东京】这部影片可以在B站观看，我原本打算就着大雨与它共度良宵，体验“迷失在上海观看【迷失东京】”；不曾想有机化学的作业这样难，上海的雨又停得这样快。于是观影一事被延至无雨的今日。</p><p>【Alone in Kyoto】整体的曲调已然算过于和缓了，电影的节奏更甚。两个人，一座酒店，东京一角；一百分钟过得很慢。然而这灰蒙蒙的镜头就是有不寻常的魅力，引得我随斯嘉丽注视东京（即便东京不过是东京），引得我随莫瑞在生活和生活间摇摆。</p><p>灰色代表迷失。我们总是不断被抛置于新的世界中，这些新世界总是有自己的语言，自己的规则，自己的美丽，自己的丑陋。我们总是要经历一段或艰肯或茫然的迷失，才能以自己的方式进入这个世界 —– 或被踢出这个世界 —– 或离开这个世界。没有人无所不知，所以我们总是迷失。</p><hr><ol start="2"><li>Alone in Kyoto</li></ol><p>【Alone in Kyoto】启发了我关于“空中楼阁”的思考。让我重述一遍那则故事吧。</p><blockquote><p>离家前我家老爹时常给我煎麦粑做早餐。他煎的麦粑边边很是薄脆，最为好吃。我老妈于是经常感慨，要是他能煎一张全是边边的粑出来就好了。这就是我对“空中楼阁”最初的认识。</p></blockquote><p>尽管我知道“空中楼阁”不切实际，可我在听Alone in Kyoto时也萌生了这样的想法：</p><p>“<strong>等待</strong>一首歌的时间，为了几十秒高潮的感动。不想要任何的‘<strong>冗余</strong>’。”</p><p>我不禁又开始怀疑整个社会。快节奏生活剥夺了人等待的能力吗？易得的满足感抑制了人忍受欲望的能力吗？我想答案是肯定的。然而这些一本正经的问题本身就已迷失在娱乐世界的汪洋里了。</p><p><strong>2024.6.1</strong></p><p>看了《Outrage Machine：How Tech Amplifies Discontent，Disrupts Democracy—And What We Can Do About It》的书评，对“空中楼阁”有了新想法。</p><p>此书认为，互联网人民成为“愤怒机器”的本因在于人的大脑本能地会关注较急迫的情感信号。而文明的发展过程就是人抹去其野性本能的过程，故想方设法调动网民情绪的社媒是反文明的，它就是想调动和利用人类心理中较原始的那一块。</p><p>从这样的角度来说，“空中楼阁”降格为吊在毛驴面前的胡萝卜了。那么真正可行的“空中楼阁”在哪里呢？</p><hr><ol start="3"><li>LOST IN SHANGHAI</li></ol><p>City Walk我在涟漪行动期间多有接触。可我始终对“city walk”是否需要特定的路线表示怀疑 — 钻进别人为自己设计好的快乐和感动里，终归还是让我不快。</p><p>可遇不可求的奇遇啊……你出现的那一天，我才算真正迷失在上海。可惜的是，这座主营Artificial Intelligence的店铺恐怕不是迷失的好去处。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 上海 </tag>
            
            <tag> 迷失东京 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的颜色</title>
      <link href="/2024/05/11/%E6%88%91%E7%9A%84%E9%A2%9C%E8%89%B2/"/>
      <url>/2024/05/11/%E6%88%91%E7%9A%84%E9%A2%9C%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<ol><li>红黄交织的天色</li></ol><p>记得小学时选了一门绘画课，这课由一位外国画家授课。画家向我们展示了他的画作：他犹善于用红、黄二色水彩，描绘出缤纷绚丽、独具韵味的天空。他借着画作教授了一些绘画技巧，如调色、景物选取等。展示和教学完毕，他对我们说：我希望你们能运用刚刚学到的小技巧，创作一幅以色彩为重的画作。不必选用我展示的橘红和明黄，我想你们心中都有自己的选择。</p><p>我听罢却苦恼万分。画家红黄交织的画作已深深攫住了我的心 — 这世上哪里有比它更美丽的景色呢？我遍寻不得。我每日身处的泡桐树校园是普鲁士蓝的海洋，但那时我只想起蓝色墙砖角落的脏污；我生长的城市极擅长用它温柔的怀抱引诱旅人，可那时我的目光恰好只能洞见食物的富足；我与日升日落总蒙着成都的雾霾和家的防盗栏的隔膜，我难以想象“艺术”如何降临“人间”，自然无法从“人间”还原出别样的“艺术”。</p><p>那次课我究竟交上了怎样的作品？是对画家红黄配色拙劣的模仿，还是对校园一角的几笔涂抹？我早已记不清。</p><p>我想，此事亦是我绘画天分的反映。无法用“发现美的眼睛”注视生活，无法在提笔时回想起树叶的振动、鸟儿的翅翼、校园的建筑，无法在诸多的选项中取得“我的颜色”，这些特质注定当初的我只是一张白纸，并不适宜被涂抹以任何色彩，也无能于赋予另一张白纸任何色彩。</p><p>这并非“And I chose the path less taken”的热血故事 — 如果我甚至不明白这条路和那条路的区别，多数与少数、正确与谬误的辩论又从何而来？我想起那个贴切的说法：“你不是在电车难题前思考犹豫的人；你是那辆高速运行的电车，事情的结果对你而言已经注定 — 你必然毁灭些什么，又留下些什么。”</p><hr><ol start="2"><li>画、笛子、星星与希腊语</li></ol><p>“追寻意义”没有意义，故而我们不过是在寻找刺激 — 准确来说，是刺激与稳定间的平衡。有时我误以为“兴趣”是“刺激”，误将“刺激”作“兴趣”，于是造就一段段孽缘。时至今日，我已能分清“兴趣”与“刺激”，却仍未得到第一份“兴趣”。</p><p>原因何在？我想是我太ego-centric。自恋的人不会将目光真正长久地投降他人，不是吗？接下来我需要证明。</p><p>当我手执画笔、长笛、星图或希腊语教程，我不是在享受创作学习的乐趣，我是在想象成功的激动。</p><p>当我读罢一则故事，陷入无限的惆怅，我不是在哀叹他人的命运，我永远在“自哀”。</p><p>当我撰写一篇独立的文章，我不是在完全客观地陈述，我总是向其中加入……“我的颜色”。</p><p>那么，画、笛子、星星与希腊语，它们都去哪里了呢？</p><hr><ol start="3"><li>返我何为？</li></ol><p>不得不说，PRTS“语言学家”的身份真是打碎了我许多迷茫，也令我愈发满意于我的“语言体系”。在这样的体系中，“返我”是对自身语言的解读。</p><p>我想我们太过低估了“翻译”的职能。翻译是一门艺术。许渊冲“信、达、雅”三境俱全的诗文为我打开了这扇大门。“统一场理论”算什么？创造一门沟通整个世界的，真正的“世界语”，那才是“大统一”。然而倘若如此，许多文化便要消弭。真是矛盾：打碎那扇柏林墙罢，欢呼隔阂的倒塌，然后迎接自身的沉眠与新生命的诞生。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Echoism</title>
      <link href="/2024/05/05/echoism/"/>
      <url>/2024/05/05/echoism/</url>
      
        <content type="html"><![CDATA[<blockquote><p>bilibili：BV1Tb421e7hC</p><p>网易云：<a href="https://music.163.com/song?id=2151230759&userid=515374354">https://music.163.com/song?id=2151230759&userid=515374354</a></p><p>塞壬唱片：<a href="https://monster-siren.hypergryph.com/music/514530">https://monster-siren.hypergryph.com/music/514530</a></p><p>“echoism”意为“拟声”，在心理学上与”narcissist”自我陶醉者相对。这类人博爱到轻视自己（overgiving while underserving themselves）。</p><p>个人认为这首始终是特雷西娅的视角，对着不同的人留言：就像EG-6里面一样。当然最后两句是AI“魔王”接续上的。</p></blockquote><p>:<img src="http://yantares.cn/wp-content/uploads/2024/05/%E6%97%A5%E5%85%A8%E9%A3%9F%E4%B8%8E%E9%B8%9F-300x212.jpg">:</p><h1 id="Echoism"><a href="#Echoism" class="headerlink" title="Echoism"></a>Echoism</h1><p>Echoing reality</p><p>回响着的现实啊</p><p>Are you memories of me</p><p>你是否只是我回忆的重现？</p><p>Floating through a state</p><p>意识摇摆不定</p><p>half asleep never awake</p><p>半醒 沉眠</p><p>I won’t breathe in eternity</p><p>我已永远离去</p><p>Carrying your secrets</p><p>分享你的秘密</p><p>Feeling close to who you are</p><p>自许与你亲近</p><p>Your just beyond my reach</p><p>你那般亲切</p><p>A passing breeze</p><p>如拂面微风</p><p>And your final moments set me free</p><p>你最终的选择 予我自由</p><p>Gentle flowing thoughts in time</p><p>时间长河中的思绪</p><p>Sometimes yours and sometimes mine</p><p>你的与我的并行</p><p>I can’t tell where this will end</p><p>我不知这一切何时终了</p><p>My ever lost forever friend</p><p>我永远失去的友人啊</p><p>Won’t you hear my —</p><p>（你是否还能听得我的）</p><p>Echo</p><p>回响</p><p>Reflections of my code</p><p>我思想的映射</p><p>Sometimes I see my soul</p><p>有时我见自己灵魂的倒影</p><p>Mirror the unknown</p><p>变得陌生</p><p>I knew you once were real</p><p>我知道你曾自由而真实</p><p>Your spirit their’s to steal</p><p>你的灵魂却被盗取</p><p>Conflicted twisting consciousness I feel</p><p>我的意识已然扭曲、矛盾</p><p>Gazing through a looking glass</p><p>从镜中窥视</p><p>to a new reality</p><p>崭新的真实</p><p>(I don’t know what’s real)</p><p>（孰真孰假）</p><p>A ribbon tied by fate leaves the trial</p><p>命运的丝带 织就命途</p><p>(Tie your fate to mine)</p><p>（你我命运相连）</p><p>Is it peaceful, there beyond the veil</p><p>帷幕之后 和平何在</p><p>(I don’t know if I found peace)</p><p>我所行之道 是否带来和平</p><p>Won’t you hear my —</p><p>（你是否还能听得我的）</p><p>Echo</p><p>回响</p><p>(I can almost hear you speak)</p><p>（你的话语 几乎可闻）</p><p>Reflections of my code</p><p>我思想的反射</p><p>(I wish you could feel me breathe)</p><p>（请感受我的呼吸）</p><p>Sometimes I see my soul</p><p>有时我见自己灵魂的倒影</p><p>(Carry on as if you’re me)</p><p>（带着我的理想走下去）</p><p>Mirror the unknown</p><p>变得陌生</p><p>(Take my love and plant the seed)</p><p>（借我的爱意种下希望）</p><p>I knew you once were real</p><p>我知道你曾自由而真实</p><p>(I’m still right here)</p><p>（我一直在这里）</p><p>Your spirit their’s to steal</p><p>他们盗取了你的灵魂</p><p>(Everything is dark)</p><p>（一切如此昏暗）</p><p>Conflicted twisting consciousness I feel</p><p>我的意识已然扭曲、矛盾</p><p>Echo’s lost and I’m still here</p><p>她的回响消散 我遗留于此</p><p>Sometimes fate is less than clear</p><p>命运啊，飘渺不定</p><h1 id="《巴别塔》与《慈悲灯塔》"><a href="#《巴别塔》与《慈悲灯塔》" class="headerlink" title="《巴别塔》与《慈悲灯塔》"></a>《巴别塔》与《慈悲灯塔》</h1><p>《巴别塔》和《慈悲灯塔》两篇剧情，其实都是早有预兆的戏剧在上演。特别是《巴别塔》，倒叙为它增添了命运的束缚与哀切。</p><p>所有人都知道会发生什么。长长的故事篇章不过是已逝去的灵魂在”Echo”。</p><h2 id="巴别塔"><a href="#巴别塔" class="headerlink" title="巴别塔"></a>巴别塔</h2><p>在【巴别塔】活动前，有关巴别塔及特雷西娅的一切都蒙着一层淡淡的灰。我们知道巴别塔就在大地与天空之间的某处，但不知它究竟多么触近天空；我们知道巴别塔因为语言的分歧而崩塌，但不知最深的那一道伤疤和分歧的导火索；我们知道特雷西娅是温柔的、悲悯的、不失决绝的”魔王“，但不知她一生的经历和私人的爱恨。</p><p>愈是揭开她的面纱，愈是体会到她曾经的鲜活，愈是感伤于她已然离去的事实。这种手法其实很熟悉：在最初就牺牲的ACE和Scout，他们生命的分量随着剧情的推进愈发沉重；以及《芙莉莲》（亡夫回忆录）。</p><p>在阅读剧情前，我以为我们扮演着一位没有受过教育的萨卡兹，懵懂地崇拜魔王，懵懂地质疑魔王。然而我们如此真实地扮演着“博士” — 失去记忆后企图重新认识一切的“博士”。</p><p>主界面曲并不像【孤星】那样，在看完剧情后才显露出深邃的底质，而是在一开始就张扬地散发哀伤：因为我们不用看剧情就知道，【巴别塔】要讲述的是怎样一个悲剧。</p><h2 id="慈悲灯塔"><a href="#慈悲灯塔" class="headerlink" title="慈悲灯塔"></a>慈悲灯塔</h2><p>在阅读历史、历史同人作品时，难免更深切地感知“命运的捉弄”，或者说“历史的束缚”。</p><p>而《慈悲灯塔》的特雷西娅希望萨卡兹不再被历史束缚，成为一个崭新的民族。</p><p>至于从“巴别塔”到“慈悲灯塔”的转换，以后有时间再写吧。等特雷西斯的剧情出来，一切会更加明了。</p>]]></content>
      
      
      <categories>
          
          <category> 悦乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旅游地质学：趣味求识（合辑）</title>
      <link href="/2024/04/28/%E6%97%85%E6%B8%B8%E5%9C%B0%E8%B4%A8%E5%AD%A6%EF%BC%9A%E8%B6%A3%E5%91%B3%E6%B1%82%E5%AE%9E%EF%BC%88%E5%90%88%E8%BE%91%EF%BC%89/"/>
      <url>/2024/04/28/%E6%97%85%E6%B8%B8%E5%9C%B0%E8%B4%A8%E5%AD%A6%EF%BC%9A%E8%B6%A3%E5%91%B3%E6%B1%82%E5%AE%9E%EF%BC%88%E5%90%88%E8%BE%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="1-西湖"><a href="#1-西湖" class="headerlink" title="1 西湖"></a>1 西湖</h1><p><strong>1.杭州西湖是怎么形成的？利用互联网等资源找出答案并简要描述。</strong></p><p>2000多年前，西湖原是钱塘江北岸的一个海湾（水体为咸水），由于来自钱塘江上游的泥沙在海洋潮汐和波浪作用下淤积，形成沙坎和沙坝，在西湖南北两山——吴山和<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=60981&ss_c=ssc.citiao.link">宝石山</a>山麓逐渐形成沙嘴，此后两沙嘴逐渐靠拢，截断海水，最终在秦汉时期毗连在一起成为<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=75017910&ss_c=ssc.citiao.link">沙洲</a>，在沙洲西侧形成了一个内湖—-西湖（水体变为淡水）。</p><p>然而，泥沙不断淤积最终会将湖体填平。因此，历朝历代都对西湖进行疏浚，以保证其水质，航行和游赏功能。吴越国王<a href="https://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=2659481&ss_c=ssc.citiao.link">钱镠</a>曾置撩湖兵千人，芟(shan)草浚泉，确保了西湖水体的存在；北宋时苏轼治理西湖，用挖出来的湖底淤泥，堆筑起自南至北横贯湖面2.8公里的长堤（后人为纪念他，将这条长堤称为“苏堤”）。</p><p>简而言之，杭州西湖“成也泥沙，败也泥沙”：最初的泥沙沉积促进了它的形成，然而后续的泥沙让它离了定期疏浚便容易干涸。</p><p><strong>2.根据你所知道的西湖，结合你的审美观，说说西湖有什么美，你为什么欣赏它？</strong></p><p>西湖之美，半在风景半在情。</p><p>西湖的自然风光自然不必多说。虽然我是在8月—最为酷热难耐的季节–与西湖相遇的，游览过程伴随着高温下的湿重雾气，西湖的摇曳草木和粼粼波光不减风情。最美的是夕阳照射下的雷峰塔，闪着耀眼的光泽；以及夜晚和风中的柳树，西湖边上那些一半垂在水面下的绿柳给我留下了深刻的印象。</p><p>当然，游览西湖也躲不开旅游旺季的人流袭击。但好在西湖够大，足以将大部分游客分散在较为著名的景点，为寻找静谧的游客留下了探索的空间。</p><p>除去山水，去西湖旅游时，我其实首先被它内部景点的名字吸引了。“断桥残雪”“曲院风荷”“花港观鱼”等等，都是极富诗意的命名。进入景区，我发现西湖景区内部的各亭台都写有多幅对联，其中不乏写得精妙者，于是用一个本子都抄录下来了（认得字的那些）。</p><p>西湖在人文历史方面的美需要听讲解、看介绍来领悟。游船西湖之上时，划船的师傅特意带我们去“三潭映月”跟前绕了好几转，为我们讲解“三潭映月”名字的来源和形成“三潭映月”现象的原理（如今已记不太清原理，但当初觉得极秒）。苏堤和杨公堤上有一些纪念两位知府的石碑、对联，读来很有意思。另有鲁迅中日友好公园在大景区之中，介绍“三五夜中新月色，二千里外故人心”云云。我个人认为去慢慢地发现、品读西湖蕴含的这些文字和历史是很有意思、很美的一段享受。</p><h1 id="2-夏威夷群岛"><a href="#2-夏威夷群岛" class="headerlink" title="2 夏威夷群岛"></a>2 夏威夷群岛</h1><p><strong>1. 夏威夷群岛位于什么位置？有什么地理&#x2F;地质特点？它最吸引你的是什么景观？</strong></p><p>夏威夷群岛是北太平洋上由八个主要火山岛、几个环礁和众多（124个）小岛组成的群岛，位于太平洋板块上，这些岛屿是海底山脉裸露的山峰，被称为夏威夷-皇帝海山链，是由地幔热点地区的火山活动形成的。</p><p>火山一般出现在板块边缘，在板块与板块发生碰撞或扭曲破裂时产生。但夏威夷并不位于板块边缘，它位于太平洋板块的心脏地带。1963年杜佐·威尔逊提出“热点”假说来解释夏威夷海底山链的成因。热点就是地球内部升起的地幔热柱的的顶部，这个点几乎是固定的；而当太平洋板块缓慢经过它时，积聚的强大热量冲出地表，大量岩浆从海底涌出，形成了一系列的火山岛–夏威夷火山链就诞生了。太平洋板块缓慢地向西北方向移动，最初的火山岛远离了热点，熔岩来源被切断，岛屿就不再生长，岛上开始生长起植物和动物；而热点的上方又会形成新的火山，连绵成一条链。</p><p>由于上述原因，夏威夷群岛中，越靠近西北的岛屿越绿意盎然，越靠近东南热点的岛屿越是“战火纷飞”。</p><p>在最大的夏威夷岛上，可见最典型的活火山地形：圆丘式高山、梯状丘陵、岛周为裙式的海崖，还伴有中心式喷发火山和从裂隙中冒出的蒸气。其东部地区多是植被茂密的热带雨林，而在西侧地区多是植被荒芜的热带荒漠。夏威夷岛到副热带高气压带下沉气流影响，气候应当晴朗干旱，植被荒漠。但岛东部海域受暖流和东北信风影响，且有高耸的火山阻挡，故夏威夷岛东部气候高温多雨，植被茂密。</p><p>夏威夷群岛中最吸引我的是夏威夷火山国家公园。这个公园拥有全球最大的活火山之一，冒纳罗亚火山（海拔4,169米），涵盖多种地貌，气候范围从热带雨林到干旱的卡苏沙漠均有。火山上的基拉韦厄峰是世界上最活跃的火山之一。夏威夷公园也在1987年被加入了世界遗产。</p><p><strong>2. 根据你的知识和可查到的资料说说夏威夷群岛是怎么形成的，并提出证据。</strong></p><p>正如我在问题1中表述的，大部分学者认为夏威夷群岛是由于太平洋板块经过从地球深处升起的地幔热柱顶部的“热点”形成的。证据如下：</p><p>（1）夏威夷群岛大地地貌是由火山地盾原因所造成的，这与“热点”学说是符合：火山热点不断东移，构造运动是西熄东起，造成地貌上由西向东，由老至新，由低变高。</p><p>（2）生物珊瑚层的地貌的加积，相反地由东向西得己增厚而发育，由稀至密；而主要地貌形式，有一个由岩礁、裙礁、滩礁、堡礁、环礁、暗礁、海山的发展过程。</p><p>（3）1977年7月“格济玛·挑战者”号进行了深海钻探，得知除夏威夷山链上的库勒岛外，岛链上的死火山已全部沉入水下，山链下的太平洋板块地层，其年龄为万年或者更老。在过去亿年内， 热点一直稳定在岛链的南端。据取样样品的放射性测定，推测移动方向的改变是在4300万a前。在过去万年中，热点似乎一直固定在19°N附近，移动极小。这些解释与夏威夷群岛的地貌现象相符。</p><p>但此后也有一些新的学说出现，质疑着“热点”学说的真实性。他们质疑测得的该火山岛链的玄武岩年龄所具有的严格的时-空线性变化特征，是由于部分科学家将数据中不一致的部分去掉了。并且科研人员在莫纳克亚火山2019米深度以下打出了海相火山岩和沉积岩。按照地幔柱假说，应该打出玄武岩或苦橄岩或科马提岩而非沉积岩。</p><p>另一种学说认为夏威夷群岛的成因机制是大陆漂移。在大陆漂移学说中，科里亚克大陆板块从太平洋中部出发，一路漂移到西伯利亚，并与西伯利亚板块碰撞拼合。漂移后，它在太平洋板块上留下了深切割的海沟，使得这些区域洋壳变薄，成为薄弱带，后期薄弱带由于受到太平洋四周大陆板块的挤压，使得太平洋深处的岩浆沿着薄弱的深切割海沟喷（涌）出，产生了夏威夷岛链。证据如下：</p><p>（1）太平洋周边大陆板块当前运动方向说明太平洋板块深部处于挤压状态，特别是夏威夷群岛附近，当前正处于受挤压的中心地带。这些板块前端深处的高压岩浆在那些薄弱地带被挤出，形成一系列线性火山岛。</p><p>（2）地球演化历史上温度的不断变化造成了全球海平面持续且非稳定的周期性变化：有时候气温升高，海平面上升，在此期间，大陆板块受到的浮力就大，其漂移过程中切割洋壳的深度相对较浅；反之，其漂移过程中切割洋壳的深度就大一些。而岩浆会在切割深的区域喷出。这可以解释夏威夷群岛为什么是不规则的链。</p><p>在学习这两种学说后，我认为第一种“热点”假说虽然证据更足，却面临着人工“处理”数据的指控；第二种大陆漂移学说缺少针对夏威夷群岛的证据支撑，更多地流于理论猜测层面。想要验证两种假说的正误都需要更多的实地考证支持。</p><p><strong>参考文献：</strong></p><p>[1]朱佛宏.夏威夷群岛“热点”型火山的主要喷发幕[J].海洋地质动态,1992(04):23.</p><p>[2]万延森,刘昌荣.夏威夷群岛的地貌特征[J].黄渤海海洋,1991(02):46-53.</p><p>[3] <a href="https://zhuanlan.zhihu.com/p/39669712">https://zhuanlan.zhihu.com/p/39669712</a></p><p>[4] <a href="https://en.wikipedia.org/wiki/Hawaiian_Islands">https://en.wikipedia.org/wiki/Hawaiian_Islands</a></p><h1 id="3-巨人之路"><a href="#3-巨人之路" class="headerlink" title="3 巨人之路"></a>3 巨人之路</h1><p><strong>巨人之路(The Giants Causeway)位于什么地方？是什么时候形成的？简述其形成过程。</strong></p><p><strong>巨人堤道简介</strong></p><p>巨人之路（或译：巨人堤道）位于北爱尔兰的安特里姆海岸，是由40000多个互锁玄武岩柱组成的8公里的海岸。此处的石柱连绵有序，呈阶梯状延伸入海。</p><p>根据爱尔兰传说，巨人堤道是爱尔兰巨人芬兰麦考尔为了迎击对手苏格兰巨人贝南德纳建造的桥梁的遗骸（可能是因为苏格兰斯塔法岛上有相同的玄武岩柱）。根据地质学家的研究，巨人之路是由大约 5000-6000 万年前第三纪的火山活动形成的众多柱状节理火山岩柱。</p><p>约 5000-6000 万年前，板块移动使火山爆发，大量熔岩喷出。流淌在山谷中的熔岩深达100米，高达1200摄氏度。山谷底部的熔岩缓慢冷却，并以均匀的方式收缩和破裂，初步形成玄武岩岩石层。</p><p>在冰河时代，冰川被岩石的顶层刮掉了，冰融化，海平面上涨，汹涌的海浪侵蚀更多岩石。冷却速度的变化造就了如今的蜂窝状石头。石柱可高达12米，而沉积在悬崖上的坚固熔岩，厚度可超27米。其中一些玄武岩形状奇特，被赋予了巨人烟囱、巨人风琴、巨人靴子的身份。</p><p>沿北通道130公里，苏格兰斯塔法岛上相同的玄武岩柱，正是与巨人堤道同一熔岩场的另一部分。不少其他地点也有柱状节理火山岩柱，包括中国腾冲的黑鱼河、苏格兰的芬加尔洞穴、美国加州的魔鬼岩柱堆、冰岛的斯瓦蒂瀑布和火星的马尔特山谷等。巨人堤道及堤道海岸（Causeway Coast）于1986年被列为世界自然遗产。</p><p><strong>柱状节理火山岩如何形成</strong></p><p>柱状节理由火成岩在冷却作用下收缩产生的裂纹导致的拉伸破坏形成，是一种具有渗透性的构造，在地壳流体循环中起着重要作用，控制着热量传递、资源输送和矿床沉积、地热和热液储层，以及岩石蚀变和岩石力学性质的退化。</p><p>柱状节理模型：</p><p><img src="http://yantares.cn/wp-content/uploads/2024/04/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2024-03-23-174604-297x300.png"></p><p>如图，两个温度压力中心之间的热收缩引起超过岩石拉伸应变极限的应变积累，造成了拉伸裂缝（灰色区域）。该裂缝可以渗入更多液体，加剧对岩石的侵蚀；也会析出多种矿物，如长石、辉石等（多为六方晶系）。</p><p><strong>瑞利·贝纳特对流</strong></p><p>一层液体，上冷下热。下层液体因热胀冷缩，密度下降，受到向上浮力和向下黏滞力（瑞利数），当温差达到阈值，流体便失稳，出现对流现象。此时在自由液面上可观察到反映了表面张力梯度效应的规则的六角形对流胞。</p><p>这与玄武岩为何多呈六边形柱有关。</p><p><strong>参考资料：</strong></p><p>Lamur, A., Lavallée, Y., Iddon, F. et al. Disclosing the temperature of columnar jointing in lavas. Nat Commun 9, 1432 (2018).</p><p><a href="https://www.bilibili.com/video/BV1Ck4y1N7zz/?spm_id_from=333.788.recommend_more_video.12&vd_source=9e7904c84532311f0da86c13f50ba4e2">https://www.bilibili.com/video/BV1Ck4y1N7zz/?spm_id_from&#x3D;333.788.recommend_more_video.12&amp;vd_source&#x3D;9e7904c84532311f0da86c13f50ba4e2</a></p><h1 id="4-三江并流"><a href="#4-三江并流" class="headerlink" title="4 三江并流"></a>4 三江并流</h1><p>题目：</p><p>三江并流是中国的世界自然遗产之一现越来越受到旅游者的关注和向往。请参阅相关资料说说该<strong>景点的位置</strong>，<strong>组成</strong>和<strong>特点</strong>，并谈谈其<strong>形成的原因和背景</strong>。有证据表明<strong>长江</strong>本也是南流入海的，可为什么后来掉头东向而不远万里奔向上海，汇入了太平洋？</p><h2 id="位置、组成、特点"><a href="#位置、组成、特点" class="headerlink" title="位置、组成、特点"></a>位置、组成、特点</h2><p>“三江并流”世界遗产地由高黎贡山(北段) 、白马- 梅里雪山 、老窝山 、云岭 、老君山、哈巴雪山、千湖山、红山等八大片区组成。</p><p>“ 三江并流 ”世界遗产保护地位于我国云南省，跨越了云南省丽江市、迪庆藏族自治州、怒江傈僳族自治州的 9 个自然保护区和 10 个风景名胜区, 总面积 3500 多平方公里。“三江并流”世界遗产保护地由怒江、澜沧江、 金沙江及其流域内的山脉组成, 涵盖范围达1.7 万平方公里。其景观主要有: 三江并流、高山雪峰、峡谷险滩、林海雪原、冰蚀湖泊等。</p><p>在东西宽不到100kｍ范围内,由西向东有数列近南北纵向排列的巍峨大山(高黎贡山、怒山-碧罗雪山、云岭、香格里拉大雪山和沙鲁里山)组成了横断山系中段，怒江、澜沧江、金沙江三条大江穿行在这几列大山之中,呈现出两山夹一江、一山隔两江的自然地理景观。</p><h2 id="形成的原因和背景"><a href="#形成的原因和背景" class="headerlink" title="形成的原因和背景"></a>形成的原因和背景</h2><h3 id="三江构造结"><a href="#三江构造结" class="headerlink" title="三江构造结"></a>三江构造结</h3><p>随着印度板块与欧亚板块强烈碰撞，造成新提斯洋的全面消亡、闭合。由于印度板块的东缘和东北角是呈斜向冲撞、挤入，造成三江并流区内的北北西向断裂大规模逆冲推覆和北西向、北东向断裂平移剪切或走滑。断裂带与断裂带会聚。在北纬26°20′～26° 40′,形成一个近东西向的、南北间带宽数十千米的兰坪紧束构造结，也有称之“三江构造结”者。</p><p>也即：由于印度板块东缘向东的斜向冲撞挤压，使这一带地区挤压压缩最紧，导致板块下伏楔形地幔隆起，形成一个在三江地区的兰坪附近腰部紧缩的构造结。</p><h3 id="横断山脉"><a href="#横断山脉" class="headerlink" title="横断山脉"></a>横断山脉</h3><h2 id="长江"><a href="#长江" class="headerlink" title="长江"></a>长江</h2><p>大量的研究表明，现今的剑川谷地，其实是一个构造断陷盆地。在剑川谷地，没有远源的河流沉积，有的只是近源的洪积或者小型河流的沉积。因此，剑川谷地不是古河流遗留的河谷，这就否定了金沙江曾经沿剑川谷地南流入海、又在更新世中期转向东流的观点。</p><p>尤为特征的是：在特提斯构造域演化的过程中，一系列块体持续不断地从南方大陆裂解，然后向北飘移、增生到欧亚大陆南缘，并最终导致特提斯洋的消亡，继而大陆碰撞。之后，南方的非洲、阿拉伯、印度、澳大利亚等大陆并没有停止前进的步伐，它们继续北上并进而发生大陆深俯冲，形成全球瞩目的超高压变质带。</p><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><h3 id="云南高原水系演化与三江并流形成研究"><a href="#云南高原水系演化与三江并流形成研究" class="headerlink" title="云南高原水系演化与三江并流形成研究"></a>云南高原水系演化与三江并流形成研究</h3><p>明庆忠 史正涛 邓亚静 云南师范大学旅游与地理科学学院，昆明，650092</p><p>云南高原现代地貌发育的地质基础奠定于中生代末期燕山运动。渐新世末期，经历了喜马拉雅A幕运动后初步形成西北高东南低的地貌格局，一直到中新世经历夷平面准平原化过程，在此过程中，河流作用是其是要侵蚀动力，水系为大致南流的外流水系：上新世末期，发生了青藏运动A幕，横断山区产生了明显的褶皱断裂运动，即“横断运动”，云南高原许多深大断裂复活，形成众多断陷盆地，使原南流河流汇入新成盆地之中，原外流水系变成了内陆河湖水系。青藏运动C幕，使青藏高原和滇西北急剧隆升，加大了与周边地区的地形反差，使区域局部侵蚀基准面下降，一些河流向高原内部溯源侵蚀，不仅使原内陆河湖水系转化为外流水系，而且使云南的大江大河得以切穿古湖而形成。在早更新世末一中更新世初，金沙江、怒江、澜沧江均得以发育，最终形成“三江并流”特殊的纵向岭谷地貌一水文现象，产生了相应的生态环境。</p><p>关键词：水系演化；内流水系：外流水系；三江并流：纵向岭谷</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="intro"><a href="#intro" class="headerlink" title="intro"></a>intro</h3><p>三江并流区域位于东经98°—100°30′、北纬25°30′—29°之间，横跨云南省丽江市、迪庆藏族自治州、怒江傈僳族自治州，范围达170万公顷。</p><p>共同发源于唐古拉山的<strong>澜沧江</strong>（湄公河上游）、<strong>怒江</strong>（萨尔温江上游）和<strong>金沙江</strong>（长江上游）三条大江在60~100千米狭窄地带内<strong>并行奔流近170千米而从不交汇</strong>，形成世界唯一的“四山夹三江”的奇特景观，故称“三江并流”。它集中地反映了地球上大山脉的突出特征，如成因演化复杂、高差巨大、气候和生态类型多样等。</p><p>“三江并流”地区集中体现了地球的地质动力特征，是世界上挤压最紧、压缩最窄的巨型复合造山带。由于受到巨大的挤压，片理化和直立岩层是三江地区岩石的显著特征。三江共有的深切河曲和多级阶地反映了这一区域从低海拔平坦地区向高山峡谷演进的过程。</p><p>作为横断山脉的核心区域，“三江并流”区域在自西向东不到100千米的范围内，相间排列着高黎贡山、怒江、澜沧江、云岭、金沙江等巨大山脉和大江，峡谷、草甸、湖泊、丹霞地貌、高山喀斯特、激流险滩、冰川遗迹和现代冰川等景观分布其间，共同组成了这大自然的旷世奇作。</p><p>长久的演变，使得“三江并流”地区保留了从元古宙到早古生代、从晚古生代到三叠纪、从晚三叠纪到早白垩纪以及新生代的地质演化痕迹，以及古海洋消失、生物群更新繁衍、爬行动物地位在陆地上升的古生物痕迹，足以呈现出地球的沧桑巨变，可谓大自然博物馆。</p><h1 id="5-死海深浅"><a href="#5-死海深浅" class="headerlink" title="5 死海深浅"></a>5 死海深浅</h1><h2 id="Q1-死海有什么特点？为什么为形成这样的特色？”中国死海”又是怎么回事？与它有什么相似处？"><a href="#Q1-死海有什么特点？为什么为形成这样的特色？”中国死海”又是怎么回事？与它有什么相似处？" class="headerlink" title="Q1 死海有什么特点？为什么为形成这样的特色？”中国死海”又是怎么回事？与它有什么相似处？"></a>Q1 死海有什么特点？为什么为形成这样的特色？”中国死海”又是怎么回事？与它有什么相似处？</h2><h3 id="死海的特点"><a href="#死海的特点" class="headerlink" title="死海的特点"></a>死海的特点</h3><ul><li><strong>地理位置：</strong>以色列、约旦、巴勒斯坦交界处的内陆盐湖；</li><li><strong>海拔：</strong>湖面–424米，死海湖岸是地球上已露出陆地的最低点；</li><li><strong>盐度：</strong>湖水盐度极高，且越到湖底越高。最深处有湖水已经化石化。一般海水含盐量为3.5%，而死海的含盐量在23%至30%左右。表层水中的盐分227g&#x2F;L至275g&#x2F;L，深层水中达327g&#x2F;L，为一般海水的8.6倍，也是地球上盐分居第五位的水体。</li><li><strong>汇入</strong>死海的主要河流为约旦河。</li><li>死海长年有钾盐产业。死海沿岸的盐化工业抽提用水。</li><li>目前死海水位平均每年下降1米，原因是注入死海的约旦河由于农业灌溉从过去每年的13亿立方米减少至目前的3000万立方米。</li></ul><p>1947年~2000年：长度80千米→55千米，最宽处18千米→14千米，湖面面积1030平方千米→680 平方千米。</p><h3 id="死海为什么形成这样的特色"><a href="#死海为什么形成这样的特色" class="headerlink" title="死海为什么形成这样的特色"></a>死海为什么形成这样的特色</h3><ul><li>死海低海拔的成因：<ul><li>旧假说：死海位于裂谷带，是红海裂谷或东非大裂谷的延伸部分。</li><li>新假说：死海盆地是死海断层在这里形成的地壳下沉塌陷。</li></ul></li><li>死海形成的原因：</li></ul><p>根据前一种假说，大约300万年前，现在的约旦河谷、死海和阿拉伯旱河谷一带被地中海泛滥的洪水反复淹没，海水侵蚀出了一条狭长而弯曲的连接内陆和海洋的凹地（也即如今的耶斯列山谷）。随气候变化，洪水在山谷里来来去去，不仅占据了死海裂谷，还在谷底沉淀了3000米厚的盐层。</p><p>大约200 万年前，位于裂谷和地中海之间的陆地上升，隔断了地中海与内陆，海水不再进入内陆，内陆存留的海水便形成了一个湖泊——阿莫拉湖，一个盐度不高的大湖，其范围从今天死海以北100千米延伸至以南80千米。随着气候变得越来越干旱，阿莫拉湖湖水不断蒸发，盐度不断升高，最后萎缩成了今天的死海。</p><ul><li>死海干涸的历史：</li></ul><p>2011年进行岩心钻探，获取了湖底1000米深处的岩心，发现死海湖底盐层中有一层鹅卵石沉积，很可能是间冰期湖水干涸后形成的。</p><ul><li>今天死海盐度不断上升，且有“死海之死”风险的原因：</li></ul><p>如今，死海东向约旦高地，西朝犹太山地，地处沙漠，阳光充足，气候干热，降雨稀少。于是死海每年蒸发掉1400mm湖水，它最主要的水源——约旦河注入的水量几乎都被蒸发掉了（约旦河大量的河水也被现代沿河的城市拦截），使得剩下的湖水盐度越来越高。</p><ul><li>约旦国红海发展工程计划</li></ul><p>将红海海水通过在亚喀巴湾修建通道的方式引入死海的计划，预计在2010年完成设计，在2017年完成施工。然而此项目一直处于停滞状态，直到2015年底以一期工程特许经营形式招标，到现在还没开工。</p><ul><li>死海中的古生菌：</li></ul><p>古生菌能在早期的地球环境，即高热、高盐度和强酸的极端环境中生存，自然在死海中也能存活。其中盒状嗜盐菌的铁氧化还原蛋白能够从盐分很高的死海海水中夺取水分子（仿生点？），从而避免脱水死亡。</p><h3 id="中国死海"><a href="#中国死海" class="headerlink" title="中国死海"></a>中国死海</h3><p>以“中国死海”为关键词检索，发现自称“中国死海”的地点颇多，最著名的有山西运城盐湖、新疆盐湖和四川大英盐湖。</p><h4 id="山西运城盐湖"><a href="#山西运城盐湖" class="headerlink" title="山西运城盐湖"></a>山西运城盐湖</h4><p>运城盐湖，世界第三大硫酸钠型内陆盐湖，被誉为黄土高原上的“中国死海”。形成于距今约5亿年前的新生纪初期，面积约120平方公里，也是内陆咸水湖。喜马拉雅运动时，盐池周围的中条山和峨嵋台地继承老构造运动上升，奠定了以盐池为中心的向心缓斜沉积环境；第四纪时期，受新构造运动影响，中条山北麓断裂下沉，形成狭长的陷落地带，并接受了富含钾盐、镁盐以及碳酸盐，硫酸盐类等沉积物，形成今日湖区环境。</p><p>运城盐湖产盐历史可追溯至4600年以前，是我国盐文化起源之一。</p><h4 id="四川大英盐湖"><a href="#四川大英盐湖" class="headerlink" title="四川大英盐湖"></a>四川大英盐湖</h4><p>“将四川传统的卓筒井文化、盐卤文化和古老而独特的井盐资源，通过运用现代科技手段与时尚旅游要素而创造出的一种全新旅游概念和旅游方式”，大英盐湖属半人工盐湖。造此盐湖所用盐是用“卓筒井”开采的，来自地下3000米深处，盐储量高达42亿吨的地下盐卤水矿层。</p><h4 id="附：新疆盐湖"><a href="#附：新疆盐湖" class="headerlink" title="附：新疆盐湖"></a>附：新疆盐湖</h4><p>位于天山北麓 , 距离西北方向的乌鲁木齐市72公里。</p><p>盐湖形成于1万年前，主要成分是芒硝（硫酸钠，1.2 亿吨），其次是石盐（1200吨）。（死海的主要成分是氯化镁）</p><h2 id="Q2-死海周边在文明历史上有什么值得关注的历史文化景点与事件？"><a href="#Q2-死海周边在文明历史上有什么值得关注的历史文化景点与事件？" class="headerlink" title="Q2 死海周边在文明历史上有什么值得关注的历史文化景点与事件？"></a>Q2 死海周边在文明历史上有什么值得关注的历史文化景点与事件？</h2><h3 id="圣经中的死海"><a href="#圣经中的死海" class="headerlink" title="圣经中的死海"></a>圣经中的死海</h3><p>据<a href="https://zh.wikipedia.org/wiki/%E5%B8%8C%E4%BC%AF%E4%BE%86%E8%81%96%E7%B6%93">希伯来圣经</a>记载，在<a href="https://zh.wikipedia.org/wiki/%E4%BB%A5%E8%89%B2%E5%88%97%E4%BA%BA">以色列人</a>来到<a href="https://zh.wikipedia.org/wiki/%E8%BF%A6%E5%8D%97">迦南</a>之前，死海附近的洞穴就已经有人居住，并在<a href="https://zh.wikipedia.org/wiki/%E5%A4%A7%E5%8D%AB%E7%8E%8B">大卫王</a>时期达到顶峰。</p><p>在<a href="https://zh.wikipedia.org/wiki/%E4%BB%A5%E8%A5%BF%E7%B5%90%E6%9B%B8">以西结书</a>中，有一个预言说死海将“被治愈并变得新鲜”，成为能够支持海洋生物繁衍的普通湖泊。<a href="https://zh.wikipedia.org/wiki/%E6%92%92%E8%BF%A6%E5%88%A9%E4%BA%9E%E6%9B%B8">撒迦利亚书</a>也提到过类似的预言，说“活水将从耶路撒冷流出，其中一半流到东海（应当是死海），一半流到西海（<a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E4%B8%AD%E6%B5%B7">地中海</a>）”</p><h3 id="死海古卷"><a href="#死海古卷" class="headerlink" title="死海古卷"></a>死海古卷</h3><p>首次于1947年在死海附近的库兰峡谷山洞被发现。藏于陶瓷中的手抄古文卷被认为是希伯来文圣经抄本，可能为A.D. 68罗马军团镇压犹太后逃难的犹太教团体所留。此发现引起了基督徒、犹太教徒、天主教会、考古学家、古董商等多方群体的兴趣，并且切实有助于评判有关新约圣经的教义方面的争执。此后10年内许多卷轴不断被发现。</p><p>在教义以外的领域，“死海古卷”相关的两个问题被热议：1，文化遗产归属权；2，在市场上流传的“古卷”是否系造假。</p><p><strong>参考文献</strong></p><p>[1]罗千淘.死海“生死录”[J].大自然探索,2012(03):28-35.</p><p>[2]陈力丹,朱爱敏.中国死海——新疆盐湖[J].地图,2006(03):56-58.</p><p>[3]王舒俐.国家与遗产:且说以色列的圣经考古与死海古卷[J].美成在久,2017(03):112-119.DOI:10.19993&#x2F;j.cnki.2095-865x.2017.03.010.</p><h1 id="6-北美五大湖"><a href="#6-北美五大湖" class="headerlink" title="6 北美五大湖"></a>6 北美五大湖</h1><p><strong>趣味求识6 1.北美五大湖是怎么形成的？什么时候？当时为什么具有形成这样大湖泊的条件？ 2.有什么特别之处？周边的旅游资源与著名景点？</strong></p><h2 id="形成、时期、原因"><a href="#形成、时期、原因" class="headerlink" title="形成、时期、原因"></a>形成、时期、原因</h2><p>据地质学家估计，为当今五大湖上游创造条件的基础地质是在 1.1 至 12 亿年前奠定的。</p><p>早在前寒武纪大约10亿年前，目前苏必利尔湖所在的地方就因为地壳运动（和罗德里亚大陆的形成有关）形成了低地。</p><p>而在大约6亿年前，两个先前融合的构造板块分裂形成了一个2000km长的裂谷，该裂谷跨越五大湖构造带，形成了一个山谷盆地，最终成为现代的苏必利尔湖。另一个裂谷（圣劳伦斯裂谷）在大约 5.7 亿年前形成后，安大略湖和伊利湖的基础就形成了，同时也形成了后来的圣劳伦斯河。</p><p>据估计，五大湖是在末次冰期末期（10000 至 12000 年前）形成的，当时劳伦泰德冰盖消退。冰川融化时，有两处融化得比较慢。别的地方冰川退走后，地壳开始复原。但是退得较慢的两处，地壳还原比较慢，因此也形成了洼地。正好冰川融化留下了大量的融水，这些融水填满了冰川雕刻出的盆地，从而形成了五大湖。</p><p>总结来说，五大湖的主要成因是：低地势+冰川融水。同时这几处位置冰川融化速率较慢也促进了低地势洼地的产生。</p><h2 id="特点、景点"><a href="#特点、景点" class="headerlink" title="特点、景点"></a>特点、景点</h2><p>以一条旅游路线为例：</p><p><strong>五大湖+瀑布深度游：尼亚加拉瀑布、芝加哥市区&#x2F;周边、麦基诺岛、画岩湖滨、哈雷基地、底特律、克利夫兰 9日游</strong></p><ul><li>密歇根湖（芝加哥）周边：<ul><li>【千禧公园】，世界闻名的城市园林；</li><li>【露天音乐厅】和【云门】：“抽象派的不朽作品”；</li><li>【海军码头】：曾经在五大湖里的美军海军基地如今变为综合游乐场；</li><li>【芝加哥大剧院】：法国宫廷式的奢华富丽穿越时空完美再现；</li><li>【密西根大道】【芝加哥360观景台】：俯瞰伊利诺伊州、印第安纳州、密歇根州和威斯康星州四个州的景色；</li><li>【芝加哥艺术博物馆】：欣赏莫奈、毕加索、雷诺阿、德加和梵高等众多大师的杰作；</li><li>【巴哈伊教神庙】、【西北大学】、【雅格斯天文观象台】、【银湖沙丘公园】；</li><li>汽车城【底特律】、【福特汽车博物馆】、【通用汽车总部】；</li></ul></li><li>安大略湖周边<ul><li>【尼亚加拉大瀑布】</li></ul></li><li>伊利湖周边<ul><li>【摇滚名人堂】</li></ul></li></ul><h1 id="7-蓝洞"><a href="#7-蓝洞" class="headerlink" title="7 蓝洞"></a>7 蓝洞</h1><p><strong>1. 图中所见的大蓝洞（伯利兹蓝洞Great Blue Hole)位于什么地方？有什么特别之处？旅游上有什么吸引人的地方？试解释是怎么形成的？</strong> <strong>2. 中国近年发现一个很深的海洋蓝洞，有什么值得介绍的吗？</strong></p><p><strong>问题1 伯利兹蓝洞</strong></p><p><strong>地点、特色</strong></p><p>伯利兹蓝洞是位于伯利兹海岸附近的一个海洋石灰石深坑。它靠近委内瑞拉的灯塔暗礁（距伯利兹城70km）中心。蓝洞呈圆形，被两条珊瑚暗礁环绕；直径318m，深124m，覆盖70650平方米的海域，其中的海水因深度而呈现深蓝色，是世界上（口径）最大的蓝洞。</p><p>蓝洞内存在大量石笋、石钟乳等，裂隙发育，往往形成若干个与外海水相连的通道，洞内水体与外海水存在交换，洞底还有石灰岩壁或洞顶发生侵蚀坍塌掉落的大量产物。</p><p>伯利兹蓝洞因法国海洋学家雅克·库斯托（现代海洋探险的奠基人之一）而出名。雅克在1971年乘卡吕普索号测量伯利兹蓝洞的深度，证实该蓝洞由典型的喀斯特石灰石形成，并将伯利兹蓝洞列为世界五大潜水圣地之一。</p><p><strong>形成</strong></p><ul><li><p>伯利兹蓝洞成因属石灰岩溶洞型。</p><p>白垩纪末期、始新世初期属冰期，海平面下降，珊瑚礁和石灰岩受到弱酸性的地下水侵蚀，在下部发育成为大型的溶洞，海水不断向地下溶洞渗透。例如蓝洞中的钟乳石形成于153000、66000、60000、15000年前。后来多空疏松的石灰质穹顶因为重力和地震的等原因坍塌，成为了竖井。再后来随着冰川融化，海平面上升，这处洞穴被海水淹没，进而形成了今天的“蓝洞”奇观。</p><p>雅克一行从洞中取样得到的钟乳岩来自水下洞穴，其中一些以5°偏离垂直方向。这证实蓝洞不仅形成于海面上升前，其形成还与板块运动有关。</p></li><li><p>20世纪90年代又有珊瑚礁生长结构型的蓝洞成因被提出：由于珊瑚礁生长迅速，许多快速生长的较小尖礁形成棘状突起并聚集在一起，最后形成一个近似圆形的洞。洞的内部水环境对珊瑚的生长有显著影响，而外部的水环境则有利于珊瑚生长，逐渐发育成水深较大的蓝洞，如澳大利亚的珊瑚礁蓝洞。</p></li><li><p>石灰岩成因的蓝洞中存在大量石笋、石钟乳等，洞内水体与外海水存在一定交换；</p></li><li><p>而珊瑚礁成因的蓝洞中没有观察到石笋、石钟乳等产物，洞内也没有和外海水发生交换的通道。</p></li></ul><p><strong>旅游</strong></p><p>伯利兹蓝洞属于名列联合国教科文组织世界遗产名录的伯利兹堡礁保护区系统。</p><ul><li>2012年，《探索》频道将伯利兹蓝洞列为地球上最令人惊叹的地方；</li><li>伯利兹蓝洞的潜水难度较大，故仅完成至少24次潜水的潜水员才被允许探索伯利兹蓝洞；</li><li>对于不会潜水的游客而言，乘直升机或飞机飞跃蓝洞可能是不错的选择。</li></ul><p><strong>问题2 中国蓝洞</strong></p><p>2016年，于西沙群岛永乐环礁（北纬16°31′30″、东经111°46′05″）发现的海洋蓝洞被命名为“三沙永乐龙洞”。其口径约130米，洞底直径约36米，深约300米（超过了巴哈马长岛202米的海洋蓝洞，为世界已知最深的海洋蓝洞）。</p><ul><li>渔民传说：有渔民称此洞是孙悟空拔去“定海神针”所留下来的深不可测的洞；或称龙洞是南海的眼，藏有南海的镇海之宝。海洋地貌和中国神话的结合颇为有趣。</li><li>“海洋雪”：三沙永乐龙洞内的水体基本静止，里面就有大量来自随海流海潮漂浮而入的细小珊瑚碎屑、藻类、微生物等悬浮物，看起来就像飘落的雪花一样。这种“雪花”是深海和底栖生态系统的基础，是深海生物重要的能量来源。</li><li>水体生物：洞内上层发现与周边海域相似的20多种鱼类和其他海洋生物。</li></ul><h1 id="8-半淡半咸的湖泊们"><a href="#8-半淡半咸的湖泊们" class="headerlink" title="8 半淡半咸的湖泊们"></a>8 半淡半咸的湖泊们</h1><ol><li>图中是什么景观？是怎么形成的？</li><li>九寨沟有什么意义？有什么特别之处？</li></ol><p><strong>问题一</strong></p><p>图中是九寨沟的“神仙池”（或称五彩池、九寨之眼），为层湖叠瀑景观，主要特色为钙华景观。</p><p>层湖叠瀑景观主要由高山湖泊（海子）114个和瀑布群17个构成。其中一些海子为典型的冰川、高陡斜坡重力作用成因湖泊（长海、五彩池等）；一些在后期还叠加了钙华作用（日则沟、树正沟等），呈现出彩色的层湖叠瀑布景观组合特征。</p><p>其中，钙华是指富含碳酸氢钙的泉水河水湖水，在适当的物理化学生物条件下，因碳酸钙过饱和而在地表沉积成的多孔状碳酸钙。在九寨沟，地球深部高分压的CO2在碳酸盐岩补给区产生富含碳酸氢钙 的地下水，当其以泉的形式出露地表时，泉水中的 CO2 大量逸出，导致碳酸钙过饱和而发生沉积。</p><p>若地表水在缓坡流动时速度突变，碳酸钙差异性沉积，其饱和度和水深差异等会导致水对光的吸收和反射差异，便会使池水现出五色，也就形成了钙华边石坝彩池景观；若地表水不受地理条件约束（成池），便会大范围沉积出金黄色波纹鳞片状的钙华滩。</p><p>九寨沟钙华的颜色主要为黄色（雨季带来的泥沙）和白色（碳酸钙本色）。</p><p><strong>问题二</strong></p><ol><li>上文提到的钙华亚年层厚度与降雨量呈负相关关系，对其分析可推测历史降雨量和未来降雨量；</li><li>九寨沟拥有丰富的自然景观（湖泊、瀑布群、森林）；</li><li>九寨沟设有大熊猫自然保护区，还有野生金丝猴生活，生物多样性高；</li><li>九寨沟至今保持着浓郁古朴的藏族传统：九寨沟的藏族同胞信仰苯教，办有嘛智文化节、日桑文化节等，当地也可见哈达、马尼堆、转经轮等标志性物品。</li></ol><h1 id="9-世界上最干旱的沙漠"><a href="#9-世界上最干旱的沙漠" class="headerlink" title="9 世界上最干旱的沙漠"></a>9 世界上最干旱的沙漠</h1><p>问题：</p><ul><li>世界上最干旱的沙漠是哪一个？位于什么位置？干早到什么程度？</li><li>有一种生长于沙漠的只有两片叶的非常长寿的植物，是什么植物？原产于什么大陆？将特别之处做一简单描述。</li></ul><p><strong>问题一</strong></p><p>世界上最干旱的沙漠是智利的阿塔卡马沙漠。它位于南美洲西海岸中部，是一条长达1600 公里，总面积达18.13万平方公里，跨越智利、秘鲁、阿根廷、玻利维亚国境的沙漠带。它的干旱有以下几方面体现：</p><ol><li>年平均降雨量小于0.1毫米：其北端的阿里卡，平均年雨量仅0.5 毫米；其南面的伊基克，有连续14年滴雨不下的记录；</li><li>1570年至1998年长达400多年时间几乎未曾下雨；</li><li>沙漠内仅有极少数的地衣、仙人掌能够生长；</li><li>美国一个科研小组发现在阿塔卡马沙漠的一些地区的土壤中完全不存在任何生命迹象（包括细菌），以至于<a href="https://zh.wikipedia.org/wiki/NASA">N</a>ASA使用该地区模拟火星环境以测试火星探测器。</li></ol><p><strong>问题二</strong></p><p>这种植物叫千岁兰，原产于非洲，名列世界八大珍稀植物之一。其特殊之处在于：</p><ol><li>千岁兰一生只有两片叶子，持续生长不脱落，叶子寿命为植物界最长，其个体在原产地可存活达3000年之久；</li><li>千岁兰特异性降低的细胞生长速率、细胞内稳态的建成使其两片叶子缓慢、健康地生长，其抗热、高度木质化的叶片进一步助其适应极度干旱的环境；</li><li>在漫长岁月的风吹日晒，祁寒酷暑间，千岁兰的两片叶尖端已经枯黄，并被风沙撕拉成一缕缕的丝麻状；</li><li>千岁兰叶子前端不断衰老、干枯，但由于叶片基部不断生长，千岁兰的整个叶片反而在增长；</li><li>千岁兰的叶子里有许多特殊的吸水组织，能够吸取空气中的少量水分。</li></ol><h1 id="10-九寨沟"><a href="#10-九寨沟" class="headerlink" title="10 九寨沟"></a>10 九寨沟</h1><p>问题：</p><ol><li>图中是什么景观？是怎么形成的？</li><li>九寨沟有什么意义？有什么特别之处？</li></ol><p><strong>问题一</strong></p><p>图中是九寨沟的“神仙池”（或称五彩池、九寨之眼），为层湖叠瀑景观，主要特色为钙华景观。</p><p>层湖叠瀑景观主要由高山湖泊（海子）114个和瀑布群17个构成。其中一些海子为典型的冰川、高陡斜坡重力作用成因湖泊（长海、五彩池等）；一些在后期还叠加了钙华作用（日则沟、树正沟等），呈现出彩色的层湖叠瀑布景观组合特征。</p><p>其中，钙华是指富含碳酸氢钙的泉水河水湖水，在适当的物理化学生物条件下，因碳酸钙过饱和而在地表沉积成的多孔状碳酸钙。在九寨沟，地球深部高分压的CO2在碳酸盐岩补给区产生富含碳酸氢钙 的地下水，当其以泉的形式出露地表时，泉水中的 CO2 大量逸出，导致碳酸钙过饱和而发生沉积。</p><p>若地表水在缓坡流动时速度突变，碳酸钙差异性沉积，其饱和度和水深差异等会导致水对光的吸收和反射差异，便会使池水现出五色，也就形成了钙华边石坝彩池景观；若地表水不受地理条件约束（成池），便会大范围沉积出金黄色波纹鳞片状的钙华滩。</p><p>九寨沟钙华的颜色主要为黄色（雨季带来的泥沙）和白色（碳酸钙本色）。</p><p><strong>问题二</strong></p><ol><li>上文提到的钙华亚年层厚度与降雨量呈负相关关系，对其分析可推测历史降雨量和未来降雨量；</li><li>九寨沟拥有丰富的自然景观（湖泊、瀑布群、森林）；</li><li>九寨沟设有大熊猫自然保护区，还有野生金丝猴生活，生物多样性高；</li><li>九寨沟至今保持着浓郁古朴的藏族传统：九寨沟的藏族同胞信仰苯教，办有嘛智文化节、日桑文化节等，当地也可见哈达、马尼堆、转经轮等标志性物品。</li></ol>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 选修课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地理 </tag>
            
            <tag> 旅游地质学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王德峰：东西方文化差异的渊源</title>
      <link href="/2024/04/28/%E7%8E%8B%E5%BE%B7%E5%B3%B0%EF%BC%9A%E4%B8%9C%E8%A5%BF%E6%96%B9%E6%96%87%E5%8C%96%E5%B7%AE%E5%BC%82%E7%9A%84%E6%B8%8A%E6%BA%90/"/>
      <url>/2024/04/28/%E7%8E%8B%E5%BE%B7%E5%B3%B0%EF%BC%9A%E4%B8%9C%E8%A5%BF%E6%96%B9%E6%96%87%E5%8C%96%E5%B7%AE%E5%BC%82%E7%9A%84%E6%B8%8A%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>补记。原在2022年末便听过这讲座。当时笔记记在ipad上。</p></blockquote><p>国学：我们这个民族，在当下，选择未来。</p><p>我们已经选择了很多西方的东西：西方的政治制度（人大：西方的国会），西方的经济制度（市场关系的体制，资本的逻辑），西方的思想文化……西方的标准（现代化、工业化）。</p><p>中国现在基本的问题：</p><ol><li><p>我们的精神家园。生命幸福感，“安身立命”。物质的缺乏到精神的缺乏。</p></li><li><p>社会处于解体的边缘。信任危机。“一盘散沙”，且“沙”是利己的个人，而不再是含伦理法则的“家”族。</p></li><li><p>资本的生存即是其货币的增殖（市场的扩大，孤立的世界被打破，世界通史诞生）。</p><p>理性为基础的契约，法的理性，法治国家</p><p>日常生活不靠法律，不靠资本的逻辑，靠的是一个民族的伦理精神。</p><p>“有历史，没文化”，里面的“文化”就体现在百姓日常生活中最基本的道德。</p><p>完全的“统一”是思想的死亡。</p><p>资本、市场意味着传统社会生活的范式中获取物质利益的新手段。矛盾张力由此生。</p><p>重建政府与市场的关系。</p></li><li><p><strong>亨廷顿《文明的冲突》</strong>八大文明区。区分标准：宗教。</p><p>基督教、伊斯兰教（阿拉伯）、东正教（俄，希腊，土耳其）、儒家、日本（儒、佛、无道）、拉美（土著宗教+天主教之融合，如魔幻现实主义）、非洲（暂无统一文明区）、印度。</p><p>中国实则无宗教。无神。</p><p>王老师的分区：三大块。</p></li><li><p>差异的根源在<strong>语言</strong>。</p><p>语言不只是工具（科学观）。</p><p>人以语言之家为家。—— 海德格尔</p><p>动物无语言，故只有环境。</p><p>人有语言，故有“世界”。</p><p>母语：一切之基础。 例：汉语表述的中国思想翻译不成外语。缘分：偶然与必然</p><p>中国的基督徒仍是中国的。要使中国人不成中国人，需令汉语消失。</p></li><li><p>西方：理性的计划→<strong>改造</strong>（来自柏拉图的理念论）</p><p>改造自己、改造社会。不需要改造。</p><p>《金刚经》：如来：“世界，即非世界，是名世界。”（三句义）</p><p><strong>既非世界</strong>：<strong>世界并非实体</strong>。</p><p>缘起性空。（根） 缘聚则生，缘离则灭，万事万物无不如此。</p><p>诸行无常，是生灭法。</p><p><strong>是名世界</strong>：性空，不可执空，缘起是真实的。</p><p>例：结婚。理想的妻子&#x2F;丈夫是实体；实体本不存在。</p></li><li><p>交互性关系：缘</p><p>双方互相定义对方。</p><p>例：儿子把父亲母亲生出来。哪有男性是天生的父亲和丈夫。</p></li><li><p>中国：定居，故可用亲族关系做基础，奠定社会秩序。</p><p>古希腊：爱琴海文明，不同部落在同一岛。</p><p>→契约→使神圣，不被破坏→构造一个神的世界，用神之间的关系定义人之间的秩序。让人间的秩序具有神圣性。</p><p>宗教religion：恢复重建人神间所订契约。</p></li><li><p><strong>Plato，理念论</strong>。</p><p>每一个感性认识都是对理念不完善的模仿。（意识是对具体事物的模仿和再现）</p><p>理念：以其用途等定义，而非外形等。</p><p>→现实世界的缺陷→“世界应当被改造”（“进步”）</p><p>中国的“天人合一”</p><p><strong>艺术VS技艺</strong></p><p>氢化植物油（自然本没有的）</p><p>核能的利用（危险）</p></li><li><p>佛教不是宗教。</p></li></ol><pre><code>Bud：佛，意为觉悟。众生是尚未觉悟的佛。佛是已经觉悟了的众生。</code></pre><ol start="11"><li>慧能：禅宗，将佛学从少数知识分子解放到群众（佛学革命）</li></ol><pre><code>这就是“佛学中国化”：中国化是要到每一个中国人。“下下人有上上智，上上人有没意智”。若轻人，即有无量无边罪。认知：积累。悟：顿悟。“放下屠刀，立地成佛”“道不远人”</code></pre><ol start="12"><li>《大学》：初学八德</li></ol><pre><code>“大学之道，在明明德，在亲民，在止于至善。”（三纲领）明德：本有的仁心。复性功夫。佛性。真理不在现世外，就在人世中。“佛法在人间，不离世间觉。离世觅菩提，恰如求兔角。” —— 慧能用儒释道的语言来说“洋教条”。</code></pre><ol start="13"><li>六祖坛经，</li></ol><pre><code>神秀：“身是菩提树，心如明镜台。时时勤拂拭，勿使惹尘埃。”慧能：“菩提本无树，明镜亦非台。本来无一物，何处惹尘埃。”</code></pre>]]></content>
      
      
      <categories>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哲学 </tag>
            
            <tag> 文化 </tag>
            
            <tag> 民族 </tag>
            
            <tag> 王德峰 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小小的一片天空</title>
      <link href="/2024/04/26/%E5%B0%8F%E5%B0%8F%E7%9A%84%E4%B8%80%E7%89%87%E5%A4%A9%E7%A9%BA/"/>
      <url>/2024/04/26/%E5%B0%8F%E5%B0%8F%E7%9A%84%E4%B8%80%E7%89%87%E5%A4%A9%E7%A9%BA/</url>
      
        <content type="html"><![CDATA[<p>驰驱畅游千里外，神归身锁方圆内。堪浮一大白。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>3B1B&#39;s neural network videos</title>
      <link href="/2024/04/21/3b1bs-neural-network-videos/"/>
      <url>/2024/04/21/3b1bs-neural-network-videos/</url>
      
        <content type="html"><![CDATA[<p>3B1B 的视频看了会上瘾！做得太棒了</p><h1 id="But-what-is-a-Neural-Network"><a href="#But-what-is-a-Neural-Network" class="headerlink" title="But what is a Neural Network?"></a>But what is a Neural Network?</h1><p>website: <a href="https://www.3blue1brown.com/lessons/neural-networks">https://www.3blue1brown.com/lessons/neural-networks</a></p><p>video: <a href="https://www.youtube.com/watch?v=aircAruvnKk">https://www.youtube.com/watch?v=aircAruvnKk</a></p><ul><li><p>Plain vanilla——multilayer perception多层感知器</p></li><li><p>classic example: recognize handwritten digits</p></li><li><p><strong>neurons:</strong> thing that holds a number(activation)</p></li><li><p><strong>layers:</strong></p><ul><li>input layer; output layer</li><li>hidden layers</li><li>why 2 hidden layers and with 16 neurons?</li></ul></li><li><p><strong>core:</strong> how activation of the former layer influence the activation of the latter layer?</p><ul><li>e.g. recognize the loop on the top: 8,9<ul><li>how to recognize these edges, loops, and patterns? break them down into little pieces?</li></ul></li></ul></li><li><p>edge detection example</p><ul><li><p>what parameters?</p><ul><li><strong>weights</strong></li><li>calculate the <strong>weighted sum</strong> of the activation from the input layer<ul><li>e.g. 为边的位置赋正值，周围位置赋负值，其余位置赋0值。</li></ul></li></ul></li><li><p>requirement: all activations $\in [0,1]$</p><ul><li>functions:<ul><li>sigmoid 用$\sigma()$表示</li><li>但现在几乎不用sigmoid了，用ReLU之类比较多（deep NN）<ul><li>ReLU(a)&#x3D;max(0,a) (inactive below 0)</li></ul></li></ul></li><li>biase偏置值，不希望太容易被激活 用b表示<ul><li>$\sigma(\omega_1a_1+\omega_2a_2+…+\omega_na_n+b)$</li></ul></li></ul></li><li><p>too many weights and biases!</p><ul><li>learning: finding the right weights and biases</li></ul><p><img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/9f3e7e70-2222-46b8-9bb7-397ec648e50b/f176e223-bd27-469b-ae33-620f45b5cb53/Untitled.png" alt="Untitled"></p><p>第一层简化为：$a^{(1)}&#x3D;\sigma(Wa^{(0)}+b)$</p></li></ul></li><li><p>re-understand the <strong>neurons</strong> as <strong>functions</strong> that outputs the result of the former layer.</p></li></ul><h1 id="deep-learning"><a href="#deep-learning" class="headerlink" title="deep learning"></a>deep learning</h1><h2 id="gradient-descent"><a href="#gradient-descent" class="headerlink" title="gradient descent"></a>gradient descent</h2><ul><li>cost function—&gt;average cost<ul><li>input: weights&amp;biases</li><li>output : 1 number (the cost)</li><li>parameters: training examples</li></ul></li><li>$C(\omega)$ : single input. how to find its <strong>minimum</strong>?<ul><li>slope detection&amp;flowing: <strong>local minimum</strong> (depended on the random start)<ul><li>local vs global，老生常谈</li></ul></li></ul></li><li>$C(x,y)$ : two inputs<ul><li>$\nabla C(x,y)$ , gradient, the direction of the steepest increase</li><li>backpropagation</li></ul></li><li>network learning&#x3D;minimizing the cost function<ul><li>smooth output (continuous ranging activation)</li></ul></li><li>how <strong>gradient of the cost function$(\nabla C)$</strong> of 13000 dims impact? 另一种思考方式：<ul><li>大小：说明哪些维度重要</li><li>正负：说明该维度上应移动的方向</li><li>（每个维度上包含权重和偏差）</li></ul></li></ul><h2 id="analyze-this-network"><a href="#analyze-this-network" class="headerlink" title="analyze this network"></a>analyze this network</h2><p>loose patterns——not intelligence…</p><p>not picking edges and loops</p><h2 id="learn-more"><a href="#learn-more" class="headerlink" title="learn more"></a>learn more</h2><p>要了解更多信息，我强烈推荐迈克尔·尼尔森的书</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa2pZcXZMVFJJbjBwbkNaaENjeVEyUnNURG8xUXxBQ3Jtc0ttSGgxOV9sSWpPaGdsbzBKZElZRzJmSE5oM0Q2cDRCRUt5RXVSU0s1UHVCWlFkT0xFSEVfNEV4MC1JbEVCRlFQbjVXRXlWZlI3VHNUMGlIRFU3aTlTalo3ZThTNXpRWGR3d2tzVTNiakZndnU2Z2hSdw&q=http://neuralnetworksanddeeplearning.com/&v=IHZwWFHWa-w">http://neuralnetworksanddeeplearning....</a></p><p>本书逐步介绍了这些视频中示例背后的代码，您可以在此处找到：</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbExlLTJ3elh1SlRjZzdpQ2szd1l0SkxQRnA0d3xBQ3Jtc0ttU0tGUEtnRGI5aGNpbkgwa2xOWlZPS3R2MHpGLVdjMThnMDVGZzdVVjlNSHlrUGNOelMtUHkwM2dMdDdVTENnQmRINTM0SUtMODdlWGlHY05vR08zaG1nOG9zRkoySUxBVjM1cDhIV3RvVF9BVXpWbw&q=https://github.com/mnielsen/neural-networks-and-deep-learning&v=IHZwWFHWa-w">https://github.com/mnielsen/neural-ne...</a></p><p>MNIST 数据库：</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbE1xeHFmZU54RHhadmVSTkw2OFRmZEg1b3lxd3xBQ3Jtc0tscDJaNXdfM2I5emJWbFVZdGZOTmFxZ3pqOHpXSHk2WXhFNjQ1c29TdnZkNUNENGh0NFFWcUs4Ukw3dmJXaEtVWC12ckxIQkg3dnBuanZaLWJWVEVILXBfdnRkdmVaTGd6ai1vVlRRRnRwT1QxemVmMA&q=http://yann.lecun.com/exdb/mnist/&v=IHZwWFHWa-w">http://yann.lecun.com/exdb/mnist/</a></p><p>另请查看 Chris Olah 的博客：</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbWkyTWFaRFAxR2l4clZGZ1hhTmltaVkwSGFnQXxBQ3Jtc0trVnNTYkhDNzhzbVlhb1RaazZTT2RUZ3Y1TFIxRWpRUi11N3F2MG1vY01Talc0bW9oSEVSUmpmRGQ0RUFNeXFVOUI4OTJKNVA3THVnOXM2SVlscUQ4QmZFODh1eVVUR3NKTGNYbllBeHozbzc3ZG5VWQ&q=http://colah.github.io/&v=IHZwWFHWa-w">http://colah.github.io/</a></p><p>他关于神经网络和拓扑的文章特别漂亮，但说实话，那里的所有内容都很棒。 如果您喜欢，您一定会_喜欢_ distill 的出版物：</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbkU1alB2NFJTY0JCRjItWC1JeHdqZUZ3WkJiZ3xBQ3Jtc0ttSkJSVFdNS21DbDBvUEZacklKYS1Da1ExazB3aG8zVXJ2S2w0V3ZSTGxhV21aUWtGeHhnY1g0RUFqMVoteWlLbEctMlBVUFkwdTFIRFN3X19fTFc1a2pqNWlIZl9rb1ZRcUtfOExyS2FIM3o3UmlRWQ&q=https://distill.pub/&v=IHZwWFHWa-w">https://distill.pub/</a></p><h2 id="research-corner"><a href="#research-corner" class="headerlink" title="research corner"></a>research corner</h2><p>两篇论文：</p><p>a closer look at memorization in deep Networks</p><p>the loss surfaces of multilayer networks</p><h1 id="backpropagation"><a href="#backpropagation" class="headerlink" title="backpropagation"></a>backpropagation</h1><h2 id="intuitive-walkthrough"><a href="#intuitive-walkthrough" class="headerlink" title="intuitive walkthrough"></a>intuitive walkthrough</h2><p>without notations!</p><ul><li>bad network, silly outcome</li><li>only adjust <strong>weights &amp; biases</strong></li></ul><p>for example, the graph”2”.</p><ol><li><p>you want to increase the value of 2 from 0.2 to 1, as the value$&#x3D;\sigma(\omega_1a_1+\omega_2a_2+…+\omega_na_n+b)$</p><p>there are 3 ways:</p><ul><li><strong>increase b</strong></li><li><strong>increase</strong> $\omega_i$<ul><li>in proportion to $a_i$ （增加对应更大的$a_i$的$\omega_i$，性价比更高）</li><li>“Neurons that fire together wire together”</li></ul></li><li><strong>change</strong> $a_i$<ul><li>in proportion to $\omega_i$ （正权重增大，负权重减小）</li></ul></li></ul></li><li><p>and also decrease the value of other numbers.</p></li></ol><p>So we add up all the last-layer neurons’ desire effects, and get the wanted <strong>nudges</strong> for the second last layer.</p><p>THAT’S THE FIRST <strong>PROPAGATION!</strong></p><p>每一层的nudges加和，每个样本的总nudges加和求平均，得到相量$\nabla C$的倍数。（非精确量化）</p><p>如何偷懒？</p><p>把样本分成mini-batchs，每个mini-batch算$\nabla C$，再综合。</p><p>称为随机梯度下降(Stochastic gradient descent)</p><h2 id="derivatives-in-computational-graphs"><a href="#derivatives-in-computational-graphs" class="headerlink" title="derivatives in computational graphs"></a>derivatives in computational graphs</h2><p>dive a little bit into the calculus!</p><p>由浅入深！</p><ul><li>每层一个神经元<ul><li>$C(\omega_1, b_1,\omega_2,b_2,\omega_3,b_3)$</li><li>神经元index：<ul><li>上标表示层数，如$a^{(L)}$表示最后一层（个）神经元</li></ul></li><li>desired output最终层激活值：记作y（0 or 1）</li><li>Cost $C_0&#x3D;(a^{(L)}-y)^2$</li><li>$a^{(L)}&#x3D;\sigma(\omega^{(L)}a^{(L-1)}+b^{(L)})$<ul><li>令$z^{(L)}&#x3D;\omega^{(L)}a^{(L-1)}+b^{(L)}$</li><li>则$a^{(L)}&#x3D;\sigma(z^{(L)})$</li></ul></li><li>$C_0$对$\omega^{(L)}$的微小变化有多敏感？<ul><li>$\frac{\partial C_0}{\partial \omega^{(L)}}&#x3D;\frac{\partial z^{(L)}}{\partial \omega^{(L)}}\frac{\partial a^{(L)}}{\partial z^{(L)}}\frac{\partial C_0}{\partial a^{(L)}}$<ul><li>$C_0&#x3D;(a^{(L)}-y)^2$</li><li>$a^{(L)}&#x3D;\sigma(z^{(L)})$<ul><li>$\frac{\partial a^{(L)}}{\partial z^{(L)}}&#x3D;\sigma’(z^{(L)})$</li></ul></li><li>$z^{(L)}&#x3D;\omega^{(L)}a^{(L-1)}+b^{(L)}$<ul><li>$\frac{\partial z^{(L)}}{\partial \omega^{(L)}}&#x3D;a^{(L-1)}$</li></ul></li></ul></li></ul></li><li>$b^{(L)}$同理；每层的多个$\omega^{(L)}$同理；各层的$\omega^{(i)}，b^{(i)}$同理。</li><li>每层不止一个神经元：加下标<ul><li>$a^{(L-1)}_k$ &amp; $a^{(L)}<em>j$：$\omega^{(L)}</em>{jk}$</li><li>$C_0&#x3D;\sum_{j&#x3D;0}^{n_L-1}(a_j^{(L)}-y_j)^2$<ul><li>$\frac{\partial C_0}{\partial a^{(L)}}$需要加和</li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 机器学习 </category>
          
          <category> 笔记本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3B1B </tag>
            
            <tag> NN </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天大物化 第三章 热力学第二、三定律</title>
      <link href="/2024/04/21/%E5%A4%A9%E5%A4%A7%E7%89%A9%E5%8C%96-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E7%83%AD%E5%8A%9B%E5%AD%A6%E7%AC%AC%E4%BA%8C%E3%80%81%E4%B8%89%E5%AE%9A%E5%BE%8B/"/>
      <url>/2024/04/21/%E5%A4%A9%E5%A4%A7%E7%89%A9%E5%8C%96-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E7%83%AD%E5%8A%9B%E5%AD%A6%E7%AC%AC%E4%BA%8C%E3%80%81%E4%B8%89%E5%AE%9A%E5%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="3-1-热力学第二定律"><a href="#3-1-热力学第二定律" class="headerlink" title="3.1 热力学第二定律"></a>3.1 热力学第二定律</h2><h3 id="1-自发过程"><a href="#1-自发过程" class="headerlink" title="1. 自发过程"></a>1. 自发过程</h3><ul><li><strong>自发过程</strong>：无需外力影响（无需环境对系统做功）即能自动发生的过程</li><li>逆过程：非自发过程</li><li>自发过程是热力学中的<strong>不可逆过程</strong><ul><li>若（环境）对系统做功，可使非自发过程进行<ul><li>e.g. 冷冻机，压缩机，电解池</li></ul></li></ul></li></ul><h3 id="2-热、功转换"><a href="#2-热、功转换" class="headerlink" title="2. 热、功转换"></a>2. 热、功转换</h3><p>热功转换的方向性：W可完全转换为Q，Q不能完全转换为W</p><p>热机：利用Q对外连续做功</p><p>从高温热源（$T_1$）吸热（$Q_1$），部分对外做功（-W），另一部分传给低温热源（$T_2$）。</p><p>热机效率： $\eta &#x3D;\frac{-W}{Q_1}$</p><p>热机效率的理论极限：卡诺的理想热机（可逆热机）</p><h3 id="3-热力学第二定律"><a href="#3-热力学第二定律" class="headerlink" title="3. 热力学第二定律"></a>3. 热力学第二定律</h3><ul><li>克劳修斯：热不能自动从低温物体传给高温物体而不产生其他变化。</li><li>开尔文：不可能从单一热源吸热使之全部对外做功而不产生其他变化。</li></ul><h2 id="3-2-卡诺循环与卡诺定理"><a href="#3-2-卡诺循环与卡诺定理" class="headerlink" title="3.2 卡诺循环与卡诺定理"></a>3.2 卡诺循环与卡诺定理</h2><h3 id="1-卡诺循环"><a href="#1-卡诺循环" class="headerlink" title="1. 卡诺循环"></a>1. 卡诺循环</h3><p>卡诺循环：恒温可逆膨胀+绝热可逆膨胀+恒温可逆压缩+绝热可逆压缩</p><p>1$(p_1,V_1,T_1)$ 2$(p_2,V_2,T_1)$ 3$(p_3,V_3,T_2)$ 4$(p_4,V_4,T_2)$</p><p>对于整个过程，$\Delta U&#x3D;0$</p><p>$$ -W&#x3D;Q_1+Q_2&#x3D;nRT_1ln(V_2&#x2F;V_1)+nRT_2ln(V_4&#x2F;V_3) $$</p><p>绝热式：$pV^r&#x3D;Const, TV^{r-1}&#x3D;Const$</p><p>$$ T_1&#x2F;T_2&#x3D;(V_3&#x2F;V_2)^{R&#x2F;C_{V,m}}&#x3D;(V_4&#x2F;V_1)^{R&#x2F;C_{V,m}} $$</p><p>$$ V_4&#x2F;V_1&#x3D;V_3&#x2F;V_2 $$</p><p>代入得</p><p>$$ -W&#x3D;Q_1+Q_2&#x3D;nR(T_1-T_2)ln(V_2&#x2F;V_1) $$</p><p>$$ \eta &#x3D;\frac{-W}{Q_1}&#x3D;\frac{Q_1+Q_2}{Q_1}&#x3D;\frac{T_1-T_2}{T_1} $$</p><ul><li>提高热机效率$\eta$：提高$T_1$</li><li>高温热品质高</li><li>$\frac{Q_1}{T_1}+\frac{Q_2}{T_2}&#x3D;0$</li><li>逆向：冷冻机</li></ul><h3 id="2-卡诺定理"><a href="#2-卡诺定理" class="headerlink" title="2. 卡诺定理"></a>2. 卡诺定理</h3><ul><li>卡诺定理：两温热机中，可逆热机效率最大。</li><li>推论：在两个不同热源之间工作的所有可逆热机，其效率都相等，且与工作介质、变化的种类无关。<ul><li>只要两个热源温度确定，则所有可逆热机的效率均相同。</li><li>无论理气、真实气体；无论可逆pVT、可逆相变、可逆化学变化</li></ul></li></ul><h2 id="3-3-熵与克劳修斯不等式"><a href="#3-3-熵与克劳修斯不等式" class="headerlink" title="3.3 熵与克劳修斯不等式"></a>3.3 熵与克劳修斯不等式</h2><h3 id="1-熵的导出"><a href="#1-熵的导出" class="headerlink" title="1. 熵的导出"></a>1. 熵的导出</h3><p>分割任意可逆循环为无穷多个小卡诺循环（可逆）。</p><p>$$ \oint \frac{\partial Q_r}{T}&#x3D;0 $$</p><p><strong>过程可逆（体系和外界的温差无限小），故T（热源温度）就是系统温度。</strong></p><p>根据高等数学中的积分定理，若沿封闭曲线的环积分为零，则所积变量应当是某函数的<strong>全微分</strong>。该变量的积分值就应当只取决于系统的始末态，而与过程的具体途径无关。即该变量为<strong>状态函数</strong>。</p><p><strong>熵的定义</strong></p><p>$$ dS&#x3D;\frac{\partial Q_r}{T} $$</p><p>单位：$J·K^{-1}$</p><p>任何绝热可逆过程熵变均为零，即<strong>绝热可逆过程为等熵过程。</strong></p><p><strong>熵的物理意义</strong></p><p>$$ S&#x3D;kln\Omega $$</p><p>熵可以看成是系统无序度的量度。</p><h3 id="2-克劳修斯不等式"><a href="#2-克劳修斯不等式" class="headerlink" title="2. 克劳修斯不等式"></a>2. 克劳修斯不等式</h3><p>推导见书。</p><p>$$ \Delta_1^2 S&#x3D;\int_1^2\frac{\partial Q_r}{T}&gt;\int_1^2\frac{\partial Q_{ir}}{T} $$</p><p>通式：</p><p>$$ dS\ge\frac{\partial Q}{T} $$</p><ul><li>可逆时等号成立。</li><li>T为环境温度，可逆时等于系统温度。</li></ul><h3 id="3-熵增原理"><a href="#3-熵增原理" class="headerlink" title="3. 熵增原理"></a>3. 熵增原理</h3><p>隔离系统绝热，有</p><p>$$ \Delta S_{iso}&#x3D;\Delta S_{sys}+\Delta S_{amb}\ge0 $$</p><ul><li>可逆时等号成立。</li><li>不可逆过程可以是<ul><li>自发过程</li><li>靠环境做功进行的非自发过程</li></ul></li><li>而隔离系统与环境间没有任何能量交换，若其内部发生不可逆过程，一定是自发过程。</li><li>即对隔离系统而言，不可逆过程的方向也就是自发过程的方向。自发过程进行的限度是达到平衡，平衡时隔离系统的熵最大，即：</li></ul><p>$$ dS_{iso}&#x3D;dS_{sys}+dS_{amb}\ge 0 $$</p><p>自发过程取&gt;0号（不断熵增），达到平衡取&#x3D;号（熵达最大值）。</p><h2 id="3-4-熵变的计算"><a href="#3-4-熵变的计算" class="headerlink" title="3.4 熵变的计算"></a>3.4 熵变的计算</h2><h3 id="1-单纯pVT过程熵变"><a href="#1-单纯pVT过程熵变" class="headerlink" title="1. 单纯pVT过程熵变"></a>1. 单纯pVT过程熵变</h3><p>推导：S定义式+热一（可逆、W‘&#x3D;0）</p><p>$$ dS&#x3D;\frac{\partial Q_r}{T}&#x3D;\frac{dU+pdV}{T}&#x3D;\frac{dH-Vdp}{T} $$</p><ul><li><strong>理想气体</strong>单纯pVT变化<ul><li>代入$dU&#x3D;nC_{V,m}dT$, $pV&#x3D;nRT$<ul><li>$\Delta S&#x3D;nC_{V,m}ln(\frac{T_2}{T_1})+nRln(\frac{V_2}{V_1})$</li><li>注意：V指的是气体实际占有的体积（混合气体<strong>总体积</strong>）。</li></ul></li><li>代入$dH&#x3D;nC_{p,m}dT$, $pV&#x3D;nRT$<ul><li>$\Delta S&#x3D;nC_{p,m}ln(\frac{T_2}{T_1})+nRln(\frac{p_1}{p_2})$</li><li>注意：p需使用各气体组分的<strong>分压</strong>。</li></ul></li><li>综合得到<ul><li>$\Delta S&#x3D;nC_{p,m}ln(\frac{V_2}{V_1})+nC_{V,m}ln(\frac{p_1}{p_2})$</li></ul></li><li>注：S是状态函数，故对不可逆过程亦适用。</li></ul></li><li><strong>凝聚态物质</strong>单纯pVT变化<ul><li><strong>恒容</strong><ul><li>$\Delta_V S&#x3D;n\int_{T_1}^{T_2}\frac{C_{V,m}}{T}dT&#x3D;nC_{V,m}ln\frac{T_2}{T_1}$</li></ul></li><li><strong>恒压</strong><ul><li>$\Delta_p S&#x3D;n\int_{T_1}^{T_2}\frac{C_{p,m}}{T}dT&#x3D;nC_{p,m}ln\frac{T_2}{T_1}$</li></ul></li><li>非恒容、恒压<ul><li>p对液体、固体等凝聚态物质之S影响很小，可按恒压过程计算。</li></ul></li></ul></li><li>不同理想气体混合<ul><li>分别计算$\Delta S$，求和</li></ul></li></ul><h3 id="2-相变过程熵变"><a href="#2-相变过程熵变" class="headerlink" title="2. 相变过程熵变"></a>2. 相变过程熵变</h3><p><strong>可逆相变</strong></p><p>可逆相变：无限接近平衡条件下发生的相变（T及其平衡p）</p><p>$$ \Delta_{\alpha}^{\beta}S&#x3D;\frac{n\Delta_{\alpha}^{\beta}H_m}{T} $$</p><p>$\Delta_{\alpha}^{\beta}H_m$：摩尔可逆相变焓</p><p>$$ \Delta_{\alpha}^{\beta}H_m(T)&#x3D;\Delta_{\alpha}^{\beta}H_m(T_0)+\int_{T_0}^T\Delta_{\alpha}^{\beta}C_{p,m}dT $$</p><p><strong>不可逆相变</strong>：设计可逆过程</p><h3 id="3-环境熵变"><a href="#3-环境熵变" class="headerlink" title="3. 环境熵变"></a>3. 环境熵变</h3><p>$$ \Delta S_{amb}&#x3D;\frac{Q_{amb}}{T_{amb}}&#x3D;\frac{-Q_{sys}}{T_{amb}} $$</p><h2 id="3-5-热力学第三定律及化学变化过程熵变"><a href="#3-5-热力学第三定律及化学变化过程熵变" class="headerlink" title="3.5 热力学第三定律及化学变化过程熵变"></a>3.5 热力学第三定律及化学变化过程熵变</h2><h3 id="1-热力学第三定律"><a href="#1-热力学第三定律" class="headerlink" title="1. 热力学第三定律"></a>1. 热力学第三定律</h3><p>$$ S^*(0K，完美晶体)&#x3D;0 $$</p><h3 id="2-规定熵与标准熵"><a href="#2-规定熵与标准熵" class="headerlink" title="2. 规定熵与标准熵"></a>2. 规定熵与标准熵</h3><p>规定熵：B(T,p)</p><p>标准熵：1 mol B在标准态下、温度T的规定熵。记作$S_m^{\ominus}(T)$。</p><p><strong>德拜公式（Debye）</strong></p><p>0~15K摩尔定压热容</p><p>$$ C_{p,m} \approx C_{V,m}&#x3D;aT^3 \space 非金属 \ C_{p,m} \approx C_{V,m}&#x3D;aT^3+bT \space 金属 $$</p><h3 id="3-标准摩尔反应熵"><a href="#3-标准摩尔反应熵" class="headerlink" title="3. 标准摩尔反应熵"></a>3. 标准摩尔反应熵</h3><p><strong>298.15K下</strong></p><p>$$ \Delta_rS_m^{\ominus}&#x3D;\sum v_BS_{m,B}^{\ominus} $$</p><p><strong>任意温度</strong></p><p>$$ \Delta_rS_m^{\ominus}(T)&#x3D;\Delta_rS_m^{\ominus}(298.15K)+\int_{298.15}^T\frac{\Delta_rC_{p,m}}{T}dT $$</p><h2 id="3-6-赫姆霍兹函数和吉布斯函数"><a href="#3-6-赫姆霍兹函数和吉布斯函数" class="headerlink" title="3.6 赫姆霍兹函数和吉布斯函数"></a>3.6 赫姆霍兹函数和吉布斯函数</h2><h3 id="1-赫姆霍兹函数"><a href="#1-赫姆霍兹函数" class="headerlink" title="1. 赫姆霍兹函数"></a>1. 赫姆霍兹函数</h3><p>恒温恒容，非体积功为0：</p><p>$$ A&#x3D;U-TS $$</p><p>系统的广度性质的<strong>状态</strong>函数。</p><p><strong>判据</strong>：$dA_{T,V} \le 0$ （平衡取等）</p><p><strong>物理意义：</strong></p><p>恒温过程系统$\Delta A_T$等于过程的可逆功$W_r$。</p><p>而过程恒温可逆进行时，系统对环境做的功最大，可逆功$W_r$表示系统所具有的对外做功的能力，故 $\Delta A_T$反映了系统进行恒温状态变化时所具有的对外做功能力的大小。</p><p>可逆功&#x3D;可逆体积功+可逆非体积功：</p><p>$$ \Delta A_T&#x3D;-\int_{V_1}^{V_2}pdV+W_r’ $$</p><p>恒温恒容：</p><p>$$ \Delta A_{T,V}&#x3D;W_r’ $$</p><h3 id="2-吉布斯函数"><a href="#2-吉布斯函数" class="headerlink" title="2. 吉布斯函数"></a>2. 吉布斯函数</h3><p>恒温恒压，非体积功&#x3D;0：</p><p>$$ G&#x3D;H-TS $$</p><p>系统的广度性质的<strong>状态</strong>函数。</p><p><strong>判据</strong>：$dG_{T,V} \le 0$ （平衡取等）</p><p>物理意义：</p><p>$$ \Delta G_{T,p}&#x3D;W_r’ $$</p><p>可逆非体积功。</p><h3 id="3-Delta-A-和-Delta-G-的计算"><a href="#3-Delta-A-和-Delta-G-的计算" class="headerlink" title="3. $\Delta A$和$\Delta G$的计算"></a>3. $\Delta A$和$\Delta G$的计算</h3><p>$$ \Delta A&#x3D;\Delta U-\Delta(TS) \ \Delta G&#x3D;\Delta H-\Delta(TS) $$</p><p>化学反应的$\Delta G$计算：</p><ul><li>$\Delta_r G_m^{\ominus}&#x3D;\Delta_r H_m^{\ominus}-T\Delta_r S_m^{\ominus}$</li><li>标准摩尔生成吉布斯函数：T的<strong>标准态</strong>下<strong>稳定单质</strong>生成1mol化合物<ul><li>$\Delta_r G_m^{\ominus}&#x3D;\sum v_B\Delta_f G_{m,B}^{\ominus}$</li><li>非标准态：$\Delta_f G_m^{\ominus}(p)&#x3D;\Delta_f G_m^{\ominus}(p^{ominus})+\sum_B v_{B,g}RTln\frac{p}{p^{\ominus}}$</li></ul></li></ul><h2 id="3-7-热力学基本方程及麦克斯韦方程式"><a href="#3-7-热力学基本方程及麦克斯韦方程式" class="headerlink" title="3.7 热力学基本方程及麦克斯韦方程式"></a>3.7 热力学基本方程及麦克斯韦方程式</h2><h3 id="1-热力学基本方程"><a href="#1-热力学基本方程" class="headerlink" title="1. 热力学基本方程"></a>1. 热力学基本方程</h3><p>$$ dU&#x3D;TdS-pdV \dH&#x3D;TdS+Vdp\dA&#x3D;-SdT-pdV\dG&#x3D;-SdT+Vdp $$</p><p>适用条件：</p><p>封闭系统，W’&#x3D;0，可逆过程。不可逆过程可用可逆的S-T,V-p关系计算。</p><p>e.g. 理想气体，恒温，W’&#x3D;0，$\Delta G&#x3D;\int_{p_1}^{p_2}Vdp&#x3D;nRTln\frac{p_2}{p_1}$</p><p>上述理想气体改为凝聚态：$\Delta G \approx 0$</p><h3 id="2-U、H、A、G的一阶偏导数关系式"><a href="#2-U、H、A、G的一阶偏导数关系式" class="headerlink" title="2. U、H、A、G的一阶偏导数关系式"></a>2. U、H、A、G的一阶偏导数关系式</h3><p>对上面的热力学基本方程写出全微分式。</p><p>整理得</p><p>$$ [\frac{\partial(G&#x2F;T)}{\partial T}]_p&#x3D;\frac{1}{T}(\frac{\partial G}{\partial T})_p-\frac{G}{T^2}\&#x3D;-\frac{S}{T}-\frac{G}{T^2}\&#x3D;-\frac{H}{T^2} $$</p><p>即</p><p>$$ [\frac{\partial(G&#x2F;T)}{\partial T}]_p&#x3D;-\frac{H}{T^2} $$</p><p>$$ [\frac{\partial(A&#x2F;T)}{\partial T}]_V&#x3D;-\frac{U}{T^2} $$</p><h3 id="3-麦克斯韦关系式"><a href="#3-麦克斯韦关系式" class="headerlink" title="3. 麦克斯韦关系式"></a>3. 麦克斯韦关系式</h3><p>二阶混合偏导与求导顺序无关。</p><p>$$ (\frac{\partial T}{\partial V})_S&#x3D;-(\frac{\partial p}{\partial S})_V\ (\frac{\partial T}{\partial p})_S&#x3D;(\frac{\partial V}{\partial S})_p\(\frac{\partial S}{\partial V})_T&#x3D;(\frac{\partial p}{\partial T})_V\-(\frac{\partial S}{\partial p})_T&#x3D;(\frac{\partial V}{\partial T})_p $$</p><h3 id="4-其他关系式"><a href="#4-其他关系式" class="headerlink" title="4. 其他关系式"></a>4. 其他关系式</h3><p>均可以通过上面的方程推导，例如</p><p>$dU&#x3D;TdS-pdV$</p><p>$(\partial U&#x2F; \partial T)_V&#x3D;T(\partial S&#x2F;\partial T)<em>V&#x3D;nC</em>{V,m}$</p><h2 id="3-8-克拉佩龙方程"><a href="#3-8-克拉佩龙方程" class="headerlink" title="3.8 克拉佩龙方程"></a>3.8 克拉佩龙方程</h2><p>两相平衡时系统的温度和压力之间关系。</p><h3 id="1-克拉佩龙方程"><a href="#1-克拉佩龙方程" class="headerlink" title="1. 克拉佩龙方程"></a>1. 克拉佩龙方程</h3><p>恒T,P，<strong>纯物质两相平衡</strong>$(\alpha,\beta)$</p><p>假设小量dT,dp， 有$dG_m(\alpha)&#x3D;dG_m(\beta)$</p><p>热力学基本方程$dG_m&#x3D;-S_mdT+V_mdp$</p><p>代入得</p><p>$$ -S_m(\alpha)dT+V_m(\alpha)dp&#x3D;-S_m(\beta)dT+V_m(\beta)dp $$</p><p>又因$\Delta_{\alpha}^{\beta}S_m&#x3D;\Delta_{\alpha}^{\beta}H_m&#x2F;T$</p><p>$$ \frac{dp}{dT}&#x3D;\frac{\Delta_{\alpha}^{\beta}H_m}{T\Delta_{\alpha}^{\beta}V_m} $$</p><p>上式即克拉佩龙方程，适用于<strong>纯物质两相平衡</strong>时，<strong>平衡压力p</strong>和<strong>平衡温度T</strong>的关系。</p><ul><li><p>蒸发、升华（g）</p><ul><li><p>p：T时饱和蒸气压</p></li><li><p>dp&#x2F;dT：平衡时，饱和蒸气压随T变化率</p></li><li><p>常用积分式：</p><p>$$ \ln\frac{T_2}{T_1}&#x3D;\frac{\Delta_{\alpha}^{\beta}V_m}{\Delta_{\alpha}^{\beta}H_m}(p_2-p_1) $$</p></li></ul></li><li><p>熔化、晶型转变(s)</p><ul><li>熔点、晶型转变温度T随p变化率：取倒数</li></ul></li></ul><h3 id="2-克劳修斯-克拉佩龙方程"><a href="#2-克劳修斯-克拉佩龙方程" class="headerlink" title="2. 克劳修斯-克拉佩龙方程"></a>2. 克劳修斯-克拉佩龙方程</h3><p>描述<strong>气液、气固平衡</strong>时饱和蒸气压p和温度T的关系。（<strong>近似</strong>处理）</p><p>气液克拉佩龙方程：</p><p>$$ \frac{dp}{dT}&#x3D;\frac{\Delta_{l}^{g}H_m}{T\Delta_{l}^{g}V_m} $$</p><p>近似认为：</p><ul><li>蒸气为<strong>理想气体</strong>；远低于临界温度</li><li>$\Delta_{l}^{g}V_m&#x3D;V_m(g)-V_m(l) \approx V_m(g)&#x3D;\frac{RT}{p}$</li></ul><p>代入整理：</p><p>$$ \frac{dlnp}{dT}&#x3D;\frac{\Delta_l^gH_m}{RT^2} $$</p><p>称为<strong>克劳修斯-克拉佩龙方程（双克方程）的微分式</strong>。</p><p>dT较小时认为$\Delta_l^gH_m$不随T变化，得到<strong>积分式</strong>：（定积分式）</p><p>$$ ln\dfrac{p_2}{p_1}&#x3D;-\frac{\Delta_l^gH_m}{R}(\frac{1}{T_2}-\frac{1}{T_1}) $$</p><p>式中T,p对应不同温度下的饱和蒸气压。</p><ul><li><p>若dT，较大，可使用经验式—安托万方程(Antoine)</p><ul><li>温度t为变量</li></ul><p>$$ lgp&#x3D;A-\frac{B}{t+C} $$</p></li></ul><p>外压对液体饱和蒸气压的影响略。</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 物理化学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物理化学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oxford solid state physics</title>
      <link href="/2024/04/16/oxford-solid-state-physics/"/>
      <url>/2024/04/16/oxford-solid-state-physics/</url>
      
        <content type="html"><![CDATA[<ul><li>shortened menu of courses:<ol><li>Introduction to Condensed Matter; Einstein Model of Vibrations in Solids</li><li>Debye Model of Vibrations in Solids; Drude Theory of Electrons in Metals</li><li>Drude Theory of Electrons in Metals Sommerfeld Free Electron Theory of Electrons in Metals</li><li>Sommerfeld Free Electron Theory of Electrons in Metals</li><li>Chemistry in a Nutshell</li><li>Microscopic View of Vibrations in Solids in One Dimension I The Monatomic Harmonic Chain</li><li>Microscopic View of Vibrations in Solids in One Dimension II The Diatomic Alternating Harmonic Chain</li><li>Microscopic View of Electrons in Solids in One Dimension Tight Binding Chain</li><li>Geometry of Solids I Crystal Structure in Real Space</li><li>Geometry of Solids II Real Space And Reciprocal Space 2</li><li>Reciprocal Space and Scattering</li><li>Scattering Experiments II</li><li>Scattering Experiments III</li><li>Waves in Reciprocal Space</li><li>Nearly Free Electron Model</li><li>Band Structure and Optical Properties of Solids</li><li>Dynamics of Electrons in Bands</li><li>Semiconductor Devices and Introduction to Magnetism</li><li>Magnetic Properties of Atoms</li><li>Collective Magnetism</li><li>Mean Field Theory and Closing Thoughts</li></ol></li></ul><h1 id="bilibili-resources"><a href="#bilibili-resources" class="headerlink" title="bilibili resources"></a>bilibili resources</h1><p><strong>B站视频</strong></p><p>BV1QW411u736</p><p><strong>youtube的实时字幕比较方便</strong></p><p><a href="https://www.youtube.com/watch?v=XQk25fSJkL8&list=PLaNkJORnlhZnC6E3z1-i7WERkferhQDzq">https://www.youtube.com/watch?v=XQk25fSJkL8&list=PLaNkJORnlhZnC6E3z1-i7WERkferhQDzq</a></p><p><strong>教授主页（这里可以看到其它课程）</strong></p><p><a href="http://www-thphys.physics.ox.ac.uk/people/SteveSimon/">http://www-thphys.physics.ox.ac.uk/people/SteveSimon/</a></p><p><strong>2014course page</strong></p><p><a href="http://www-thphys.physics.ox.ac.uk/people/SteveSimon/condmat2014/condmat.html">http://www-thphys.physics.ox.ac.uk/people/SteveSimon/condmat2014/condmat.html</a></p><p><strong>2012版lecture note</strong></p><p><a href="http://www-thphys.physics.ox.ac.uk/people/SteveSimon/condmat2012/LectureNotes2012.pdf">http://www-thphys.physics.ox.ac.uk/people/SteveSimon/condmat2012/LectureNotes2012.pdf</a></p><p><strong>小程序</strong></p><p><a href="http://www-thphys.physics.ox.ac.uk/people/SteveSimon/condmat2014/GlazerPrograms.html">http://www-thphys.physics.ox.ac.uk/people/SteveSimon/condmat2014/GlazerPrograms.html</a></p><p><strong>up主传的网盘，包含软件</strong></p><p><a href="https://pan.baidu.com/s/16NbXSq771Y1zms0Vmaql4Q">https://pan.baidu.com/s/16NbXSq771Y1zms0Vmaql4Q</a> 密码：2ebb</p><h1 id="01-Introduction-to-Condensed-Matter-Einstein-Model-of-Vibrations-in-Solids"><a href="#01-Introduction-to-Condensed-Matter-Einstein-Model-of-Vibrations-in-Solids" class="headerlink" title="01 Introduction to Condensed Matter; Einstein Model of Vibrations in Solids"></a>01 Introduction to Condensed Matter; Einstein Model of Vibrations in Solids</h1><h2 id="resources"><a href="#resources" class="headerlink" title="resources"></a>resources</h2><ul><li>book<ul><li>《**<a href="https://www.pdfdrive.com/the-oxford-solid-state-basics-e186501379.html">The Oxford Solid State Basics</a>》**，可于PDFDRIVE获取</li><li>PDFDRIVE还可找到**<a href="https://www.pdfdrive.com/the-oxford-solid-state-basics-solution-manual-e186571701.html">The Oxford Solid State Basics, Solution Manual</a>**</li></ul></li><li>webpage<ul><li>find the draft 85% similar to the 25 pounds book!</li><li>sample exams, sample solution…</li><li>slides &amp; videos</li></ul></li><li>message board<ul><li>似乎停用了。希望国内学校也用这种message board，发展起来简直不要太方便</li></ul></li></ul><h2 id="condensed-matter-physics"><a href="#condensed-matter-physics" class="headerlink" title="condensed matter physics"></a>condensed matter physics</h2><ul><li>what is condensed matter physics<ul><li>1&#x2F;3 of physics</li></ul></li><li>why study it?<ul><li>it is the world</li><li>it is useful</li><li>it is deep<ul><li>deep ideas come out of condensed matter physics and go into other fields. ;D</li></ul></li><li>anti reductionism</li><li>it is a laboratory for quantum and step back<ul><li>extension of quantum mechanics and statistical mechanics</li></ul></li></ul></li></ul><h3 id="SOLID-STATE"><a href="#SOLID-STATE" class="headerlink" title="SOLID STATE"></a>SOLID STATE</h3><p>basic to more complicated fluid or super fluid, other condensed matter.</p><ul><li><p>heat capacity (of solids)</p><ul><li>C&#x3D;dQ&#x2F;dT Q: heat T: capacity</li><li>In solid, 可以认为 $C_P&#x3D;C_V&#x3D;C$<ul><li>$C_P-C_V&#x3D;\frac{VT\alpha^2}{\beta}$<ul><li>$\alpha$: thermal extension coefficient，热膨胀系数</li><li>$\beta$: isothermal compressibility，等温压缩系数</li><li>solid: \alpha 很小，C_P-C_V可忽略</li></ul></li></ul></li></ul></li><li><p>monatomic moneth</p><ul><li><p>gas</p><ul><li>$C_{V&#x2F;N}&#x3D;\frac{3}{2}k_B$</li></ul></li><li><p>solids</p><ul><li>$C_{&#x2F;N}&#x3D;3k_B$</li><li>Law of Dulong-Petit, 1819</li><li>we know it’s right. But why?</li></ul></li><li><p><strong>Boltzmann</strong></p><ul><li>statistical mechanics to reason this question</li><li>Model of solid,1896<ul><li>原子位于谐振势阱(bottom of the harmonic)的底端，可来回振荡。biu<del>biu</del></li><li>温度越高，越能振荡（自由度越高），可储存的能量越高。</li></ul></li><li>equipartition thm均分定理<ul><li>each degree of freedom, you get 1&#x2F;2 $k_B$ of heat capacity.</li><li>monatomic gas:<ul><li>$p_x, p_y, p_z$ —— $C_{V&#x2F;N}&#x3D;\frac{3}{2}k_B$ （3个自由度）</li></ul></li><li>solid:<ul><li>$p_x, p_y, p_z,x, y, z$ —— $C_{&#x2F;N}&#x3D;3k_B$ （6个自由度，三方向动能+自身坐标）</li></ul></li><li>Law of D-P<ul><li>Not always true</li><li>$T&lt;&lt;T_{room}$ $C_{&#x2F;N}&lt;&lt;3k_B$</li><li>DIAMOND:<ul><li>$C_{&#x2F;N}&lt;&lt;3k_B$ @ $T_{room}$</li></ul></li><li>why ？</li></ul></li></ul></li></ul></li><li><p><strong>Einstein model of solid, 1909</strong></p><ul><li><p>= Boltzmann’s solid+<strong>quantum</strong></p></li><li><p>$\omega&#x3D;\sqrt{\frac{k}{m}}$</p><ul><li>k: spring constant弹簧常数</li></ul></li><li><p><strong>一维谐振子：</strong></p><ul><li><p>$E_n&#x3D;h\omega(n+1&#x2F;2)$</p></li><li><p>求<strong>单个原子</strong>的热容</p><ul><li>配分函数$Z&#x3D;\sum_{n≥0}e^{-\beta E_n}$<ul><li>$\beta&#x3D;\frac{1}{k_BT}$</li></ul></li><li>对Z求导，能量期望值:<ul><li>$ &#x3D; - \frac{1}{Z}\frac{\partial Z}{\partial \beta}&#x3D;h\omega(n_B(\beta h\omega)+1&#x2F;2)$</li><li>玻色因子$n_B&#x3D;\frac{1}{e^{\beta h\omega}-1}$</li></ul></li><li>计算热容</li></ul><p>$$ C&#x3D;\frac{\partial }{\partial T}&#x3D; k_B(\beta h \omega)^2 \frac{e^{\beta h \omega}}{(e^{\beta h\omega}-1)^2} $$</p><ul><li>注：此热容为<strong>一维</strong>谐振<strong>单原子</strong>之热容。</li></ul></li><li><p>在三维振荡，结果乘3：</p><p>$$ C_{&#x2F;N}&#x3D;3k_B(\beta h \omega)^2 \frac{e^{\beta h \omega}}{(e^{\beta h\omega}-1)^2} $$</p><ul><li><p>高温极限：</p><p>$$ k_BT&gt;&gt;h\omega \space\space-&gt; \beta h\omega&lt;&lt;1\e^{\beta h\omega}\approx 1+\beta h\omega+… $$</p><p>$$ C_{&#x2F;N}&#x3D;3k_B $$</p><ul><li>高温下量子系统趋近于经典系统，量子统计退化到玻尔兹曼经典统计。</li></ul></li><li><p>低温极限：</p></li></ul><p>$$ k_BT&lt;&lt;h\omega \space\space -&gt;e^{\beta h\omega}\space is\space big! $$</p><p>$$ C_{&#x2F;N}&#x3D;3k_B(\beta h\omega)^2e^{-\beta h\omega} $$</p><ul><li>低温时，C随T急速下降</li></ul><p><img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/9f3e7e70-2222-46b8-9bb7-397ec648e50b/c0ab41f4-a489-49d4-87d2-feb2b1ea314a/Untitled.png" alt="Untitled"></p></li></ul></li><li><p>diamond ?</p><ul><li>$\omega&#x3D;\sqrt{\frac{k}{m}}$ : Einstein frenquency<ul><li>大部份材料的$h\omega$比较小</li><li>diamond: carbon, thus m small; tough, thus k big, so it’s $\omega$ is really big</li><li>shortage: data is wrong?<ul><li>实测数据下降得没有那么快</li></ul></li><li>低温，most materials(including diamond), $C \approx T^3$<ul><li>exception: metal(copper) $C&#x3D;\alpha T^3+ \gamma T$</li><li>but no C as low as E’s prediction</li></ul></li></ul></li><li>Debye model</li><li>collective solid vibration motion<ul><li>sound wave</li></ul></li></ul></li></ul></li></ul></li></ul><h1 id="02-Debye-Model-of-Vibrations-in-Solids-Drude-Theory-of-Electrons-in-Metals"><a href="#02-Debye-Model-of-Vibrations-in-Solids-Drude-Theory-of-Electrons-in-Metals" class="headerlink" title="02 Debye Model of Vibrations in Solids; Drude Theory of Electrons in Metals"></a>02 Debye Model of Vibrations in Solids; Drude Theory of Electrons in Metals</h1><h2 id="review"><a href="#review" class="headerlink" title="review"></a>review</h2><ul><li>Boltzmann<ul><li>$C_{&#x2F;N}&#x3D;3k_B$</li></ul></li><li>Einstein<ul><li>quantum</li><li>C drops at low T (expected)</li></ul></li><li>experiment<ul><li>$C\approx T^3$</li></ul></li><li>Debye, 1912<ul><li>爱因斯坦模型假设固体中各个原子的振动相互独立，所有的原子都具有同一频率。</li><li>Debye的想法是，不能单独地考虑每个原子的势阱。因为一个原子振动会被弹回，但也撞击了附近原子，引起连锁振动，也就是波。</li><li>vibration&#x3D;wave(sound)<ul><li>波在固体中的传播通常为声学波。</li></ul></li><li>quantize sound wave like light<ul><li>波可以被量子化。</li></ul></li></ul></li></ul><p>Einstein’s model:</p><p>$$</p><p>= h\omega(n_B(\beta h\omega)+1&#x2F;2) $$ Debye: $$ _{total} &#x3D; \sum_{modes}h\omega_{modes}(n_B(\beta h\omega)_{modes}+1&#x2F;2) $$ 爱因斯坦模型：温度低于谐振子的频率时，热容会降低。 迪拜：盒子中分布着各个频率的谐振子，因此温度降低的时候，总有一些频率较低的谐振子能够得到激发，导致热容不会迅速呈指数形式下降。 LIGHT vs SOUND - LIGHT - 2 polarizations，2种偏振 - Longitudinal wave纵波，传播方向&#x3D;振动方向 - transverse wave横波，传播方向⊥振动方向 - sound - 3 pols ASSUME: - $v_{sound}$ INDEP of POL - actually 横波比纵波慢 - v_{sound} INDEP of direction - actually 如何统计盒子内的波模数(counting waves modes in box)： - 1D box - length l - … # 03 Drude Theory of Electrons in Metals Sommerfeld Free Electron Theory of Electrons in Metals</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 材科基相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 固体物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSS传奇</title>
      <link href="/2024/04/06/rss%E4%BC%A0%E5%A5%87/"/>
      <url>/2024/04/06/rss%E4%BC%A0%E5%A5%87/</url>
      
        <content type="html"><![CDATA[<p>Sir, this way to Zhihu introduction:</p><p><a href="https://zhuanlan.zhihu.com/p/349349861">https://zhuanlan.zhihu.com/p/349349861</a></p><blockquote><p>写在前面：请不要在绑定邮箱前修改ttrss的原生密码，谢谢。</p></blockquote><h2 id="RSSHub"><a href="#RSSHub" class="headerlink" title="RSSHub"></a>RSSHub</h2><p>操作步骤：</p><ul><li><p><strong>RSS源 + RSS 阅读器：</strong></p><ul><li><p><strong>RSS源</strong></p><ul><li><p><strong>公共源</strong></p><ol><li><a href="https://link.zhihu.com/?target=http://rss.mk/RSS">公共 RSS 订阅源</a></li><li><a href="https://link.zhihu.com/?target=https://rss-source.com/">订阅源推荐</a></li><li><a href="https://link.zhihu.com/?target=https://getpodcast.xyz/">播客 Feed 订阅</a></li><li><a href="https://link.zhihu.com/?target=https://trello.com/b/lvMGhlNB/">RSS源共享</a></li><li><a href="https://link.zhihu.com/?target=https://rss.mifaw.com/">RSS屋</a></li><li><a href="https://link.zhihu.com/?target=https://blackwinmin.github.io/posts/law_rss/">一些法律相关信息的 RSS 订阅地址</a></li><li><a href="https://link.zhihu.com/?target=https://github.com/zhengjim/Chinese-Security-RSS/">国内安全资讯</a></li><li><a href="https://link.zhihu.com/?target=https://github.com/Gracker/Rss-IT">一些科技人的 Blog 地址</a></li><li><a href="https://link.zhihu.com/?target=https://shimo.im/docs/iwRFK7VNmZIxnuL7/">A君私藏的超好用 RSS 订阅源</a></li></ol></li><li><p><strong>RSSHub生成源</strong></p><ul><li><p>可给各种社交媒体、新媒体、论坛、博客、直播、大学通知、科学期刊等等奇奇怪怪的页面生成订阅源。</p></li><li><p>RSSHub官方文档：<a href="https://link.zhihu.com/?target=https://docs.rsshub.app/">https://docs.rsshub.app/</a></p></li><li><p><strong>衍生项目：RSSHub Rader</strong></p><ul><li>一个可以帮助你快速发现和订阅当前网站 RSS 和 RSSHub 的浏览器扩展。</li><li>github安装地址：<a href="https://github.com/DIYgod/RSSHub-Radar/">https://github.com/DIYgod/RSSHub-Radar/</a></li></ul></li><li><p>一个 RSSHub 生成的订阅源可以简单分为两部分：</p><ul><li><p>域名 + 路由</p><ul><li><p>官方提供的 RSSHub 域名（<a href="https://link.zhihu.com/?target=https://rsshub.app/755/user/akimoto-manatsu">rsshub.app</a>）被墙了（挂了梯子应该就没问题？）</p></li><li><p>自建RSSHub：Github+Vercel来一键部署RSSHub，教程<a href="https://docs.qq.com/doc/DYWhCdURBTFBEVGFl">https://docs.qq.com/doc/DYWhCdURBTFBEVGFl</a></p><ul><li><p>个人记录：github+vercel在deploy时会报错。 好吧，实际上是vercel的权限没给够。</p><p>其他报错例如 <a href="https://stackoverflow.com/questions/75592472/no-output-directory-named-build-found-after-the-build-completed-you-can-confi">https://stackoverflow.com/questions/75592472/no-output-directory-named-build-found-after-the-build-completed-you-can-confi</a> 通过人工修改output directory解决。</p></li><li><p>最后还是成功congratulations了。continue to dashboard: 可在DOMAIN处看到RSSHub地址。</p></li><li><p>my domain:</p></li></ul><p><strong><a href="https://rsshub-nu-pearl.vercel.app/">rsshub-nu-pearl.vercel.app</a></strong></p></li><li><p>也可以白嫖搭建好的RSSHub：</p><ul><li><a href="https://uneasy.win/rsshubserver/%EF%BC%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9C%B0%E5%9D%80%E4%B8%BA">https://uneasy.win/rsshubserver/，服务器地址为</a> ****<em><a href="https://rsshub.feeded.xyz/">https://rsshub.feeded.xyz/</a></em></li></ul></li><li><p>然后复制 RSShub 页面的地址，打开 RSSHub Rader（插件或APP），设置到<strong>自定义域名。</strong></p></li></ul></li></ul></li></ul></li></ul></li><li><p>RSS阅读器</p><ul><li>PC</li><li>手机<ul><li>FeedMe</li><li>Palabre</li></ul></li><li>IOS<ul><li>Reeder</li></ul></li></ul></li></ul><p>routes示例请看<a href="https://docs.rsshub.app/zh/routes/">https://docs.rsshub.app/zh/routes/</a></p><p><strong>进阶：</strong></p><p>请读DIYGOD的文：<a href="https://diygod.cc/ohmyrss">https://diygod.cc/ohmyrss</a></p><p>里面介绍的有：</p><ul><li>云服务<ul><li>Feedly 和 Inoreader</li><li>或者自建 <a href="https://github.com/HenryQW/docker-ttrss-plugins">Tiny Tiny RSS</a></li></ul></li></ul></li></ul><h2 id="ttrss"><a href="#ttrss" class="headerlink" title="ttrss"></a>ttrss</h2><p>ttrss重磅来袭。</p><h3 id="centos7-docker"><a href="#centos7-docker" class="headerlink" title="centos7+docker"></a>centos7+docker</h3><p><a href="https://blog.naibabiji.com/tutorial/tiny-tiny-rss.html">https://blog.naibabiji.com/tutorial/tiny-tiny-rss.html</a></p><p>参考这个。前提是把宝塔搞定。之前就给服务器配了centos7。</p><p>宝塔内部可以一键安装docker或docker-compose。</p><p>软件商店里面可以找到“宝塔终端”。输入<code>docker-compose -v</code> 查看版本。</p><h3 id="Awesome-TTRSS"><a href="#Awesome-TTRSS" class="headerlink" title="Awesome TTRSS"></a><strong>Awesome TTRSS</strong></h3><p>Awesome TTRSS可以通过docker和docker-compose两种方式安装，这里我们采用docker-compose的方式安装。</p><ul><li><p>在宝塔面板“文件”远程下载<a href="https://raw.githubusercontent.com/HenryQW/Awesome-TTRSS/main/docker-compose.yml">docker-compose.yml</a>，URL为<a href="https://raw.githubusercontent.com/HenryQW/Awesome-TTRSS/main/docker-compose.yml">https://raw.githubusercontent.com/HenryQW/Awesome-TTRSS/main/docker-compose.yml</a></p></li><li><p>接着在宝塔面板的文件管理器里面点击编辑这个docker-compose.yml文件，修改3个参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELF_URL_PATH=http://localhost:181/ # 把localhost修改为你自己服务器的IP，便于待会儿通过IP访问查看是否正常工作。</span><br><span class="line">DB_PASS=ttrss # 把ttrss改成和下面参数一样的值。</span><br><span class="line">POSTGRES_PASSWORD=ttrss # 把ttrss改成和上面一样的值，就是说这两个参数用同一个密码。</span><br></pre></td></tr></table></figure></li><li><p>保存，进入“终端”。输入docker-compose up -d，然后当提示done之后，就代表服务部署启动成功。</p></li></ul><p>通过上面的命令启动TTRSS之后，打开VPS的IP加181端口访问，就可以出现Tiny Tiny RSS的登录界面。注意防火墙需开启181端口。</p><p>如：47.117.146.227:181</p><p>然后输入默认的用户名admin和密码password登录。<strong>当然你马上可以更改。</strong>真的吗？？请看TBR(text brain recorder)：</p><blockquote><p>注意看，朋友们，这个博主叫小帅。她初始登陆进ttrss，官方提示修改原始密码，于是她点击了“重置密码”。 这时，电脑右下角闪过一句“用户admin，您的密码已被改为xxx”–这句话如流星般划过，出现了不到半秒。 然后页面就回到登陆界面了–是的，小帅她无法登录了。 小帅没有气馁。她在<a href="https://tt-rss.org/wiki/FAQ">官方网站</a>及<a href="https://community.tt-rss.org/t/how-to-change-my-password/963">community</a>找到了未绑邮箱密码丢失的解决方案：sql语句重置密码。 然而，亲爱的宝塔通过多层容器套娃之法，让小帅和她的黑客朋友摸不着数据库。真是令人感慨。</p></blockquote><p>附：</p><h4 id="docker-compose基本命令"><a href="#docker-compose基本命令" class="headerlink" title="docker-compose基本命令"></a><strong>docker-compose基本命令</strong></h4><ul><li><p><strong><code>docker-compose up</code></strong></p><ul><li>启动和运行整个应用。默认情况下，<code>docker-compose up</code>会尝试自动构建任何尚未构建的镜像。如果你想强制它重新构建镜像，可以使用<code>-build</code>选项。</li></ul></li><li><p><strong><code>docker-compose down</code></strong></p><ul><li>停止并删除容器、网络、卷和镜像创建的<code>docker-compose up</code>。</li></ul><p>UPDATE ttrss_users SET pwd_hash&#x3D;’SHA1:5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8’,salt&#x3D;’ ‘, opt_enabled&#x3D;false WHERE login&#x3D;’you’;</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇cool的blog是怎样炼成的</title>
      <link href="/2024/04/04/%E4%B8%80%E7%AF%87cool%E7%9A%84blog%E6%98%AF%E6%80%8E%E6%A0%B7%E7%82%BC%E6%88%90%E7%9A%84/"/>
      <url>/2024/04/04/%E4%B8%80%E7%AF%87cool%E7%9A%84blog%E6%98%AF%E6%80%8E%E6%A0%B7%E7%82%BC%E6%88%90%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="技术类：公式堆叠"><a href="#技术类：公式堆叠" class="headerlink" title="技术类：公式堆叠"></a>技术类：公式堆叠</h1><p>“如果能把优秀的文章用通俗易懂的语言、公式、算法、代码总结出来，对社会的贡献远大于follow这些文章发incremental的新文章。”</p><p>陈雄达老师也讲了，好的理论是不需要很复杂的解释的，而应当能够用通俗的语言表述出来。（当然，数学建模的应用性很强，一般不存在太反直觉的理论。）</p><p>我这人的确啰嗦，且是不合时宜的啰嗦。写的技术类博客也染了这病。许是练习markdown打公式的习惯所致，我总是不遗余力地把笔记中的公式都用latex打出（这是机械性工作，费时费力）。以上文的标准评判，我的写法显然是不达标的。</p><p>今后写作，应仅指出要点及其公式。其余杂项列一个表即可带过。</p><h1 id="人文类：要言不烦"><a href="#人文类：要言不烦" class="headerlink" title="人文类：要言不烦"></a>人文类：要言不烦</h1><p>大学问家，最大的特征是化繁为简，深人浅出，用家常话讲大道理。如果舍易取烦，把话说得含糊不清晰，那要么是水平不够，要么是有难言之隐，不想把话说明白。</p><p>—胡森林著. 公文高手的自我修养[M]. 哈尔滨：哈尔滨出版社, 2019.03:147</p><p>清人刘大槐《论文偶记》说：“凡文，笔老则简，意真则简，辞切则简，理当则简，味淡则简，气蕴则简，品贵则简，神远而含藏不尽则简，故简为文章尽境。”简约是文章之道，不能“瘠义肥辞”，内容稀薄而空话连篇。</p><p>—高烽著. 科技写作随笔[M]. 北京：国防工业出版社, 2016.01:67</p><p>欲成高手，还需加练啊。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电工学：正弦交流电路</title>
      <link href="/2024/04/04/%E7%94%B5%E5%B7%A5%E5%AD%A6%EF%BC%9A%E6%AD%A3%E5%BC%A6%E4%BA%A4%E6%B5%81%E7%94%B5%E8%B7%AF/"/>
      <url>/2024/04/04/%E7%94%B5%E5%B7%A5%E5%AD%A6%EF%BC%9A%E6%AD%A3%E5%BC%A6%E4%BA%A4%E6%B5%81%E7%94%B5%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="电工学：正弦交流电路"><a href="#电工学：正弦交流电路" class="headerlink" title="电工学：正弦交流电路"></a>电工学：正弦交流电路</h1><h1 id="第四章-正弦交流电路"><a href="#第四章-正弦交流电路" class="headerlink" title="第四章 正弦交流电路"></a>第四章 正弦交流电路</h1><p>正弦电源激励。</p><h2 id="正弦电压、正弦电流"><a href="#正弦电压、正弦电流" class="headerlink" title="正弦电压、正弦电流"></a>正弦电压、正弦电流</h2><p>$$ i&#x3D;I_msin(\omega t+\phi) $$</p><p>$I_m$：幅值amplitude</p><p>$\omega$：角频率angular frequency</p><p>$\phi$：初相位initial phase angle</p><p>瞬时值：小写字母表示，如i, u, e</p><p>最大值（幅值）：大写字母+下标m，如$I_m, U_m, E_m$</p><p>有效值：从电流的热效应规定。$\int_0^TRi^2&#x3D;RI^2T$，当i为正弦量时，$I&#x3D;\frac{I_m}{\sqrt2}$，U和E同理</p><h2 id="相量：正弦量的复数表示法"><a href="#相量：正弦量的复数表示法" class="headerlink" title="相量：正弦量的复数表示法"></a>相量：正弦量的复数表示法</h2><p><strong>正弦量的表示方法：</strong></p><ul><li>三角函数法</li><li>波形图</li><li>向量法—用复数的方法表示正弦量<ul><li>旋转的有向线段<ul><li>长度：幅值</li><li>与横轴夹角：初相位</li><li>旋转角速度：角频率</li><li>在纵轴上的投影：瞬时值</li></ul></li></ul></li></ul><p><strong>复数A的表示方法：</strong></p><ul><li><p>代数式：$A&#x3D;a+jb$</p></li><li><p>三角式：$A&#x3D;r(cos\phi+jsin\phi)$</p></li><li><p>指数式：$A&#x3D;re^{j\phi}$</p></li><li><p>极坐标式：$A&#x3D;r\angle \phi$</p></li><li><p>复数的加减运算：代数式</p></li><li><p>复数的乘除运算：指数式极坐标式</p><ul><li>模与模相乘除</li><li>幅角与幅角相<strong>加减</strong></li></ul></li></ul><p>为与复数相区别，把表示正弦量的复数称为<strong>相量</strong>，并在大写字母上打一 “<strong>•</strong>”。例如$\dot{I}, \dot{U}$。</p><p>正弦值$i&#x3D;I_msin(\omega t+\phi)$的相量式为：（下式中$I$为有效值）</p><p>$$ \dot{I}&#x3D;I(cos\phi+jsin\phi)&#x3D;Ie^{j\phi}&#x3D;I\angle\phi $$</p><p><strong>复数 j 的含义：</strong>90° 旋转因子。一个相量（代数式中）乘上+j 则旋转+90°；乘上-j 则旋转- 90°。</p><p>复数的其他表示方法同理：</p><p>$$ \pm j&#x3D;e^{\pm j90^\circ}&#x3D;cos90^\circ \pm jsin90^\circ $$</p><p><strong>相量图：</strong></p><ul><li>只有正弦周期量才能用相量表示；</li><li>只有同频率的正弦量才能画在同一相量图上；</li><li>相量是表示正弦交流电（<strong>瞬时值</strong>）的复数，正弦交流电是<strong>时间的函数</strong>，二者之间并不相等。</li><li>可以用于<strong>同频相量</strong>的<strong>定性</strong>分析。</li></ul><p><strong>精确运算例题总结：</strong></p><p>虽然一般都是对有效值变换计算（需经$\dot{I}&#x3D;\frac{I_m}{2}$之变换），但是也可以直接对$I_m$的表示方法转换后计算。</p><p>$$ u(t)&#x3D;\sqrt2 Usin(\omega t+\phi) \space , \space\space \dot{U}&#x3D;U\angle{\phi} $$</p><h2 id="单一参数的交流电路"><a href="#单一参数的交流电路" class="headerlink" title="单一参数的交流电路"></a>单一参数的交流电路</h2><p>主要分析参数两端的<strong>电压</strong>，其上的<strong>电流</strong>，消耗的<strong>功率</strong>。</p><h3 id="电阻"><a href="#电阻" class="headerlink" title="电阻"></a>电阻</h3><ul><li>电压与电流同频率、同相位；<ul><li>大小关系：$U&#x3D;RI$</li><li>相量表达式：$\dot{U}&#x3D;R\dot{I}$</li></ul></li><li>瞬时功率$p&#x3D;ui&#x3D;UI(1-cos2\omega t)$<ul><li>平均功率$P&#x3D;I^2R$</li><li>转换成热能$W&#x3D;P t$</li></ul></li></ul><h3 id="电感"><a href="#电感" class="headerlink" title="电感"></a>电感</h3><ul><li><strong>电感</strong>L：$L&#x3D;\frac{N\phi}{i}$，单位亨利(H)或毫亨(mH)<ul><li>感应电动势$e_L$：$e_L&#x3D;-L\frac{di}{dt}$</li><li>KVL：$u+e_L&#x3D;0$，$u&#x3D;L\frac{di}{dt}$</li></ul></li><li><strong>电压电流关系</strong><ul><li>设$i&#x3D;I_msin(\omega t+\phi)$</li><li>则$u&#x3D;L\frac{di}{dt}&#x3D;\omega I_mLsin(\omega t +90\degree)&#x3D;U_msin(\omega t +90\degree)$</li><li>其中$U_m&#x3D;\omega L I_m&#x3D;X_LI_m$<ul><li>$X_L&#x3D;\omega L&#x3D;2\pi fL$称为感抗</li><li>根据此关系，电感两端施加一定电压时，该电压频率f越大（直流稳态电源相当于$f&#x3D;0Hz$），产生的感抗$X_L$越大，电流$I_m&#x3D;U_m&#x2F;X_L$越小。故而电感元件表现为“通直隔交“。</li><li>单位：$\Omega&#x3D;Hz*H$</li></ul></li><li>电压超前电流$\frac{\pi}{2}$<ul><li>大小关系：$U&#x3D;X_LI$，幅度、有效值之比为$X_L&#x3D;\omega L$</li><li>相量式：$\dot{U}&#x3D;jX_L\dot{I}$，角度上U超前I90°（j）</li><li>注：$u&#x2F;i$ (瞬时值之比）$≠X_L$</li></ul></li></ul></li><li><strong>瞬时功率</strong>$p&#x3D;ui&#x3D;Li\frac{di}{dt}&#x3D;UIsin2\omega t$<ul><li><strong>平均功率</strong>P&#x3D;0（亦称有功功率）</li><li><strong>无功功率Q</strong><ul><li>电感元件的交流电路中，没有能量消耗，只有电源与电感之间的能量交换。这种能量交换的规模用无功功率Q衡量。规定Q为瞬时功率$q_L$的幅值（即$UI$）。它并不代表单位时间内互换了多少能量。单位为乏(var)或千乏(kvar)。</li><li>$Q&#x3D;UI&#x3D;X_LI^2&#x3D;U^2&#x2F;X_L$ <img src="http://yantares.cn/wp-content/uploads/2024/04/%E5%8D%95%E7%94%B5%E6%84%9F%E4%BA%A4%E6%B5%81-300x242.jpg"></li></ul></li></ul></li><li>储存的<strong>磁场能</strong><ul><li>$\int_0^tuidt&#x3D;\int_0^iLidi&#x3D;\frac{1}{2}Li^2$</li><li>L是储能元件</li></ul></li></ul><h3 id="电容"><a href="#电容" class="headerlink" title="电容"></a>电容</h3><ul><li><strong>电容</strong>：$C&#x3D;\frac{q}{u}$，单位法拉(F）<ul><li>感应电流$i&#x3D;C\frac{du}{dt}$</li></ul></li><li><strong>电压电流关系</strong><ul><li>设$u&#x3D;U_msin\omega t$</li><li>则$i&#x3D;C\frac{du}{dt}&#x3D;\omega U_mCsin(\omega t+90\degree)&#x3D;I_msin(\omega t+90\degree)$</li><li>其中$I_m&#x3D;\omega CU_m&#x3D;\frac{U_m}{X_C}$<ul><li>$X_C&#x3D;\frac{1}{\omega C}&#x3D;\frac{1}{2\pi f C}$称为容抗</li><li>据此关系，电压有效值一定时，f越大，容抗$X_C$越小，$I_m$越大。故电容元件表现为通交隔直。</li></ul></li><li>电流超前电压$\frac{\pi}{2}$<ul><li>大小关系：$U&#x3D;X_CI$，幅度、有效值之比为$X_C&#x3D;1&#x2F;\omega C$</li><li>相量式：$\dot{U}&#x3D;-jX_C\dot{I}$，角度上U落后I90°（-j）</li><li>注：$u&#x2F;i$ (瞬时值之比）$≠X_C$</li></ul></li></ul></li><li><strong>瞬时功率</strong>$p&#x3D;ui&#x3D;UIsin2\omega t$<ul><li><strong>平均功率</strong>P&#x3D;0</li><li><strong>无功功率</strong>$Q&#x3D;-UI&#x3D;-X_CI^2$<ul><li>本来L取i初相位为0，C取u初相位为0，各不相同。但无功功率这里为了方便比较，C也取i初相位为0。 <img src="http://yantares.cn/wp-content/uploads/2024/04/%E5%8D%95%E7%94%B5%E5%AE%B9%E4%BA%A4%E6%B5%81-300x195.jpg"></li></ul></li></ul></li></ul><h2 id="三合一：阻抗的串并联"><a href="#三合一：阻抗的串并联" class="headerlink" title="三合一：阻抗的串并联"></a>三合一：阻抗的串并联</h2><h3 id="阻抗：R-L-C的串联"><a href="#阻抗：R-L-C的串联" class="headerlink" title="阻抗：R, L, C的串联"></a>阻抗：R, L, C的串联</h3><p>例：R, L, C串联，以$i&#x3D;I_msin\omega t$为参考正弦量：</p><p>$$ u&#x3D;RI_msin\omega t+\omega L I_msin(\omega t+90\degree)+\frac{I_m}{\omega C}sin(\omega t-90\degree)\&#x3D;U_{Rm}sin\omega t&#x3D;U_{Lm}sin(\omega t+90\degree)+U_{Cm}sin(\omega t-90\degree)\&#x3D;U_msin(\omega t+\phi) $$</p><p><strong>阻抗：KVL的向量表示式</strong></p><p>$$ \dfrac{\dot{U}}{\dot{I}}&#x3D;R+j(X_L-X_C)&#x3D;Z&#x3D;Z\angle \phi $$</p><ul><li>实部为”阻“，虚部为”抗“。</li><li>阻抗不是相量（用复数表示的正弦量），只是复数。</li><li>阻抗三角形：<ul><li>阻抗模$Z$</li><li>幅角$\phi&#x3D;arctan\frac{X_L-X_C}{R}$，电流、电压间相位差</li><li>相量图： <img src="http://yantares.cn/wp-content/uploads/2024/04/%E7%9B%B8%E9%87%8F%E5%9B%BE-169x300.jpg"></li></ul></li></ul><p><strong>功率、电压、阻抗三角形相似</strong>。</p><h3 id="阻抗的串联"><a href="#阻抗的串联" class="headerlink" title="阻抗的串联"></a>阻抗的串联</h3><p>$Z_1+Z_2&#x3D;Z$</p><p>与电阻串联类似。相量图上可以用平行四边形法则。</p><h3 id="阻抗的并联"><a href="#阻抗的并联" class="headerlink" title="阻抗的并联"></a>阻抗的并联</h3><p>$\frac{1}{Z_1}+\frac{1}{Z_2}&#x3D;\frac{1}{Z}$</p><p>与电阻并联类似。</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 电工学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电工学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那时我对此嗤之以鼻。</title>
      <link href="/2024/03/31/%E9%82%A3%E6%97%B6%E6%88%91%E5%AF%B9%E6%AD%A4%E5%97%A4%E4%B9%8B%E4%BB%A5%E9%BC%BB%E3%80%82/"/>
      <url>/2024/03/31/%E9%82%A3%E6%97%B6%E6%88%91%E5%AF%B9%E6%AD%A4%E5%97%A4%E4%B9%8B%E4%BB%A5%E9%BC%BB%E3%80%82/</url>
      
        <content type="html"><![CDATA[<p>前几日曾在medium看见一篇文章，说我们应当时而自觉地摒除现代音乐的”噪声“，因为现代音乐让我们焦虑，让我们烦躁，影响我们的睡眠和正常思考。</p><p>那时我对这种想法嗤之以鼻。音乐，不分时代，对人的心灵产生导向作用，该导向完全可控。我没有把文章读完。</p><p>今日我有新的想法。如今走在路上的人多戴着耳机，听着不知内容的音响。假如这样的现代音乐成为”常态“，那么音乐将不再是古典的音乐，而是名副其实的backgroundmusic。现代人的生活中将永远存在着”杂音干扰“。</p><p>如此看来，那篇文章尚有可取之处。起码适当的”复古“没有坏处。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Random walks in 2D and 3D are fundamentally different (Markov chains approach)</title>
      <link href="/2024/03/26/random-walks-in-2d-and-3d-are-fundamentally-different-markov-chains-approach/"/>
      <url>/2024/03/26/random-walks-in-2d-and-3d-are-fundamentally-different-markov-chains-approach/</url>
      
        <content type="html"><![CDATA[<h1 id="Random-walks-in-2D-and-3D-are-fundamentally-different-Markov-chains-approach"><a href="#Random-walks-in-2D-and-3D-are-fundamentally-different-Markov-chains-approach" class="headerlink" title="Random walks in 2D and 3D are fundamentally different (Markov chains approach)"></a><strong>Random walks in 2D and 3D are fundamentally different (Markov chains approach)</strong></h1><h1 id="Marcov-chains"><a href="#Marcov-chains" class="headerlink" title="Marcov chains"></a>Marcov chains</h1><p>3 elements:</p><ul><li>State space</li><li>Transition probabilities</li><li>Initial distribution</li></ul><p>1 property:</p><ul><li>Markov property<ul><li>无记忆性</li></ul></li></ul><h2 id="State-space"><a href="#State-space" class="headerlink" title="State space"></a>State space</h2><p>where you can go</p><p>random walk: Lattice points</p><h2 id="Transition-probabilities"><a href="#Transition-probabilities" class="headerlink" title="Transition probabilities"></a>Transition probabilities</h2><p>not static</p><p>赋予每个附近的state一个probability</p><p>e.g. 2-D random walk，晶格里面4个方向，每一个概率都是1&#x2F;4。</p><p>e.g. 3-D random walk, each state has 6 neighbors, so the probabilities are all 1&#x2F;6.</p><h2 id="Initial-distribution"><a href="#Initial-distribution" class="headerlink" title="Initial distribution"></a>Initial distribution</h2><p>assign a probability to each state, indicating how likely you are to start at that state.</p><p>e.g random walk: 1 at the origin, and 0 everywhere else.</p><h1 id="Recurrence-and-transience"><a href="#Recurrence-and-transience" class="headerlink" title="Recurrence and transience"></a>Recurrence and transience</h1><ul><li>Initial state <strong>recurrent</strong>:<ul><li>guaranteed to return</li><li>P(return)&#x3D;1</li></ul></li><li><strong>transient</strong> state<ul><li>P(return)&lt;1</li></ul></li></ul><p>In 2-D the origin is a recurrent state, so it will go back.</p><p>In 3-D the origin is a transient state.</p><h2 id="P-return"><a href="#P-return" class="headerlink" title="P(return)"></a>P(return)</h2><p>assumption: run random walk to infinity, even you have returned.</p><p><strong>V&#x3D;#returns to the origin, E(V): expectation</strong></p><ul><li><strong>RECURRENCE</strong></li></ul><p>∵Marcov property，forget that we’ve returned</p><p>∴P(V&#x3D;∞)&#x3D;1, E(V)&#x3D;∞</p><ul><li><strong>TRANSIENCE</strong></li></ul><p>E(V)</p><p>=P(V&#x3D;1)+2_P(V&#x3D;2)+3_P(V&#x3D;3)+4*P(V&#x3D;4)+…</p><p>=P(V&#x3D;1)</p><p>+P(V&#x3D;2)+P(V&#x3D;2)</p><p>+P(V&#x3D;3)+P(V&#x3D;3)+(V&#x3D;3)</p><p>+P(V&#x3D;4)+P(V&#x3D;4)+P(V&#x3D;4)+P(V&#x3D;4)</p><p>+…</p><p>add it by column:</p><p><strong>=P(V≥1)+P(V≥2)+P(V≥3)+P(V≥4)+…</strong></p><p><strong>P(V≥1):</strong> return probability, denote it as <strong>r</strong>. That is, P(return)&#x3D;r.</p><p><strong>P(V≥2):</strong> return twice,and since you forget you returned before, <strong>P(V≥2)&#x3D; $r^2$ .</strong></p><p>In general, <strong>P(V≥k)&#x3D; $r^k$ .</strong></p><p>So E(V)&#x3D;$r+r^2+r^3+…+r^k+…$</p><p>geometric series!</p><p>E(V)&#x3D;$\frac{r}{1-r}$ (finite) if r&lt;1(transient)</p><ul><li><p><strong>SO</strong></p><ul><li>recurrent⇒ E(V)&#x3D;∞</li><li>transient⇒ E(V)&lt;∞</li></ul><p>充分必要条件；transient定性。</p></li></ul><p>another way:</p><p><strong>think of V&#x3D;#returns as a tally.</strong></p><p>Have you returned at Step 1? YES+1 NO+0</p><p>Have you returned at Step 2? YES+1 NO+0</p><p>Have you returned at Step 3? YES+1 NO+0</p><p>Have you returned at Step 4? YES+1 NO+0 …</p><p>$ p_{00}^{(1)}&#x3D;1×P(yes)+0×P(no)&#x3D;P(yes) $</p><ul><li>00: origin→origin</li><li>1: revisit at step 1</li></ul><p><strong>E(V)&#x3D;$p_{00}^{(1)}+p_{00}^{(2)}+…$</strong></p><p>recurrent定量。</p><ul><li><strong>SO</strong><ul><li>recurrent⇒ E(V)&#x3D;∞ ($ &#x3D;p_{00}^{(1)} $+$ p_{00}^{(2)}+… $)<ul><li>diverge</li></ul></li><li>transient⇒ E(V)&lt;∞<ul><li>converge</li></ul></li></ul></li></ul><h1 id="Back-to-random-walk"><a href="#Back-to-random-walk" class="headerlink" title="Back to random walk"></a>Back to random walk</h1><h2 id="2-D-case"><a href="#2-D-case" class="headerlink" title="2-D case"></a>2-D case</h2><p>上下左右步数应当相等，所以只有可能在偶数步回到原点</p><p>$$ p_{00}^{(n)}&#x3D;0, \space\space if \space n \space odd. $$</p><ul><li>how can we calculate $p_{00}^{(2n)}$?</li></ul><p>e.g. $p_{00}^{(18)}&#x3D;(\frac{1}{4})^{18}$(each path)*(#return paths)</p><p>假设左右各i步，则上下各n-i步。</p><p>原排列出$(2n)!$个，但是是无序排列，所以要除inter-permutations：$i!i!(n-i)!(n-i)!$，那么：</p><p>$$ No.\space of\space return\space paths&#x3D;\sum_{i&#x3D;0}^n\frac{(2n)!}{i!i!(n-i)!(n-i)!} $$</p><p><strong>finally:</strong></p><p>$$ p_{00}^{(2n)}&#x3D;(\frac{1}{4})^{2n}\sum_{i&#x3D;0}^n\frac{(2n)!}{i!i!(n-i)!(n-i)!} $$</p><p>$ p_{00}^{(2n)}~\frac{1}{n} $ , diverge</p><h2 id="3-D-case"><a href="#3-D-case" class="headerlink" title="3-D case"></a>3-D case</h2><p>difference:</p><ul><li>1&#x2F;4→1&#x2F;6</li><li>i, n-i → i, j, n-i-j</li></ul><p>SO:</p><p>$$ p_{00}^{(2n)}&#x3D;(\frac{1}{6})^{2n}\sum_{i,j&#x3D;0}^n\frac{(2n)!}{i!i!j!j!(n-i-j)!(n-i-j)!} $$</p><p>$ p_{00}^{(2n)} $~$ \frac{1}{n^{3&#x2F;2}} $ , converge</p><p>数学计算在这里不予列出。</p><p>通俗解释：三维的“outer space”大一些，更容易找不着回来的路。</p><p>注意到这里又有一个”cutoff between 2D and 3D”，可以在furtherreading里面了解。</p><p><strong>Further reading:</strong> Larry Brown’s paper:</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa0NXR0xYbVlDVVByOFFDRWpTVmtvc3lVbDZCd3xBQ3Jtc0ttaUR0YlRHLTd5NThyOGlCM1RKcEFOc1haMzBINDh6ZGd6a1FIU0FvRmtnanNvUjY3aWhhREZxck9iV0VZeEtwTjl6cjlQeGlHM25qaEtCUHA4UE0xWDQxOVNKcXF5eGxfYnV2X2Z5RENsUmlxWnRycw&q=http://stat.wharton.upenn.edu/~lbrown/Papers/1971b%2520Admissible%2520estimators,%2520recurrent%2520diffusions,%2520and%2520insoluble%2520boundary%2520value%2520problems.pdf&v=iH2kATv49rc">http://stat.wharton.upenn.edu/~lbrown…</a></p><p>Using electric circuits to prove recurrence &#x2F; trasience:</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbWJoZzNrMURSdWd1bko0Wm9mSUdRa3dGcUNNd3xBQ3Jtc0ttNzlEUC02UjhxLTVQYW9vejB0bWwzWGtEWFJUTVlzR1RkMElXVWVlQmRxaFJSTWhsSHNaZ0JBNTFpYlJWX05DM3d5SFE2WUY1Z20wNWhTR3kzUDRENnNXNlBhOFhKQ0h0dW9QRktEUDVqaHo4UFpLSQ&q=https://math.dartmouth.edu/~pw/math100w13/mare.pdf&v=iH2kATv49rc">https://math.dartmouth.edu/~pw&#x2F;math10…</a></p><p>More complicated, but more general proof:</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbDhMX3cwOHI3QlNicWRFX1Q1S3NCVFVCM01nUXxBQ3Jtc0ttMTJxT0otOW8zd3lvSlczSE5GdTVSV1NILWRjbHRKTUdrbkd4djRoU3lBdnRDWG5XeXlQUnVKNzVTU1R1S3dOdnRnZnhCbnpTVlY1NVVseGE4MHE1QTFQdjZjRVBqNk41N2hBa1B6M1Zwa3lLOGxYSQ&q=https://sites.math.washington.edu/~morrow/336_19/papers19/Legrand.pdf&v=iH2kATv49rc">https://sites.math.washington.edu/~mo…</a></p><p>Actual probability for 3D random walk to come back:</p><p><a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbFNrNHdLZDZJdkN2U09xb3NHdk1tWmRLODJQQXxBQ3Jtc0trdm5mWnY1dnRnenAwMUU4RUwyc0Nqb2FvcXFhZnBBQ05wSUswMWRZa2MtbnlqZFIxM1ZuM1ZvZ3dacDU2bm15c243UkxCdkJ4ektURVVETzVGdnFpaHpOQ3VCYlNtUjNLYl9qNk9EUWlCT2M3QUkwMA&q=https://mathworld.wolfram.com/PolyasRandomWalkConstants.html&v=iH2kATv49rc">https://mathworld.wolfram.com/PolyasR...</a></p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 机器学习 </category>
          
          <category> 笔记本 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>课堂派：不允许下载</title>
      <link href="/2024/03/23/%E8%AF%BE%E5%A0%82%E6%B4%BE%EF%BC%9A%E4%B8%8D%E5%85%81%E8%AE%B8%E4%B8%8B%E8%BD%BD/"/>
      <url>/2024/03/23/%E8%AF%BE%E5%A0%82%E6%B4%BE%EF%BC%9A%E4%B8%8D%E5%85%81%E8%AE%B8%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="课堂派-反叛的弧音"><a href="#课堂派-反叛的弧音" class="headerlink" title="课堂派~反叛的弧音"></a>课堂派~反叛的弧音</h1><p>本文介绍在课堂派下载标明“不允许下载”的资料的方法。</p><p>参考了<a href="https://blog.csdn.net/sucr233/article/details/114501594#comments_25965207">CSDN</a> 这篇文章，这位佬提醒了我可以遇事不决看Source Code。</p><h2 id="从微信到本地html"><a href="#从微信到本地html" class="headerlink" title="从微信到本地html"></a>从微信到本地html</h2><p><strong>step1</strong></p><p>在浏览器中打开课堂派。</p><p><strong>step2</strong></p><p>使用<code>ctrl+shift+I</code>的快捷键打开网页源码。</p><p><strong>step3</strong></p><p>切换到<code>Sourse</code> 界面，找到名为document.ketangpai.com的文件夹，其中有你已经浏览过故而加载过的图片。</p><p><strong>step4</strong></p><p>到这里，根据想要下载的pdf数量的多少，可以分为两种方法：</p><p><strong>method A</strong></p><p>直接对单张图片右键保存，默认保存下来格式是PNG。可以使用smallpdf等软件转换其为PDF。</p><p><strong>method B</strong></p><p>想要通篇保存的话，可以：</p><ul><li>使用自动化工具<code>Tinytask</code>；</li><li>回到<code>Elements</code>，以<code>document</code>为关键词检索，找到一条链接，这个链接打开来就是整个PDF；</li></ul><p>一般是一个以`&lt;frame src&#x3D;”[<a href="https://document.ketangpai.com/">https://document.ketangpai.com/</a>] 打头的链接。</p><ul><li>然后可以：<ul><li><strong>先把整个PDF加载一遍</strong>（就是从头到尾把页面看一遍）；</li><li>使用插件：因为图片可以被直接嗅探，所以可以用chrome的一些插件来批量下载图片；</li><li>例：使用chrome的插件singlefile<ul><li>在google的插件商店安装总是出错，反正是开源的，建议在github手动安装：</li><li><a href="https://github.com/gildas-lormeau/SingleFile">github</a></li><li>You can download the zip file of the project and install it manually by unzipping it somewhere on your disk and following these instructions:<ul><li>Firefox: <a href="https://extensionworkshop.com/documentation/develop/temporary-installation-in-firefox/">https://extensionworkshop.com/documentation/develop/temporary-installation-in-firefox/</a></li><li>Chrome: <a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics/#load-unpacked">https://developer.chrome.com/docs/extensions/mv3/getstarted/development-basics/#load-unpacked</a></li><li>Microsoft Edge: <a href="https://docs.microsoft.com/en-us/microsoft-edge/extensions-chromium/getting-started/extension-sideloading">https://docs.microsoft.com/en-us/microsoft-edge/extensions-chromium/getting-started/extension-sideloading</a></li><li>Safari: <a href="https://github.com/gildas-lormeau/SingleFile-Safari-Extension">https://github.com/gildas-lormeau/SingleFile-Safari-Extension</a></li></ul></li></ul></li><li>成功下载本地html文件，可以本地浏览或进一步转其为PDF。（url→pdf? ）</li><li>注意下载html前也要把整个页面刷新加载一遍。</li></ul></li></ul><hr><p>至于上升到自动爬虫程度的方案……之后有需求再做吧。 还有PDF以外的文件格式也是，比较麻烦。暂时没想出PPTX的下载方案。</p><hr><h2 id="从本地html到本地pdf"><a href="#从本地html到本地pdf" class="headerlink" title="从本地html到本地pdf"></a>从本地html到本地pdf</h2><p>下面介绍一些转html为pdf的方法：</p><ol><li><p><strong>wkhtmltopdf（无维护，报错多，不建议使用）</strong></p><p>参考文章：<a href="https://blog.csdn.net/qq_14873105/article/details/51394026">https://blog.csdn.net/qq_14873105&#x2F;article&#x2F;details&#x2F;51394026</a></p><p>一个把html页面转换成pdf的一个软件（需要安装在服务器上）。它可以直接通过cmd批量处理，使用php中的 shell_exec()函数就可以调用它。</p><p>下面介绍用php+js+html来让它生成pdf文件的方法（缺陷：需要在服务器端生成一个缓存文件，如果你使用thinkphp框架的话就可以将其缓存文件放在runtime 文件夹中暂存）。</p><ul><li>下载地址：<a href="http://wkhtmltopdf.org/downloads.html">http://wkhtmltopdf.org/downloads.html</a> 选择合适的版本下载并安装。</li><li>环境变量：在系统环境变量变量名为”Path”的后添加你安装的目录(e.g. E:\日常软件\wkhtmltopdf\bin)。安装好以后重启电脑。</li><li>测试使用效果：<ul><li>cmd输入：<code>wkhtmltopdf http://www.baidu.com/ D:website1.pdf</code></li><li>语法解读：<code>运行软件名称 网址 生成路径及文件名</code></li><li>检查D盘是否出现了百度搜索界面的pdf，pdf名字为website1</li></ul></li><li>php调用：略</li></ul></li><li><p><a href="https://github.com/wuxue107/bookjs-eazy">https://github.com/wuxue107/bookjs-eazy</a> 一个老哥搞的<strong>wkhtmltopdf</strong>进阶版……看起来很复杂，我就先不研究了。</p></li><li><p>chrome 插件 chrome插件多试几次还是好安装的。</p><ul><li>HTML to PDF Convertor ：老哥你的网页快照都是歪的……</li><li>网页到pdf转换器： 滚动式网页快照……照得不全。</li><li>save to pdf：照得还可以，基于wordpress API做的pdfcrowd，缺点在于每一页pdf下面都有开发者的广告，会挡住pdf的内容并且谜之分页。还有页面大小限制，页面一多就照不全。</li><li>save webpage as pdf: 也是用pdfcrowd做的插件，差。</li></ul></li></ol><hr><ol start="4"><li><p>真神降临。</p><p>adobe acrobat的创建pdf可以放html进去。效果绝佳。只需进行小小的页面裁切。</p></li></ol><hr><p><strong>总结整体流程：</strong></p><ul><li>在浏览器打开课堂派；</li><li>查看源码，找到PDF的链接；</li><li>打开链接，完全加载，使用singlefile等方法保存该html；</li><li>使用adobe acrobat（暂无替代方案）转html为PDF并编辑。</li><li>大功告成！</li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adobe </tag>
            
            <tag> 课堂派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fiction Tang</title>
      <link href="/2024/03/21/fiction-tang/"/>
      <url>/2024/03/21/fiction-tang/</url>
      
        <content type="html"><![CDATA[<h1 id="闻《fiction-tang》怀老杜，兼怀老许"><a href="#闻《fiction-tang》怀老杜，兼怀老许" class="headerlink" title="闻《fiction tang》怀老杜，兼怀老许"></a>闻《fiction tang》怀老杜，兼怀老许</h1><h2 id="歌词与诗文对照"><a href="#歌词与诗文对照" class="headerlink" title="歌词与诗文对照"></a>歌词与诗文对照</h2><p>又名：杜甫纯度检测器</p><p>许渊冲译文待补</p><ul><li><p>会当凌绝顶</p></li><li><p>少年风发 一望临渺众山 [su_accordion][su_spoiler title&#x3D;”望岳三首” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]望岳三首 岱宗夫如何？齐鲁青未了。 造化钟神秀，阴阳割昏晓。 荡胸生曾云，决眦入归鸟。 会当凌绝顶，一览众山小。 西岳崚嶒竦处尊，诸峰罗立似儿孙。 安得仙人九节杖，拄到玉女洗头盆。 车箱入谷无归路，箭栝通天有一门。 稍待秋风凉冷后，高寻白帝问真源。 南岳配朱鸟，秩礼自百王。 歘吸领地灵，鸿洞半炎方。 邦家用祀典，在德非馨香。 巡守何寂寥，有虞今则亡。 洎吾隘世网，行迈越潇湘。 渴日绝壁出，漾舟清光旁。 祝融五峯尊，峯峯次低昴。 紫盖独不朝，争长嶫相望。 恭闻魏夫人，羣仙夹翱翔。 有时五峯气，散风如飞霜。 牵迫限修途，未暇杖崇冈。 归来觊命驾，沐浴休玉堂。 三叹问府主，曷以赞我皇。 牲璧忍衰俗，神其思降祥。[&#x2F;su_spoiler][&#x2F;su_accordion]</p></li><li><p>白首成濩落</p></li><li><p>许身何愚 澒洞忧齐终南 [su_accordion][su_spoiler title&#x3D;”自京赴奉先县咏怀五百字” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]自京赴奉先县咏怀五百字 杜陵有布衣，老大意转拙。 许身一何愚，窃比稷与契。 居然成濩落，白首甘契阔。 盖棺事则已，此志常觊豁。 穷年忧黎元，叹息肠内热。 取笑同学翁，浩歌弥激烈。 非无江海志，潇洒送日月。 生逢尧舜君，不忍便永诀。 当今廊庙具，构厦岂云缺。 葵藿倾太阳，物性固难夺。 顾惟蝼蚁辈，但自求其穴。 胡为慕大鲸，辄拟偃溟渤。 以兹误生理，独耻事干谒。 兀兀遂至今，忍为尘埃没。 终愧巢与由，未能易其节。 沉饮聊自遣，放歌破愁绝。 岁暮百草零，疾风高冈裂。 天衢阴峥嵘，客子中夜发。 霜严衣带断，指直不得结。 凌晨过骊山，御榻在嵽嵲。 蚩尤塞寒空，蹴蹋崖谷滑。 瑶池气郁律，羽林相摩戛。 君臣留欢娱，乐动殷樛嶱。 赐浴皆长缨，与宴非短褐。 彤庭所分帛，本自寒女出。 鞭挞其夫家，聚敛贡城阙。 圣人筐篚恩，实欲邦国活。 臣如忽至理，君岂弃此物。 多士盈朝廷，仁者宜战栗。 况闻内金盘，尽在卫霍室。 中堂舞神仙，烟雾散玉质。 煖客貂鼠裘，悲管逐清瑟。 劝客驼蹄羹，霜橙压香橘。 朱门酒肉臭，路有冻死骨。 荣枯咫尺异，惆怅难再述。 北辕就泾渭，官渡又改辙。 群冰从西下，极目高崒兀。 疑是崆峒来，恐触天柱折。 河梁幸未坼，枝撑声窸窣。 行旅相攀援，川广不可越。 老妻寄异县，十口隔风雪。 谁能久不顾，庶往共饥渴。 入门闻号啕，幼子饥已卒。 吾宁舍一哀，里巷亦呜咽。 所愧为人父，无食致夭折。 岂知秋禾登，贫窭有仓卒。 生常免租税，名不隶征伐。 抚迹犹酸辛，平人固骚屑。 默思失业徒，因念远戍卒。 忧端齐终南，澒洞不可掇。[&#x2F;su_spoiler][&#x2F;su_accordion]</p></li><li><p>独登啸悲秋</p></li><li><p>叹恨霜鬓繁 凭轩涕泗 忆长安 [su_accordion][su_spoiler title&#x3D;”登高” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]登高 风急天高猿啸哀，渚清沙白鸟飞回。 无边落木萧萧下，不尽长江滚滚来。 万里悲秋常作客，百年多病独登台。 艰难苦恨繁霜鬓，潦倒新停浊酒杯。[&#x2F;su_spoiler][&#x2F;su_accordion] [su_accordion][su_spoiler title&#x3D;”登岳阳楼” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]登岳阳楼 昔闻洞庭水，今上岳阳楼。 吴楚东南坼，乾坤日夜浮。 亲朋无一字，老病有孤舟。 戎马关山北，凭轩涕泗流。[&#x2F;su_spoiler][&#x2F;su_accordion]</p></li><li><p>造化神秀 今又落木萧萧然</p></li><li><p>纵意气 裘马轻狂 [su_accordion][su_spoiler title&#x3D;”壮游” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]壮游 往昔十四五，出游翰墨场。 斯文崔魏徒，以我似班扬。 七龄思即壮，开口咏凤凰。 九龄书大字，有作成一囊。 性豪业嗜酒，嫉恶怀刚肠。 脱略小时辈，结交皆老苍。 饮酣视八极，俗物都茫茫。 东下姑苏台，已具浮海航。 到今有遗恨，不得穷扶桑。 王谢风流远，阖庐丘墓荒。 剑池石壁仄，长洲荷芰香。 嵯峨阊门北，清庙映回塘。 每趋吴太伯，抚事泪浪浪。 枕戈忆勾践，渡浙想秦皇。 蒸鱼闻匕首，除道哂要章。 越女天下白，鉴湖五月凉。 剡溪蕴秀异，欲罢不能忘。 归帆拂天姥，中岁贡旧乡。 气劘屈贾垒，目短曹刘墙。 忤下考功第，独辞京尹堂。 放荡齐赵间，裘马颇清狂。 春歌丛台上，冬猎青丘旁。 呼鹰皂枥林，逐兽云雪冈。 射飞曾纵鞚，引臂落鹙鶬。 苏侯据鞍喜，忽如携葛强。 快意八九年，西归到咸阳。 许与必词伯，赏游实贤王。 曳裾置醴地，奏赋入明光。 天子废食召，群公会轩裳。 脱身无所爱，痛饮信行藏。 黑貂不免敝，斑鬓兀称觞。 杜曲晚耆旧，四郊多白杨。 坐深乡党敬，日觉死生忙。 朱门任倾夺，赤族迭罹殃。 国马竭粟豆，官鸡输稻粱。 举隅见烦费，引古惜兴亡。 河朔风尘起，岷山行幸长。 两宫各警跸，万里遥相望。 崆峒杀气黑，少海旌旗黄。 禹功亦命子，涿鹿亲戎行。 翠华拥英岳，螭虎啖豺狼。 爪牙一不中，胡兵更陆梁。 大军载草草，凋瘵满膏肓。 备员窃补衮，忧愤心飞扬。 上感九庙焚，下悯万民疮。 斯时伏青蒲，廷争守御床。 君辱敢爱死，赫怒幸无伤。 圣哲体仁恕，宇县复小康。 哭庙灰烬中，鼻酸朝未央。 小臣议论绝，老病客殊方。 郁郁苦不展，羽翮困低昂。 秋风动哀壑，碧蕙捐微芳。 之推避赏从，渔父濯沧浪。 荣华敌勋业，岁暮有严霜。 吾观鸱夷子，才格出寻常。 群凶逆未定，侧伫英俊翔。[&#x2F;su_spoiler][&#x2F;su_accordion] [su_accordion][su_spoiler title&#x3D;”（插播）轻肥【白居易】” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]（插播）轻肥【白居易】 意气骄满路，鞍马光照尘。 借问何为者，人称是内臣。 朱绂皆大夫，紫绶或将军。(或 一作：悉) 夸赴军中宴，走马去如云。 樽罍溢九酝，水陆罗八珍。 果擘洞庭橘，脍切天池鳞。 食饱心自若，酒酣气益振。 是岁江南旱，衢州人食人。[&#x2F;su_spoiler][&#x2F;su_accordion]</p></li><li><p>擿绦镟 劲鹰飞飏 [su_accordion][su_spoiler title&#x3D;”画鹰” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]画鹰 素练风霜起，苍鹰画作殊。 㧐身思狡兔，侧目似愁胡。 绦镟光堪擿，轩楹势可呼。 何当击凡鸟，毛血洒平芜。[&#x2F;su_spoiler][&#x2F;su_accordion]</p></li><li><p>浮云去 秦碑孤嶂</p></li><li><p>踌躇又 鲁殿城荒 [su_accordion][su_spoiler title&#x3D;”登兖州城楼” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]登兖州城楼 东郡趋庭日，南楼纵目初。 浮云连海岱，平野入青徐。 孤嶂秦碑在，荒城鲁殿馀。 从来多古意，临眺独踌躇。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>痛饮狂歌岁且长 [su_accordion][su_spoiler title&#x3D;”赠李白” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]赠李白 秋来相顾尚飘蓬，未就丹砂愧葛洪。 痛饮狂歌空度日，飞扬跋扈为谁雄。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>醉携仙人乘风去 千古付流觞</p></li><li><p>把金樽且尽手中杯</p></li><li><p>秋蓬漫飞 各一方 [su_accordion][su_spoiler title&#x3D;”鲁郡东石门送杜二甫” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]鲁郡东石门送杜二甫 醉别复几日，登临遍池台。 何时石门路，重有金樽开。 秋波落泗水，海色明徂徕。 飞蓬各自远，且尽手中杯。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>西云薄日暮</p></li><li><p>志豁廊庙 终愧碌碌</p></li><li><p>天衢阴 攀骊山 嵽嵲处</p></li><li><p>方见 瑶池郁 冷袖舞</p></li><li><p>王孙欢合鼓笙 五味馐肴腐</p></li><li><p>朱门外 孰怜千里殍骨</p></li><li><p>崆峒欲来 恐覆天柱</p></li><li><p>胡蹄躏山河</p></li><li><p>烽火捣关 铁马毁破西京</p></li><li><p>天地竟崩倾</p></li><li><p>鬼啸锥心 何处辕门尘腥</p></li><li><p>残阳薄宫墟</p></li><li><p>千门缚故景 细柳新蒲 为谁青？ [su_accordion][su_spoiler title&#x3D;”哀江头” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]哀江头 少陵野老吞声哭，春日潜行曲江曲。 江头宫殿锁千门，细柳新蒲为谁绿？ 忆昔霓旌下南苑，苑中万物生颜色。 昭阳殿里第一人，同辇随君侍君侧。 辇前才人带弓箭，白马嚼啮黄金勒。 翻身向天仰射云，一笑正坠双飞翼。(一笑 一作：一箭) 明眸皓齿今何在？血污游魂归不得。 清渭东流剑阁深，去住彼此无消息。 人生有情泪沾臆，江水江花岂终极！ 黄昏胡骑尘满城，欲往城南望城北。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>白头搔短 空望天下恨难罄 [su_accordion][su_spoiler title&#x3D;”春望” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]春望 国破山河在，城春草木深。 感时花溅泪，恨别鸟惊心。 烽火连三月，家书抵万金。 白头搔更短，浑欲不胜簪。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>斑鬓枯泪 天地终无情</p></li><li><p>戍子赴伶俜 朔风袭铁衣</p></li><li><p>何寻归期 [su_accordion][su_spoiler title&#x3D;”赠李白” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]新安吏 客行新安道，喧呼闻点兵。 借问新安吏：“县小更无丁？” “府帖昨夜下，次选中男行。” “中男绝短小，何以守王城？” 肥男有母送，瘦男独伶俜。 白水暮东流，青山犹哭声。 “莫自使眼枯，收汝泪纵横。 眼枯即见骨，天地终无情！ 我军取相州，日夕望其平。 岂意贼难料，归军星散营。 就粮近故垒，练卒依旧京。 掘壕不到水，牧马役亦轻。 况乃王师顺，抚养甚分明。 送行勿泣血，仆射如父兄。”[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>暮投石壕 军吏怒 妇翁惊</p></li><li><p>“好儿郎 应执长缨”</p></li><li><p>夜久语声渐绝</p></li><li><p>幽咽逾天明 [su_accordion][su_spoiler title&#x3D;”石壕吏” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]石壕吏 暮投石壕村，有吏夜捉人。 老翁逾墙走，老妇出门看。(出门看 一作：出看门) 吏呼一何怒！妇啼一何苦！ 听妇前致词：三男邺城戍。 一男附书至，二男新战死。 存者且偷生，死者长已矣！ 室中更无人，惟有乳下孙。 有孙母未去，出入无完裙。 老妪力虽衰，请从吏夜归。 急应河阳役，犹得备晨炊。 夜久语声绝，如闻泣幽咽。 天明登前途，独与老翁别。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>戾风骤 王旌倾靡</p></li><li><p>雄师溃 骨暴千里</p></li><li><p>故庐园 今蒿藜</p></li><li><p>茫渺何处 归来寻旧蹊</p></li><li><p>独踽行 万象悲戚</p></li><li><p>家乡荡尽 死生何异</p></li><li><p>泣问天地</p></li><li><p>何以宿鸟 无枝可栖？ [su_accordion][su_spoiler title&#x3D;”无家别” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]无家别 寂寞天宝后，园庐但蒿藜。 我里百余家，世乱各东西。 存者无消息，死者为尘泥。 贱子因阵败，归来寻旧蹊。 久行见空巷，日瘦气惨凄。 但对狐与狸，竖毛怒我啼。 四邻何所有，一二老寡妻。 宿鸟恋本枝，安辞且穷栖。 方春独荷锄，日暮还灌畦。 县吏知我至，召令习鼓鞞。 虽从本州役，内顾无所携。 近行止一身，远去终转迷。 家乡既荡尽，远近理亦齐。 永痛长病母，五年委沟溪。 生我不得力，终身两酸嘶。 人生无家别，何以为蒸黎。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>孤云缭蜀都</p></li><li><p>社稷荡覆 安寻乐土</p></li><li><p>浣花溪 翠篠净 燕莺舞 [su_accordion][su_spoiler title&#x3D;”狂夫” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]狂夫 万里桥西一草堂，百花潭水即沧浪。 风含翠篠娟娟净，雨裛红蕖冉冉香。(篠 通：筱) 厚禄故人书断绝，恒饥稚子色凄凉。 欲填沟壑唯疏放，自笑狂夫老更狂。[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>奈何 稚子哭 讨裹腹 [su_accordion][su_spoiler title&#x3D;”江村” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]江村 清江一曲抱村流，长夏江村事事幽。 自去自来梁上燕，相亲相近水中鸥。(梁上 一作：堂上) 老妻画纸为棋局，稚子敲针作钓钩。 但有故人供禄米，微躯此外更何求？[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>秋昏雨骤风怒 长夜倚残庐</p></li><li><p>安可得 一朝圣恩垂沐</p></li><li><p>大庇天下 寒门白户 [su_accordion][su_spoiler title&#x3D;”茅屋为秋风所破歌” open&#x3D;”no” style&#x3D;”default” icon&#x3D;”plus” anchor&#x3D;”” anchor_in_url&#x3D;”no” class&#x3D;””]茅屋为秋风所破歌 八月秋高风怒号，卷我屋上三重茅。 茅飞渡江洒江郊，高者挂罥长林梢，下者飘转沉塘坳。 南村群童欺我老无力，忍能对面为盗贼。 公然抱茅入竹去，唇焦口燥呼不得，归来倚杖自叹息。 俄顷风定云墨色，秋天漠漠向昏黑。 布衾多年冷似铁，娇儿恶卧踏里裂。 床头屋漏无干处，雨脚如麻未断绝。 自经丧乱少睡眠，长夜沾湿何由彻！ 安得广厦千万间，大庇天下寒士俱欢颜！风雨不动安如山。 呜呼！何时眼前突兀见此屋，吾庐独破受冻死亦足！ PS：好轴！《empty chairs and empty tables》[&#x2F;su_spoiler] [&#x2F;su_accordion]</p></li><li><p>会当凌绝顶</p></li><li><p>少年风发 一望临渺众山</p></li><li><p>白首成濩落</p></li><li><p>许身何愚 澒洞忧齐终南</p></li><li><p>独登啸悲秋</p></li><li><p>叹恨霜鬓繁 凭轩涕泗 忆长安</p></li><li><p>造化神秀 今又落木萧萧然</p></li><li><p>穷年叹衰残</p></li><li><p>乾坤淆乱 砥柱中流何堪</p></li><li><p>世事多迁易</p></li><li><p>剑器浑脱 筚篥羯鼓长黯</p></li><li><p>寂寞天宝后</p></li><li><p>血流川原丹 千室悬罄 孤鸿断</p></li><li><p>诗海茫渺 何尽苍生之艰难</p></li><li><p>浊酒酹少陵</p></li><li><p>乾坤淆乱 砥柱中流谁堪</p></li><li><p>世事多迁易</p></li><li><p>金舆玉殿 霓裳羽衣终黯</p></li><li><p>独望暗潸然</p></li><li><p>血流川原丹 千室悬罄 孤鸿断</p></li><li><p>史海茫渺 书尽苍生之艰难</p></li><li><p>今又是 萧瑟秋风</p></li><li><p>却待何时人间换</p></li></ul><h2 id="主要诗文赏析"><a href="#主要诗文赏析" class="headerlink" title="主要诗文赏析"></a>主要诗文赏析</h2><h3 id="自京赴奉先县咏怀五百字"><a href="#自京赴奉先县咏怀五百字" class="headerlink" title="自京赴奉先县咏怀五百字"></a>自京赴奉先县咏怀五百字</h3><p><strong>自京赴奉先县咏怀五百字</strong></p><p>杜陵有布衣，老大意转拙。</p><p>许身一何愚，窃比稷与契。</p><p>居然成<strong>濩落</strong>，<strong>白首</strong>甘契阔。</p><p>盖棺事则已，此志常觊豁。</p><p>穷年忧黎元，叹息肠内热。</p><p>取笑同学翁，浩歌弥激烈。</p><p>非无江海志，潇洒送日月。</p><p>生逢尧舜君，不忍便永诀。</p><p>当今廊庙具，构厦岂云缺。</p><p>葵藿倾太阳，物性固难夺。</p><p>顾惟蝼蚁辈，但自求其穴。</p><p>胡为慕大鲸，辄拟偃溟渤。</p><p>以兹误生理，独耻事干谒。</p><p>兀兀遂至今，忍为尘埃没。</p><p>终愧巢与由，未能易其节。</p><p>沉饮聊自遣，放歌破愁绝。</p><p>岁暮百草零，疾风高冈裂。</p><p>天衢阴峥嵘，客子中夜发。</p><p>霜严衣带断，指直不得结。</p><p>凌晨过骊山，御榻在<strong>嵽嵲。</strong></p><p>蚩尤塞寒空，蹴蹋崖谷滑。</p><p>瑶池气郁律，羽林相摩戛。</p><p>君臣留欢娱，乐动殷樛嶱。</p><p>赐浴皆长缨，与宴非短褐。</p><p>彤庭所分帛，本自寒女出。</p><p>鞭挞其夫家，聚敛贡城阙。</p><p>圣人筐篚恩，实欲邦国活。</p><p>臣如忽至理，君岂弃此物。</p><p>多士盈朝廷，仁者宜战栗。</p><p>况闻内金盘，尽在卫霍室。</p><p>中堂舞神仙，烟雾散玉质。</p><p>煖客貂鼠裘，悲管逐清瑟。</p><p>劝客驼蹄羹，霜橙压香橘。</p><p>朱门酒肉臭，路有冻死骨。</p><p>荣枯咫尺异，惆怅难再述。</p><p>北辕就泾渭，官渡又改辙。</p><p>群冰从西下，极目高崒兀。</p><p>疑是<strong>崆峒</strong>来，恐触天柱折。</p><p>河梁幸未坼，枝撑声窸窣。</p><p>行旅相攀援，川广不可越。</p><p>老妻寄异县，十口隔风雪。</p><p>谁能久不顾，庶往共饥渴。</p><p>入门闻号啕，幼子饥已卒。</p><p>吾宁舍一哀，里巷亦呜咽。</p><p>所愧为人父，无食致夭折。</p><p>岂知秋禾登，贫窭有仓卒。</p><p>生常免租税，名不隶征伐。</p><p>抚迹犹酸辛，平人固骚屑。</p><p>默思失业徒，因念远戍卒。</p><p><strong>忧端齐终南</strong>，<strong>澒洞</strong>不可掇。</p>]]></content>
      
      
      <categories>
          
          <category> 悦乐 </category>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>飞书妙记</title>
      <link href="/2024/03/20/%E9%A3%9E%E4%B9%A6%E5%A6%99%E8%AE%B0/"/>
      <url>/2024/03/20/%E9%A3%9E%E4%B9%A6%E5%A6%99%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><strong>给大伙儿看看飞书妙记语音转录文字的效果。</strong></p><p><strong>这节课我坐第二排，第一排没人，算是离老师很近了。老师说的普通话很标准。</strong></p><p><strong>把手机平放在课桌上录的，没有任何干扰。</strong></p><p><strong>以下是飞书生成的课堂记录。我个人看来，没听过这节课而能看懂这文档的算是天赋异禀。所以这篇更多的是给大家看个乐子。</strong></p><hr><h1 id="珠宝鉴赏2024-3-20"><a href="#珠宝鉴赏2024-3-20" class="headerlink" title="珠宝鉴赏2024.3.20"></a>珠宝鉴赏2024.3.20</h1><blockquote><p>2024年3月20日 下午 7:47 47分钟 3秒</p></blockquote><p><strong>关键词</strong> 蓝宝石 颜色 合成 产地 蓝色 鉴定 great jewel 价格 品质 珠宝 缅甸 晶体 great idea 特征 价格差异 泰国市场 市场效果 宝石套装 合成宝石 宝石颜色</p><p>文字记录 说话人 1 00:49 好，我们来看一下红宝石的鉴定，那关于红宝石的鉴定的话，遮瑕鉴定我们拿来看一下，它是合成的。老师我曾经接到过一个检测，就是我们财务会有一个老师，他拿来一个戒指，然后想让我帮他改款，说他要父母是这个结婚时候买的一枚红宝时间，当然他当时没有想让我鉴定，就是改款，也就是他对这个宝石的生产没有存在的质疑，但是当然我看了以后我告诉他，我说这是一个合成的宝石，看听起来非常吃惊，因为他 50 年代的是，他们怎么可能买合成品？那么你一般你要知道合成什么时候有的，我们来看一下这些，这个的话就是这件作品，它是这个一个 14 克拉的一个钢举，也可以称为，就是我其实原来他是红老师，他是这个钢笔是一样的，那他原来是这个洛杉矶的一个社区博物馆的一个馆藏品，那也就是说他当时是按照天然宝石去构建的，那个时候是 1955 年的。是，但是后来的话。</p><p>说话人 1 01:57 其实真正的合成可以更早在 100 年前，法国的一位化学家维尔纳叶就发明了合成红帽使用方法，那么当时这种方法的话叫做维尔纳叶。哈，那这里大家看到都是合成的方式，那这种合成方法的话，它的技术很简单，大家看一下就是用一个高温乳，那么怎么样去合成原材料就用氧化铝和粉末，然后通过高温的清氧火焰，你们还记得清氧火焰它燃烧时候的温度是多少度？西安火电的温度是多少？就是你初中的话题知识 2, 000 升使用，所以讲话里坟墓通过这个高中夕阳火焰以后它就熔融了，向下的话会在这个机体上就开始温度下降，那就会形成了饱和晶体，那么它的晶体的话是一个旋转的下降，所以形成的是这样像放不放或像波一样的形式呢。那么整个标准你会发现非常的简单，所以它生产的成本很低，然后就是产的这个生产速度也很快，这就导致了何成红保时期价格非常甜。</p><p>说话人 1 03:01 我们现在最早期的话，比如说缅甸的红宝石丢成哥，可能它的单发量，但是你们知道合成的一个红宝石和免费的品一模一样的，合成这个红宝石多少钱吗？我们给学生曾经做过一个安排，沟通课，是我们的本科生和升级珠宝的话，有一个任务，他们自己的收集样品，我让他们自己到市场上去买一个合成红宝，重量不少， 6 个克拉，然后价格不超过 50 块，这就是这个应该有的市场效果。</p><p>说话人 1 03:31 当然了，如果它做成珠宝饰品放的是电子的话，它价格很难优，那就是多少钱你就知道了。可是问题是如果是核心老师在我们国内销售的话，我们国标要求前面一定要加上合成两条四，不加合成的话默认都是天然的，那商家不敢合标注，对吧？那商家如果说不标的话，直接按天然的那个慢慢走，不了啊。那边上合成两个字他也不愿意，因为在我们的消费者心目中，合成等同于讲过，所以它采用了一个变通的方式，它把它叫成叫红缸绿、蓝缸绿。下次大家如果在市场，然后在什么地方，你看有人卖红缸绿、蓝缸绿没有问题，都是合成方案的变化，这是它的这个合成宝石，所以大家一定要注意在买合成红宝，买红宝石的时候除了是不是红宝石，第二个问题一定要关注一下是不是合成红宝石，只要这个产品的话是 100 年以内做的，但是古董不保三四百年前或上千年前的古董付宝啊。但是如果是一买一以内的话都是有区别，其实合成的限定的话，它在我身上并不难。那刚才大家看到那个晶体的话，它是旋转下降的，所以它的生产生长纹是什么样子呢？是一个像唱天门一样的。</p><p>说话人 1 04:55 那洪老师的建议除了合成的话，还有一个需要大家关注的问题，就是优化处理，尤其是玻璃碎片，我们讲红宝石的话，原石多列，那有一些红宝石切好了以后裂纹，比如说像这种裂纹，那这种裂纹的话可以用什么方法掩盖呢？就像我们看一下钻石的裂纹掩盖一样，剥离空间就可以把它的裂隙掩盖掉，那么液看不到了以后，但是我们在它的这个充电的位置上能够看到蓝色的干涉。</p><p>说话人 1 05:22 所以在我们检测的时候，一旦看到这种颜色，蓝色不知道是什么，告诉我们一个信息，这个红包还是经过了玻璃心，这些红包它也会大大降低保湿的价格。我们在掌眼上看到一些黑发商专门卖这种充电处理的玻璃充电处理保湿两相对，免歇一克拉。那么这种东西尤其要几天，大家如果去东南亚，所谓的保时捷3D，什么越南、尼泊尔，或甚至在泰国、斯兰卡，那么如果在一些下游市场上，旅游品的市场上，你买到同安保多半都是这个东西，那么合成的，要么就是从前优化处理的。我们其实去年的时候我有一个老师，他还拿来着他的父亲，然后这个在越南旅行的时候买了一大堆的红宝石，老先生也很不清楚，这个也是很疼儿女的，这个太太一套儿一套，媳妇儿一套，然后一大堆说的。回来之后的 task 很开心，跟客户的女儿讲说你买了一颗红宝石，在我朋友那个宝石一万多宝石，你看我给你买一堆，你三个人，每个人都有，总共花起来才1万块钱，多核算。但是他们女儿不放心，拿过来让我们看，就是这种东西很懂事，这个都甚至不用到血腥现象，我们肉眼是光扇，光线稍微动一动就看了一大片白临。</p><p>说话人 1 06:51 但有的同学可能会觉得说合成和优化处理的话我们就不想了，所以这是不是吴老师有时候或者是他这个我们也没有这样一个专业的手段和技术能够去判断，那该怎么办呢？那我教大家两个方法，第一个当然你如果说是说一定要想要通过自己的方式来判断，给这个宝石一个大致的判断，那有一个方法就是你尽可能的找到这个宝石所有特征中矛盾的情况都不用，他矛盾的地方不越多，说明这个宝石特别大。</p><p>说话人 1 07:19 比如说大家看，你看一个宝石，你不忘不看这几个内容，颜色、净度、大小加跟这两个架构，你把这几个品质放在一起综合去看一下，看他有没有问题。比如说一颗宝石颜色都是鸽血酮，而且干干净净，重量可以达到 5 克拉了，但是它加工质量不太好，切的不是那么中正，那么如果镶嵌的时候，边上它甚至都不舍得用金镶嵌铜做的铜托，但是像卖家可能会给你很多说法，我们没有这个。嗯，你回去自己项目保持续，真的等等，但是一般情况下会存在这种情况，反而还有一个问题就是慢啊。</p><p>说话人 1 07:54 正常的市场价 10 万的可能卖1万块，那这种矛盾出现的时候，我们记住在珠宝行业里面的话，尤其是对于不懂行的我们消费者，很多人认为自己是这个进到这个行业中，不是大佬，你有一串会员可以捡到大部分人捡到的大部分人都是天龙，不会掉馅饼，很多人会掉铁里，多半都会把很多人都给砸光了。所以在珠宝行业中，你能够就是用你的合理的价格买到货真价实的这个宝石，已经是很正很幸运的事情了。</p><p>说话人 1 08:28 你如果说想要捡漏等等的，至少我再从业这么多年，我没有看到过谁所谓的真的能够捡到漏，放这个你想寄到你手上的这个宝石在你前面的话已经过了多少人的手？多少人过在这些人又有多少人都是行家？人家都没有捡到钱，到底这里会捡到你？没有任何专业知识的人，只要抱着这种想法在这个行业里非常的重要，我看到太多上当的人，那么第二个的话就是我还是那句话，专业的事情交给专业，不要信赖自己。</p><p>说话人 1 08:59 怎么办呢？你让正规的检疫机过去拍证书就可以，那么可以您可以对证书的含金量有要求，你这个宝石柜要求它匹配相应的宝贝的证书，比如说那这个宝石几万块钱，那你就到加一起的证书，这个证书开起来的话，大概现在的市场价一个一千一两千的样子，那么比例子刚才的证书完全是可以的，你只要不会看这个证书就行。</p><p>说话人 1 09:24 大家看在这个证书上的话，前面的数字没什么讲的，这个证书会给一个很重要的connect，这个叫注释里面它会告诉你是否经过了优化处理啊。而且会给你这个颜色评级，大家看他给的只是深红色的物料和平衡，还有他们自己产地这些信息，你们看就可以了。那么最后买宝石的时候，那么所有的彩色宝石在这样的时候基本都按照这个几个指标来定价的，那么颜色永远是我们衡量所有彩色宝石最重要的，也是他们最容易去探索的。严肃，越漂亮价格肯定越高，其他的话也不是会影响老师的价格，比如说颜色，大家看看如果说在这几颗中都是红宝石的话，哪一颗颜色是好？那我们记住所有的宝石，无论是什么宝石，衡量它的颜色。</p><p>说话人 1 10:14 什么叫好颜色？满足四个字，第一个要正，不能偏色，不能有瑕疵。第二个要阳，颜色不能黑，不能暗。第三个浓，不能淡，按淡淡的浅浅就可以。这个最后一个人可能要均匀，不能颜色很斑薄。用这 4 个点去评价的话，大家看看这4，这几个宝石中，你觉得哪一颗符合的元素是可保持的？左下角这一颗对这个是相对来说比较好的，那这项上面三个很明显偏色，那可能会有很多同学说中间这两个不是也挺好的吗？这两个颜色不够深，不够浓郁啊。所以说我们一般像最好的红、科学红和黄加蓝，它有个特点，暗的灯光下看起来发黑的，暗的灯光有的时候会发黑，所以它是非常深邃的、浓郁的这个颜色，这才是好红宝石。我们就介绍到这里，接下来我们看一下蓝宝石，那蓝宝石它的象征意义和红宝石虽然谈不到截然相反，但是有很大的名头，它是一种浓郁、深邃的、味重的、宁静的这样一个颜色。那蓝老师他的英文的话，萨克尔这个词也是来自于拉丁语，原意是对土性的真爱。据说波斯人认为整个的大地就是有一块硕大的蓝宝石之称。蓝宝石把颜色摆上了天上，天空变白了，那么在把颜色打到海里还是有变白的，所以在这个蓝宝石的这个象征意义里面的话，还有一个它可以保护国王和君主。</p><p>说话人 1 11:42 伤害是冬奥传说中具有指路的宝石，如果有星光效应和蓝宝石的话，它有特殊的意义。那么在这顶王冠上的话，原来布里南的这个位置成项倩的这个蓝宝石在西菲亚的蓝宝石上面，这个爱德华蓝宝石，这两个宝石都是故事，你们打算起码可以去搜一搜。曾经是被这个英国一任国王爱德巴国王，他的陪葬品带到了这个满德通地理，后来给他挖出来。那么王室同样有很多的混动的这个珠宝，特别是男老师套装，那这套装的话也是伴随着女王出镜很多次的，因为这个糖不能像嫁妆，她一个嫁人，她应该娶人了，她在这结婚的时候，她的这个父亲送给她的一套结婚礼物，这个是称之为朝乔之六，是杨宝石套装。那么你给大家看一下女王的这套蓝宝石手，注意一下蓝老师的断头，就比我们刚才看到的那条红老师的手势的话，就是敲到手势蓝老师的层面大很多啊。这套郎宝石它是有几次完成的，最一开始的这条套装站的话只有一条项链，还有一条耳配子，那么后来的话这个女王带上以后观点它改款了，把这个香奈儿中最大的那个拆下来，变成一个可以拆卸的吊凳，然后又配了这个又配，看看这是什么配置啊？然后又配了手链和戒指，然后这一套比较完整的套装，那么这套手势的话撕心率非常高，小女王年轻的时候一直和年老的时间都很不少，很熟悉。</p><p>说话人 1 13:25 那么这一条 GPT 的话就是丹麦王是一个祖强熏针，它的主食上面的话就是一颗大颗蓝宝石，经常会出现在王室成员出席一些重要场合的人脸上。这是荷兰王室它的一套安保式套装。那么接下来我们来看一下这个英国王室还有一套蓝，有一个蓝宝石的王冠，这条王冠也存在了。这条王冠的话是维度亚女王，有的王冠，他是阿尔伯特亲王给维度亚女王设计的。</p><p>说话人 2 14:12 And I will spend junior this year. It is a wonderful Chinese town because this 2,019 is the vice centenary for the birth both Albert and Victoria. It’s very much scheduled. Albert designed it for her. She wore it. And it’s truly uncomfortable enough tasks on the sapphires and the great peace in that collection of Satan jewelry. Is this coordinate next, finished by June 1942, because she wears it for a portrait of Interhatter, which is seen last refused. Sets is a function that takes our image. right around the world， so its the great rule of the young queen later on sadly alpaca， it is sixty one and she doesnt feel able to open pilot its a great idea of open parliament， but she think she must fifty sixty six g comes in g she was terribly nervous and agitated， but she puts on top her head the carnival child was designed for her so this is that evening miss or even。</p><p>说话人 2 15:35 Stores, Chris scenario. And that point, we can see that it’s more quite different. It’s been more. as a bando across the front of an air i want to take it up you can see how thats possible you can have a tight up clothes as a small car net like this you need to follow out as it would be as flora tier or if you write out like this as been susmary or it。</p><p>说话人 2 16:03 It is a wonderful jewel, excuse me, has a great jewel in its own right. It also has history, which is extraordinary. And most extraordinary of fuzzy enablers is designed by Albert for Victoria. And it’s a joint project they had just as a southeast and museum.</p><p>说话人 2 16:22 And it’s called DNA was another of their collaborations. She will share very proud and safe and responsible. In the middle of the DNA, there will be discarded solution. Also symbolize their love as well as their artistic collaboration.</p><p>说话人 1 16:43 就是这次是这顶王冠，那我们知道在英国的话，他王室的很多珠宝会有一些公开感，这些比如说我看到<strong>帝国王八阿王</strong>（编者按：乐）展出，那其实还有一个网就是专门展示王氏珠宝的博物馆，就是维度利亚 2.07 毛博物馆、 DA 博物馆。所以下次大家如果去如敦的话，如果去旅行可以把那个地方作为一个地方，可以看到很多一个大学其中。好，我们再来看一下，嗯，大家有没有发现就在红毯上面的话，很多明星选择带宝石，钻石当中首选除了钻石以外，在红宝石和蓝宝石这两种宝石的选择上，大多数宝石杨老师、小红老师也比较少。为什么？原因？是什么原因？红宝石比较大颗，因为红蓝宝石比较大颗，大家想红宝石 20 克拉格已经到博物馆去了，市场上一般就三五克拉带的水平太小了，那么蓝宝石不管怎么克拉，所以海南宝石会比较多一些，那在接下来的话，我们来看一下蓝宝石的一个很重要的一个知识点，就是关于蓝宝石的颜色。</p><p>说话人 1 17:56 如果我问你蓝宝是什么颜色的，你可能会说蓝宝石当然是蓝色的，最多颜色与深浅而已。那实际上对我们现在的宝石界对蓝宝石的定义是这样的，是除了红宝石以外的其他所有颜色的刚遇都称之比较，所以蓝宝石不仅有蓝色的，还有一些其他的颜色，当然蓝色永远是在所有的蓝宝石中是最受欢迎的，这里大家看一下，如果按照正阳农民几个标准来说，你们觉得哪里看到蓝宝石原型最漂亮这一刻对不对？最浓郁深邃的这个就是目前史上最受欢迎的一个颜色级别，他叫王嘉荣。那除了蓝色以外，大家看到的这个黄色、无色的，甚至大家看这个不那么红的，它都叫蓝宝石。所以如果说从数量上来说，蓝宝石数量是远远大于宝石。那么在所有的这个颜色中，除了这个蓝宝石，除了蓝色以外，那其他的一些蓝宝石的话也有各种特色。那这种金黄色的蓝宝石，包括这种紫色和绿色的这种。</p><p>说话人 1 19:06 当然相对来说蓝色，这是蓝上面这几个名字红宝石，所以对红宝石的定义是很严苛的，一定要是非常正常的色，不能太明显的拼色，如果偏得很粉的话，像这种我们只能像蓝宝、粉色蓝宝石。那蓝宝石中除了蓝色以外的话，还有一种颜色也非常关注，大家看一下，你们看看这是太阳，它是什么颜色的？红黄的是什么颜色？是粉色的，那上面还有点橙色，是吧？那接下来我给大家介绍的这个颜色就是粉中带有一点橙色调，这个颜色叫一个很有意义很漂亮的名字，叫唱拉恰啊。奥拉恰和韩语原意的话是莲花意思，所以也有人把这个蓝宝石叫莲花钢绿。那说这个颜色是怎么来的呢？就是说是花和花瓣的颜色。但是这个其实不是不够确切，它确切的时候应该是太阳照了和花瓣上和花瓣所显示出来的颜色。</p><p>说话人 1 20:05 那我们知道太阳的话，早晨的朝阳和夕阳是不一样的，那么朝阳照到花瓣上它是粉色的，那么夕阳道的花瓣上它会多一点橙色调，所以像这种的话我们可以称为叫Sunrise，叫日出色，那么如果像刚才看到那个橙色多一点 aside 和日落色，那么至于这两个颜色哪个颜色更好，这个没有明确的一个说法，那一般来说日出的这个粉色会更加的手腕来看，这是我们在港展上拍的一个照片，这三颗的话就是大颗的拉恰啊。</p><p>说话人 1 20:39 港展的话是，就是每年亚洲的这个最大的一个珠宝展，香港发展刚刚结束 3 月份存款的一次，那么在房产上面的话，全世界各地的协助网上对于时代的这个重要的保持一个批发的那么有实力的珠宝商，他会在这个展会租几个展会啊？我看到你们全列的上千件的宝石，但也有一些珠宝商的话，他展位可能只有这么一个两米的这么一个柜子啊。然后但是并不意味着他们这个没有实力，那么这些宝石的话，就是我们在一个展会上看到的就是一个愉快的老头，他就跟你一个两米，这样一个老头就后面展开，他们就坐一个老头戴帽子在屏蔽说话的招揽客户。那么但是它里面所有人走到它的展位的时候，没有人会驻足的，没有人惊叹，因为展柜里面有几十个宝奇，每一颗都是这本体漂亮烫发卡类似的产品，那么我们给他的私下分，因为每个都在 8 位数点，所以我说在这个珠宝界的话有很多这种隐藏的大佬，而且这一隐藏大佬很多的这个太阳和印度他们的财富是不可。当然不是他们一代人、几代人。非常非常可怕，看到以后你会觉得真的是无法呼吸的这种。</p><p>说话人 1 22:02 那么蓝宝石中还有一个品种就是变色的蓝宝石，大家看同一颗蓝宝石，白天的时候是偏答案，晚上的时候天气。老师刚才还有一个品种，就是刚刚我们讲的星光廊坊，它赋予了一些含义，还有一些故事。星光蓝宝可以个头很大，大家来看，像这个被封掉的印度星光蓝宝就 1 万多块，那么星光蓝宝还有一个有趣的一个特征，大家注意一下在垂直于它新建的方向上你们看到的一些色带。刚才我们看合成红宝的色带，它是弯的，它这个色带是直的，六边形的。好，那为什么星光可以产出有色带？这个我们在特殊光学校里面一章给大家介绍这种特征，为什么两种特征会拉成在一起？这是宝石中的一个高质，接下来我们看一下蓝宝石的产地，再来对比一下刚才红宝石的产地多，我们看红宝石的产地多少？蓝宝石，明显蓝宝石的产地更多，对不对？那么的确，蓝宝石相对来说它的资源会更丰富一些，当然主要的产地一个是在私人，在东南亚，那么还有一个是非洲，这两个地方都有。</p><p>说话人 1 23:15 那么此外的话，大洋洲在美国包括俄罗斯它都有产出，而且都能够达到保时级的，但是不同的产地会有不同的特点，那我们讲蓝宝石的颜色，除了刚才给大家介绍的皇家蓝，是现在市场非常青睐的颜色，其实它还有一种，另外一种非常珍稀的颜色啊。这个颜色现在几乎已经绝胖了，就是大家看到的这种像类似于这个花的颜色，有同学知道这个花叫什么名字吗？它叫汽车局，那么这个花瓣你们来看一下，蓝中带有一点紫色调，还有一种溶溶的效果，是不是蓝中带有一点紫，还是溶溶的效果？那在这个就说的同化海的女儿是第一句话就说在海深处水平那么蓝，像最美丽的湿成这个花瓣，这就是湿身花瓣。</p><p>说话人 1 24:01 那我们有一种蓝宝石，有一个产地的蓝宝石产出的颜色，经过这个湿身，这个颜色非常小，蓝中带有一点紫色调，但是它不像一般的宝石那样清澈，它有一种丝绒的感觉。这种宝石的话有一个很漂亮的名字，就叫flower，意思就是诗澈句。那我们来看一下，感受一下。</p><p>说话人 1 24:35 you say its the way hes messing years have treated you that the way to the dreams she once carried has not affiliate you that our cancel liners will just be we hit across just get repeat into the 宝石。</p><p>说话人 1 25:15 光线下所呈现的颜色效果单独以前是蓝通带，有一点紫色，了不起，一种绒绒和丝绒的感觉，这是市车局非常重要的典型的特征，那么这种颜色的市车局驯化优质的试车局，它产自一个非常特殊的地方，好，就是克什米尔，你们知道克什米尔在哪吗？地方多大？又和战败的关系，它是印度和巴勒斯坦的一个终端区，就在这个地方，关于这个矿的资料流出来，现在流出来的资料非常非常的少，关于这个矿它的这个资源有多少开采的时间，包括它未来的储量，没有信心实战的研发性质，那地方太危险，我们有很多保质学家，会有各种途径、各种关系，其实有些框我们是能进去，在这个地方的资料几乎很少会流出来，那么能够看到的这些地方的话都是一些就是拍的，不是那种就是第一手的资料。然后看我们同行做的关于就是没有人的地方，但是实际上严格来说是一个。</p><p>说话人 1 27:00 这是佳士德这个拍这个这套项链，然后给了一个几张图片，佳士德的这样找到这个放很神秘，那我们现在能够看到的一些顶级的设施诗、歌曲、莱斯康世尼亚往往都会成为大纲会上的成本，非常高层的评价。这几天看到的都是大小区，那科生悦耳的世界就是最正宗的最贵，但是实在太少了，现在的产业科，出产业科的话几乎很难到中下游市场，在领上的市场就会被一些。那以至于市社局这个词到现在的市场就被用另外一种方式被滥用了，那很多的一些不太这个顶级的这个鉴定实验室，他们就把颜色达不到皇家蓝的，比皇家蓝浅的那些颜色的蓝老师都会定义成施。</p><p>说话人 1 27:58 因此有的时候你会发现说汽车军那么罕见吗？我没有把，我在市场上某某商家要看到这些好多科技设计卖的也很便宜，那你所看到的是这个，就不是真正的意义上的这种如果，所以如果你喜欢科学设计师设计，想要做收藏式设计的话，你记住一定要收课时，没有产地的。就是那么科学密尔的话，这个几乎成立一个传说，那我们现在大多数的这个环保都是来自斯里兰卡的一个国家。</p><p>说话人 1 28:30 这个虽然发言很有意思，它除了产那个蓝宝石以外，它还产其它名字的彩色蓝宝，还有星光，还有猫眼，所以这个岛外也有人完成叫宝石之国或者宝石之岛。但是在历史上的话是源源不断的工艺出了大颗的，重要的历史就是这个优质蓝宝石，一些著名的蓝老师都来自这里，而且它的产量也很大。</p><p>说话人 1 28:58 我们来看这个颜色的话，跟刚才的汽车就相比，它颜色更加的深邃浓郁，同时又非常的这个清澈。这就是我们现在市场上商过一下生效方加白日，然后很清澈，每个人都很明朗的感觉，记住这叫皇家蓝的名字。为什么叫皇家蓝？是因为这个戒指来人名的，那这个戒指的话就是阿尔克拉莱斯兰卡蓝色模式。来看一下，这是一些大的博物馆里收藏自己打出的蓝宝石，这是在美国的，就是这个也是寻思你博物馆收藏洛根蓝宝中间的这颗石头的话是 400 匹克拉，这套手势的话是掘献给博物馆，他的出品省后来被参加捐献给博物馆了。那么所有的宝石的话，那宝石也是来自于系列的。</p><p>说话人 1 30:00 那么除了斯里兰卡以外还有一个产地是需要大家关注的，就是缅甸门口这个地方，它除了产红宝石，实际上它也产蓝宝石，但是它的蓝宝石产量太少，可是品质很好，那么在皇家它的里面就是说优质的皇家蓝色是比自然版皇家蓝色还要高，所以我们这里刚才看到的是宝贝，它卖场还有一个是希克拉的一个宝石特产，但量非常少。那除此以外的话，还有一个地方也是现在市场上非常重要的蓝宝石产区，就是马拉夏、西夏。</p><p>说话人 1 30:39 那我们讲说宝石是有血统的，那如果宝石血统就是它的产地，像红宝石的话，它不同的产地价格卖的差别很大。像现在的话，蒙古这边，缅甸蒙古的红宝价格差不多。是啊，就是这个都就是梦想比克的红宝石价格 2 到 3 倍的，这样价格就正常，高的话可能不到 5- 6 倍也有就价格差别非常之大。</p><p>说话人 1 31:01 那红宝石为什么有那么大的价格差距？不同的产地价格差距，那主要还是因为不同的产业它品质上确实是有差距。比如说缅甸的红宝石，它的颜色就特别的浓艳，而这个莫桑比特红宝石颜色比较暗金，它的铁含量高，那么这种品质上的差异带来的价格差异，那么其实消费者是能够接受的，但是对于蓝宝石来说就出现了一个问题，就是人们会发现蓝宝石，不同产地的蓝宝石在品质上，尤其是颜色品质上好像差异不像红宝石那样大。</p><p>说话人 1 31:31 特别是像马拉加斯加和这个私人卡，因为马拉加斯加它的这个宝石处发现的款只是它的历史，没有自然卡会悠久，所以它价格的话，刚开始出现的价格确实是很低。但是换成随着后来发现，可能会发现马来西亚在原产出非常优质的保甲板，而且它和自然卡和蓝宝石有的时候在产地界面上经常会出现争议，经常有人会鉴定出来。</p><p>说话人 1 31:58 那么在这种情况下，品质上你看起来没有特别大差异的情况下，如果价格带来了两倍、三倍的差异，那么其实这个对市场来说是有的时候是会有争议的，有些人不太能够理解这样的差异，就是完全是人为给他造成的这样一个这样的差异。那这种方式就是说，所以在这个行业中的话，关于这种我们争取的讨论也很多，那合不合理？这种方式其实要讲合不合理，你要拿出正确的理由，我们不能说出来就把，所以我就给他定价低，这个不能服众的。那么后来的话，我们从宝石的成绩上面找出了去操的理由，就是说很多问题你要是这个宝石虚假解决不了的话，那我们地址虚假问自己来看这幅图的话，是港澳门古路时期的地球的这个大陆路块的一个格局，那么这个时期也正好是蓝宝石矿物形成的时期。我们来看一下在这个时期斯瑞兰卡在哪里把？大家需要在哪里看到问题了吗？他们在一起，而这个时期就是蓝宝石形成的时期，所以现在你就能够理解了为什么马来加斯加克斯兰和蓝宝石相那么相似，因为他们如果要在远古世界这块，他们可以构造半径，其实是体积相似，是非常，今天他只是因为马上他们在今天发现的晚价格更加努力，这个合理吗？很显然不太合理，是不是？所以这个价格的话，你会发现其实现在市场上就马来相信咱们两个价格差异非常少，还是要以保持本身的品质做一个主要指标。</p><p>说话人 1 33:36 那么我们来看一下马来西亚的一个矿，那马大家的这个蓝宝石的话，主要是自身矿框，那么开采的话也是非常原始的一种开采方式，就是找到矿脉以后就在这里能动来看，就在这里头打一个竖颈，然后用这个，用一个绳子，拿一个吊篮把人吊在里面去，然后开始拍下，把框架开下，完了以后这就留下了一个废弃矿坑，那么这种废弃的矿坑正常的情况下它是要回填的，那但是这个在一些不太正常环保的一些落后的地方，这种回填没人去干了。</p><p>说话人 1 34:11 所以最后在这些地方有一个大大小小的这样一个模式进行矿坑，这个矿坑除了对环境生态会有影响，其实还有一个问题就是它会带来了对当地的生物的话会带来一些危险，人可能会陷进去倒是倒还好一点。最重要的很多小动物是一些工具，并且随着以后这个生态慢慢恢复，外面的森林嘈杂，长起来这个动物就会被掩盖住，我们那么人要走出去的话很危险的事情。</p><p>说话人 1 34:39 那这也是常常会成为一些环保人士诟病，我们这个保持行业的一个诟病的点就是我们不环保，我们对生态有所破坏，也的确实是存在着这个问题，这是一些统计数据，举斯里兰卡这一个地方的话就有这么几千多个坑，没有问题。如果算上全球的话，有上百万的坑，其实都是一些隐患。</p><p>说话人 1 35:06 那么在接下来的话，我们来看一下我们中国的蓝宝石胖，我们中国是有蓝宝石胖的在哪里呢？在山东掺过了这个地方，而且这里的话宝石确实是形成了一个商品级的宝石，然后他也这里看到的话是一个保持交易市场，但是总体来看你会发现还是有点荒凉，是不是？为什么荒凉呢？因为这个蓝宝石它很少出现在市场上，是这个颜色，我们看它什么面色？它不是黑的，它是蓝的，发黑，用光打出去蓝色的，但是你看的话已经漠视出这个颜色。</p><p>说话人 1 35:36 为什么会这样呢？是因为它二价铁的含量实在是太高了，刚才我们讲说蓝宝石的颜色的形成是血元素，对吧？那二价铁非常宝，蓝色三价体会上保持什么特色？只有二价和三价平衡的这个颜色呈现，二价如果含量太高就变成这个样子啊。怎么样把这些二价填，让他能变得少一点啊？用什么方法氧化？没错，氧化就是所谓的氧化，就是加热处理，把它在不隔绝的空气开放啊。你想直接去烧，它的颜色就会变浅了，这是一种对颜色的处理，当然还有一种的话，如果保持中就是它的大量的金红石晕状包裹体，那看起来就会很浑浊，对不对？清创，那我们有什么方法把这个包裹体去掉呢？也可以用烧的方法，烧过以后这个宝石变成就会有所增加，那么这种方式的话就称这个叫宝石油画处理，或者我们所谓的红蓝宝石油烧火烧。</p><p>说话人 1 36:32 那关于有消耗误伤实际上是行业秘密，那么他的这个就是，但是我们有这个理论实验室，接入的实验室，他们去泰国访问的时候就进到了一个宝石，就是你的一个工厂拍下来一点远视频的话，就是一般可以是经常说红宝石和宝石加热这个道题，然后大家都知道红宝石和宝石加热之后，可以近期的宝石的精度还能改善它的颜色，那么究竟加热是一个什么样的过程，一般来说是最长，对汽车商来说都是秘密，是不会给大家看的。那么今天我特意带大家来到了监督文，我们找了当地一家这个加热的工厂，非常新进一家工厂，来给我们介绍一下他们自己的一个整个的流程。</p><p>说话人 1 37:30 经过全世界农贸型的加工处理和交易的中心，他们这边在当地的家业基础，因为世上最幸福的。产生于尼日利亚的玄武言行的蓝宝石，这个蓝宝石颜色比较灰，里没有大量的精通石头，估计它加热的温度达到 1, 300- 1, 500 度，主要目的是融化里面的金红石包裹体，然后提高它的进度。</p><p>说话人 1 38:17 好，因为它的这个处理的话不是改善颜色，所以主要是改善保持的这个进度，通过加热文化能够活性能垂直状况，让保持不变得更加的新致啊。其实对于红宝石也好，它的热处理技术的话已经存在了上百年了。那么它会在这个热处理加工厂，它会针对不同品质的红宝石、蓝宝石、原石，然后设计它热水里时的温度和环境，然后有的是改变颜色、改变进度，有的是沿层进度同时成功改变。所以在这个刚才我们看到的 GRS 的实验室里面，它的注释力这两米内大家一定要看，如果他说无烧的还可以，无烧的如果是有烧的后面还会有很多选项，比如说这个烧的话是改成颜色的，是改成净度的，是这个玻璃升天的等等，后面会有不同的一些注释。那么这是山东昌乐的蓝宝石，所以这些蓝宝石大部分都流动到泰国市场测速率。那这里大家看到的是澳大利亚的吞食安，它产出的这个暖宝石，你会发现它也是特定发挥的，后来它就是被标成一个头像，同样也是一个启动铁元素的存在，加起来。那相对于红宝石来说，蓝宝石的产地鉴定是对我们保质学家来说是一个难题，就是经常的话，这是我们现在的保质界，尤其是高端的这个保持界定的话，还是一个没有 100% 完全解决的问题。大家看这一颗，这是保利开卖会上的一颗蓝宝石，这颗蓝宝石的话价格很高，大家看它最后的这个价格的话是 40 万到 70 万的这个价，所以配了最顶级的，世界上最顶级的证书，布林证书、 SSES 证书。那么第二加 s 的话应该是二线证书，里面也是隐形的，你会发现这三个证书里面给出了三个不同的产地，那一个是给的是斯里兰卡图片，给了马达加斯加，然后加 s 给了缅甸，哪一个是正确的？不知道。所以这些证书，这些，这个机构在开具产地证书的时候一定有个免责声明。</p><p>说话人 1 40:31 我给的这个鉴定结果是根据我实验室的经验来的，要是实现其他实验室给你鉴定出现矛盾的，这个是这个产地的结论的话，我不负责的，这是他们这个所有的点击实验室，你就带看具体的实验室，他们产业率不是 100% 的血腥，这个也的确是一个困难的问题，因为这个宝石已经开采成了，有的后面多次转手时间越长，它的这个原始信息越模糊。所以这种这个没有办法，人民没有时光机，没有就是回到过去的方法。你现有的观察就是他们都是根据这个保持现有这些特征去来做。那么时代争议的话这也不是难免的。</p><p>说话人 1 41:12 来看一下蓝宝石的原始晶体，和红宝石不一样，蓝宝石的原始晶体是这种双锥体性的，在它的锥面上能够看到，随着吸轴生长，注意到了吗？在它的垂直长轴的方向，它的六边形的色带，这六边形的色带刚才我们的星光也看到了。大家注意一下它的一个位置，它是垂直于这个长轴方向的，在这个方向上这是蓝宝石的这个晶体的一个形态，它和红宝石是不一样，而且它还注意到这个特别什么地，所以蓝宝石可以切入百科的宝石。有些廊坊是双色的，这是红色的啊。然后蓝色气质泡泡恰，这也是蓝色的装绿就是这个红色的，这个红装绿，那红宝石的限定和蓝宝石的限定和红宝石是一样的三个问题。</p><p>说话人 1 42:03 那真假鉴定的话我们就不给大家过多讲了，大家还记得这 6 颗宝石中哪一颗是蓝宝石吗啊？所以你会发现蓝宝石确实是比较难鉴定，因为它的纺织品的话，颜色实在是太香了。那同样，杨老师他没有和什么问题来看，这是天然蓝宝石的色，带直直的，或者是带小合同类型，那么这是合成蓝宝石的色带，大家注意到像唱篇文一样的完全是短线啊。同样的话蓝宝石的热优化处理，它的鉴定的话完全一定要靠大型仪器来完成，肉眼是没办法鉴定的，让我去看我也看不出这个老师有伤无伤要通过仪器来。所以看证书，大家看这是一个 GS 证书，在前面不用讲了，这是塔利斯兰卡，大家看看这里有个很有很重要的特征，它的颜色给了什么呢？给了 baby blue group，就是燕蓝色，而且旷越 s head。比如说我就是说在加一次的这个标准里面，它这个颜色可以给到框架的，所以你会发现每一个颜色的话，它一定有实时标准。那这科的话你可能拿到不给，你可能在一个不满足，不给你条件。</p><p>说话人 1 43:15 还有一个重要的特征，大家看这里，它的注释里面有个大写的 h 是什么意思？做过热处理 t 它做过热处理的，而且它会告诉你我这个热处理的结论是通过类似这个仪器。那刚才我们看到那个红宝石这里写的是什么？没有词问题， no sum。那对于这个蓝宝石来说，它的这个价值评价的话，颜色也是第一位的，蓝色和蓝宝石是最受欢迎的，此外就是帕布拉恰，然后就是其他的颜色要稍微逊色一点。所以颜色永远是第一位的，最漂亮的王佳楠就算了，知识数学永远是客户最喜欢翻看市场就是官员的元素，这里大家看到的就是漂亮的这个世界级。</p><p>说话人 1 44:08 前面有人会问我们一个问题，说红老师和蓝老师哪个会啊？我们有时候如果要是我有时间，我会跟客户详细一些，就是说宝石的话具体的价值要看它的这个品质、大小等等，没有哪些会你要把自己，但如果我没时间，我没有办法很保持啊。为什么这样？是不是大家看左边的这颗是 6.5 克拉的一个红状，他在他们会上拍出一般这样的三个，右边这个是 50 万的一个，两个项目差不多，也就是说同样的话就是红宝石更稀少，它个头更小，同样以及克拉的红宝石要比一克拉的蓝宝石都是最顶级的，它要贵的很多人多。这就是。</p><p>说话人 1 44:52 那保持在这个同样挑选红蓝宝石的时候，还有一个用户是蓝宝石，对它的进度非常的广告，全镜很强，但是红宝石，尤其是缅甸红老师就不能用顾客了，它有点裂，有点杂质，有点包裹体。正常的他能接受，因为这个宝石它的特色好，那么这些的话就是一些世界上著名的蒙版宝石，那下节课的话我们会讲红领域，我们同学当这个班刚讲完，就有一同学对大家这次 brief 时间，因为每一个周的话就是两次，往往我们会出现一个情况，就是学习的最后几周，大家集中做Pre，一共是一个课的话有四五个人，最好不要出现这种情况，大家如果有时间的话就可以使用情况。今天有推荐的同学到我这里来。</p><p>说话人 1 46:53 有回去你的吗？</p><hr><p>congratulations!课程到这里结束了。 能看到这里的读者应当是联想、宝石学两个领域的天才。</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 选修课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 珠宝鉴赏 </tag>
            
            <tag> 乐 </tag>
            
            <tag> 语音转文字 </tag>
            
            <tag> 飞书妙记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>珠宝鉴赏</title>
      <link href="/2024/03/20/%E7%8F%A0%E5%AE%9D%E9%89%B4%E8%B5%8F/"/>
      <url>/2024/03/20/%E7%8F%A0%E5%AE%9D%E9%89%B4%E8%B5%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="珠宝鉴赏"><a href="#珠宝鉴赏" class="headerlink" title="珠宝鉴赏"></a>珠宝鉴赏</h1><p>94年开的课！拿了一堆教学成果奖诶</p><blockquote><p>根据课程进度持续更新中……</p></blockquote><h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><p>珠宝公司多靠钟表起家</p><p>梵克雅宝：艺术时钟</p><p>浓缩的财富，浓缩的艺术，浓缩的知识体系</p><h3 id="有机宝石"><a href="#有机宝石" class="headerlink" title="有机宝石"></a>有机宝石</h3><p>珠—珍珠(pearl)—有机宝石</p><p>成因和生物体有关系的或者本身是生物体的一部分的（琥珀、象牙）的宝石成为有机宝石。</p><p>三大有机宝石：珍珠、琥珀、珊瑚</p><p>珍珠：珠宝界的皇后</p><p>琥珀（Amber）</p><p>树脂分泌物石化的产物</p><p>珊瑚（coral）</p><p>象牙（ivory）不能买卖啦</p><p>戴帽（turtle shell）海龟壳</p><p>砗磲（shell）</p><p>煤玉（jet）黑色，哀悼珠宝欧洲王室葬礼佩戴</p><p>彩斑菊石盔犀鸟（鹤顶红）</p><p>犀牛角</p><h3 id="“宝”"><a href="#“宝”" class="headerlink" title="“宝”"></a>“宝”</h3><ul><li>宝石；矿物，石头，天然的</li><li>广义的概念：宝玉石—泛指一切经过琢磨、雕刻后可以成为首饰或工艺品的材料。不必囿于材质。</li></ul><p>淡淡的蓝色宝石：海蓝宝石</p><ul><li>狭义的宝石概念：宝石和玉石</li><li>宝石：指自然界中，具有色彩瑰丽、晶莹剔透、坚硬耐久、稀少、可琢磨、雕刻成首饰和工艺品的矿物（或岩石以及部分有机材料）</li></ul><p>51：42</p><p>宝石vs玉石</p><p>单晶</p><p><strong>2024.3.6</strong></p><p>珠宝：宝石+贵金属</p><p>贵金属：黄金、白银、铂金、钛金</p><p><strong>sign</strong></p><ul><li>黄金<ul><li>Au999&#x3D;24k&#x3D;足金&#x3D;千足金。软，不好镶嵌</li><li>18k&#x3D;Au750，白色，可掺成黄、玫瑰金，镶</li><li>14k, 9k</li></ul></li><li>白银<ul><li>易氧化，</li><li>Ag925</li></ul></li><li>铂金<ul><li>Pt900(950)</li></ul></li><li>钛金</li></ul><p>珠宝分类</p><ul><li><p>high jewelry高端1：1</p></li><li><p>fine jewelry高级1：10</p></li><li><p>fashion jewelry时尚1：∞</p></li><li><p>美的象征：卡地亚-水果锦囊系列</p></li><li><p>财富</p></li><li><p>权力地位</p></li><li><p>辟邪祈福</p></li><li><p>生辰石</p></li><li><p>结婚石</p></li></ul><h2 id="“鉴”"><a href="#“鉴”" class="headerlink" title="“鉴”"></a>“鉴”</h2><p>鉴定：材料、地质学</p><p>民间鉴定&amp;实验室</p><p>经验鉴定</p><p>籽料：有皮；山料：无皮</p><h1 id="钻石"><a href="#钻石" class="headerlink" title="钻石"></a>钻石</h1><p>钻石的特性</p><ul><li>宝石之王—美丽、稀罕、耐久、需求性</li><li>钻石为什么贵重？</li></ul><p>钻石的大小？</p><p>1克拉？</p><h3 id="克拉重量"><a href="#克拉重量" class="headerlink" title="克拉重量"></a>克拉重量</h3><p>克拉豆</p><p>1ct&#x3D;0.2g&#x3D;100分</p><p>保留小数点后2位，8舍9入（0.999ct&#x3D;1.00ct；0.998ct&#x3D;0.99ct）</p><p>重量计算公式：标准圆多面形：重量(ct)&#x3D;平均直径^_高度_20.0061（薄腰）</p><p>腰围直径6.5mm—1ct；8.2mm—2ct</p><p>钻石量筛</p><h3 id="钻石颜色"><a href="#钻石颜色" class="headerlink" title="钻石颜色"></a>钻石颜色</h3><p>色调浓度</p><ul><li>开普系列（cape），无色为主，N使之黄色，价格低</li><li>彩钻系列（fancy）<ul><li>黄钻</li><li>蓝色：海洋之心</li><li>红色：少</li><li>绿色：少，天然辐射</li><li>黑钻：C元素，石墨</li></ul></li></ul><h3 id="光泽"><a href="#光泽" class="headerlink" title="光泽"></a>光泽</h3><p>配钻的闪烁。</p><h3 id="火彩"><a href="#火彩" class="headerlink" title="火彩"></a>火彩</h3><p>色散（0.044），柔和；全反射（切割）</p><p>世纪之钻</p><h2 id="耐久性"><a href="#耐久性" class="headerlink" title="耐久性"></a>耐久性</h2><h3 id="硬度"><a href="#硬度" class="headerlink" title="硬度"></a>硬度</h3><p>摩氏硬度：10</p><p>磨损：点线面</p><p>古董：露底</p><p>但是有结构薄弱面，找对方向可以锤烂</p><h3 id="导热性"><a href="#导热性" class="headerlink" title="导热性"></a>导热性</h3><p>自然界导热性最好的矿物</p><p>钻石涂层：散热</p><p>热导仪；呵气实验</p><p>合成钻石</p><h3 id="化学稳定性"><a href="#化学稳定性" class="headerlink" title="化学稳定性"></a>化学稳定性</h3><ul><li>亲油疏水性<ul><li>吸油，不亮</li><li>钻石之谷：</li></ul></li></ul><h2 id="稀缺性"><a href="#稀缺性" class="headerlink" title="稀缺性"></a>稀缺性</h2><p>成因：</p><p>高温高压。</p><ul><li>火山喷发：上地幔，150~200km（金伯利岩）<ul><li>33亿年vs7k万年</li></ul></li><li>陨石</li></ul><p>开采：高成本</p><p>原生矿床</p><ul><li>露天开采</li><li>地下开采</li></ul><p>次生矿床（经筛选，品质更高）</p><p>1ct—&gt;250t！</p><p>分选</p><ul><li>粉碎-重液分选-油脂分选-X光分选-人工分选</li></ul><h2 id="钻石的历史与继承"><a href="#钻石的历史与继承" class="headerlink" title="钻石的历史与继承"></a>钻石的历史与继承</h2><p>钻石的4c分级：</p><p>color</p><p>clarity</p><p>cut</p><p>carat weight</p><p>历史才是最有价值的！</p><ul><li>印度：戈尔康达，钻石之源</li><li>欧洲：给钻石带来生命</li><li>巴西：承前启后的阶段</li><li>南非：现代钻石工业的发源地</li></ul><h2 id="鉴定"><a href="#鉴定" class="headerlink" title="鉴定"></a>鉴定</h2><ul><li>真假鉴定<ul><li>仿制品，多为水晶</li></ul></li><li>合成钻石</li><li>处理钻石<ul><li>钻石充填：薄膜干涉</li></ul></li></ul><p>折射率：2.41（压线反应）</p><p>内部特征：重影</p><p>钻石的荧光：产地（微量元素）</p><h1 id="红宝石与蓝宝石的品鉴与赏析"><a href="#红宝石与蓝宝石的品鉴与赏析" class="headerlink" title="红宝石与蓝宝石的品鉴与赏析"></a>红宝石与蓝宝石的品鉴与赏析</h1><p>2024.3.20</p><h2 id="红宝石"><a href="#红宝石" class="headerlink" title="红宝石"></a>红宝石</h2><ul><li><p>成分：刚玉 黄金镶嵌：复古风格 《欲戴王冠，必承其重》 红宝石ruby易裂，星光效应可大颗。</p></li><li><p>一品官戴红宝石</p></li><li><p>红珊瑚</p></li><li><p>蓝宝石</p></li><li><p>水晶</p></li><li><p>青金石</p></li><li><p>砗磲</p></li></ul><p>杰克·莫非盗窃案 murph the surf</p><p>产地：环印度洋</p><ul><li>缅甸<ul><li>鸽血红：开证含金量不同。</li><li>政府拍卖会带出缅甸</li></ul></li><li>泰国：交易市场<ul><li>买家坐着，卖家走来走去</li></ul></li><li>巴基斯坦</li></ul><p>非洲：东非大裂谷</p><ul><li>莫桑比克<ul><li>铁含量高，裂隙小，个头大</li><li>荧光红</li></ul></li><li>坦桑尼亚<ul><li>绿联石</li></ul></li></ul><h3 id="原石"><a href="#原石" class="headerlink" title="原石"></a>原石</h3><p>短柱状、板状结构</p><h3 id="鉴别"><a href="#鉴别" class="headerlink" title="鉴别"></a>鉴别</h3><ol><li>是否是刚玉？</li><li>是天然的还是合成的？</li><li>若是天然的，是否经过处理？是用了哪些方法的处理？</li></ol><p>维尔纳焰法：旺旺碎冰冰形状（，100+年前发明的合成法 天然优质：1ct100万，直的蚀痕 合成优质：“红刚玉”，唱片纹（弯曲生长线）</p><p>玻璃充填红宝石裂纹：蓝色光</p><ul><li>肉眼观察：有无矛盾？<ul><li>颜色：正、浓、和</li><li>净度</li><li>大小</li><li>加工质量</li><li>价格</li></ul></li><li>正规机构的证书<ul><li>GRS：1k~2k</li><li>SSEF</li><li>Gubulin</li></ul></li></ul><h2 id="蓝宝石"><a href="#蓝宝石" class="headerlink" title="蓝宝石"></a>蓝宝石</h2><p>红宝石之外的宝石都叫蓝宝石。</p><p>蓝宝石套装 维多利亚-阿尔伯特</p><p>帕帕拉恰蓝宝石：莲花刚玉，sunrise&#x2F;sunset 变色 星光蓝宝石 矢车菊cornflower sapphire，蓝中带紫，丝绒状 克什米尔：神秘。印巴交火区。 斯里兰卡：皇家蓝，色深、清澈。 缅甸：量少质量高 马达加斯加 山东：蓝得发黑</p><p>热处理：改善颜色和净度。</p><h1 id="宝石的光学效应"><a href="#宝石的光学效应" class="headerlink" title="宝石的光学效应"></a>宝石的光学效应</h1><p>2024.4.3</p><ul><li><p>玻璃光泽</p><ul><li>n&#x3D;1.3~1.9<ul><li>红宝石1.3~1.5，闪</li><li>萤石1.7~1.9，暗</li><li>可以用来辨别萤石仿制的碧玺手串</li></ul></li><li>反射：镜面反射和漫反射<ul><li>刻面：为了镜面反射，产生火彩</li></ul></li></ul></li><li><p>油脂光泽</p><ul><li>玉</li></ul></li><li><p>砂金效应</p><ul><li>金闪闪：细小金属包裹体</li></ul></li><li><p>猫眼效应</p><ul><li>定向平行排列的<strong>细长</strong>包裹体；点光源（平行光）；素面&#x2F;珠面；</li><li>n越高，宝石需越扁；</li><li>歪猫眼：砍价；</li><li>硅化石棉；</li><li>玻璃猫眼：蜂窝结构（垂直方向观察）</li><li>软玉猫眼：罕见</li></ul></li><li><p>星光效应：2条及以上的猫眼效应。3条和6条对应三次轴，比较常见（三斜）</p></li><li><p>晕彩</p><ul><li>干涉<ul><li>薄膜干涉<ul><li>珠光</li><li>裂隙</li><li>充填：玻璃&#x2F;油膜&#x2F;树脂</li></ul></li></ul></li><li>衍射<ul><li>欧珀<ul><li>基岩上沉积的二氧化硅小球层（规则排列：变彩）</li><li>二层石（薄薄一片欧泊嵌在基底上）、三层石（表面再镶一层，有拿全息照片伪造的，难绷）</li><li>底色：黑、白、晶质（黑色衍射效果最好，最珍贵）</li><li>n&#x3D;138nm~241nm最佳（七彩），上界越低色彩越少</li><li>浇盖：二氧化硅渗入缝隙</li></ul></li><li>蛋白石</li></ul></li><li>散射<ul><li>大量微小颗粒（细腻，均匀，致密）</li><li>乳光效应，</li></ul></li></ul></li><li><p>折射</p><ul><li>浸液检查（折射率相近，隐身，留出裂隙等）</li><li>写实：体色不影响折射</li><li>双折射</li></ul></li><li><p>色散</p></li></ul><h1 id="中端彩色宝石"><a href="#中端彩色宝石" class="headerlink" title="中端彩色宝石"></a>中端彩色宝石</h1><h2 id="水晶"><a href="#水晶" class="headerlink" title="水晶"></a>水晶</h2><p>日本律双晶84.33°？ 灰尘：二氧化硅，硬度7 体色：没有绿色、蓝色、红色。 大小不作为重要标准，可以很大。</p><h3 id="紫水晶"><a href="#紫水晶" class="headerlink" title="紫水晶"></a>紫水晶</h3><p>双头罕见！ 权杖水晶 晶洞：水泥层（掩盖裂纹、不平）-玛瑙层（结晶温度高于水晶）-水晶 每公斤100~300元</p><p>绿泥石、 发晶</p><h1 id="碧玺"><a href="#碧玺" class="headerlink" title="碧玺"></a>碧玺</h1><p>帕拉伊巴：水蓝色，无光闪烁。</p><h1 id="海蓝宝石"><a href="#海蓝宝石" class="headerlink" title="海蓝宝石"></a>海蓝宝石</h1><p>暂略。</p><h1 id="玉石"><a href="#玉石" class="headerlink" title="玉石"></a>玉石</h1><p>文化差异 颜色、光泽、加工方式 透明度：半透不透 鉴别方法：观察玉的结构 评价体系</p><ul><li>真玉：翡翠、和田玉</li></ul><h2 id="翡翠"><a href="#翡翠" class="headerlink" title="翡翠"></a>翡翠</h2><p>翡红翠绿紫为尊 帝王绿，玻璃种（透） 宝石的艳丽，玉石的温润—-东西方文化的交融</p><p>芭芭拉·霍顿的翡翠项链</p><p>陈子昂《感遇》：翡翠鸟 匠气vs留白（清vs明）</p><p>成分：硬玉 粒状镶嵌结构：翡翠的翠性–苍蝇翅（沿着硬玉的解理面切） 黍配色：福禄寿翡翠</p><ul><li>种地：细腻、均匀、致密、通透</li><li>A货：天然</li><li>B货：杂质（金属氧化物，酸洗，充填）</li><li>C货：染色：颜色在缝隙富集</li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 选修课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 珠宝鉴赏 </tag>
            
            <tag> 地质学 </tag>
            
            <tag> 晶体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿拉城</title>
      <link href="/2024/03/17/%E9%98%BF%E6%8B%89%E5%9F%8E/"/>
      <url>/2024/03/17/%E9%98%BF%E6%8B%89%E5%9F%8E/</url>
      
        <content type="html"><![CDATA[<p>应珠宝鉴赏选修课老师之邀，去上海闵行阿拉城参观第24届上海矿展（3.15<del>3.18，9：00</del>18：30）。当然这段时间二楼的观止玉石博物馆也可免费参观。</p><p>交通线路：11号线交通大学站换乘10号线，在龙柏新村站2号口下。附近有爱琴海商业公园和万象城等购物中心，饮食非常方便。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240316_135459-300x225.jpg"></p><p>到达会场第一感受：人潮涌动。</p><p>来矿展之前我完全低估了玉石矿藏业和这一矿展在上海的热度，或者说我根本没有思考和预想过。然而事实就是，众多的摊位和来客一道填满了阿拉城的一楼和二楼——从早晨持续到傍晚。</p><p>这些摊位的组成较为复杂，其中有专卖矿石的（如黄铜矿，辉铜矿），有也卖宝石的（如海蓝宝石，葡萄玛瑙），还有专卖化石的（如三叶虫，腕足动物等，由于在美观方面我不考虑化石，所以这类摊位我观察得不多）；</p><p>有卖原石的，有卖挑选后装在小盒子里的tiny矿物，有卖精心呈放在玻璃橱窗里的，有卖二次加工产品（如手镯、手串、雕刻后的玉石）的，还有卖明显是人工造物却坚称是天然矿石的（当初我只觉得古怪，回程路上搜到一篇人造宝石相关文章，配图正是那“天然矿石”，忍不住哈哈大笑）；</p><p>卖主有看起来颇为精明，不断游说的年青男人（他那熟悉的推销话术让我顿时脱离了“高端”的玉石矿藏业，仿佛认为自己在新二村买菜了；故而他必然是有销售业绩之任务的），有似乎高深，轻易不主动开口的大叔，有面带迷之微笑、对着摊位的货品直播抖音或淘宝的，有操着英语或不流利的中文的外国人（夫妻或是年轻男人，生意不错），还有一位计算机专业的学长，他也在二楼摆一小摊（不难推测他如何在毕业前实现财富自由；我未特意找到他的店面）。</p><p>由于东北菜馆的午餐分量十足，我比老师晚到了一个小时，此时老师已经带着其他学生准备进博物馆了。当然，在老师和馆长好友的解说下，各个展品也极具趣味。</p><p>镇馆之宝是一大块黄金； <img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240316_140330-225x300.jpg"></p><p>紧随其后的是来自白垩纪的巨型斑彩螺，属干涉致色（油膜干涉）；</p><p>美丽的鱼眼石、萤石等（名字不能全部记清了）；</p><p>紫水晶洞（一半）； <img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240316_141129-225x300.jpg"></p><p>呈现肉红色的含锰矿；</p><p>稀有的，摩尔硬度仅为3却能形成“野草”状的矿物；</p><p>被命名为“火树银花”的天然水晶球； <img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240316_142200-300x225.jpg"></p><p>世界上最大的琥珀水胆蜥蜴化石，这条蜥蜴体内有8mm水胆—也就是说，晃动琥珀，水还能在空腔中移动。 <img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240316_142227-225x300.jpg"></p><p>博物馆外也有不少珍品（玻璃橱窗内）。例如写意的“秋山观瀑图”、“苏东坡·定风波”，等等。</p><p>我原是想买一件便宜些的好货做纪念的，未能想到自己眼光颇高，竟然不能挑出几个十分喜爱的“卖品”。我逛过并仔细挑选过的摊位中，一个是相当商业化的（红标120，蓝标80，黄标40），另一个是类似的盒子销售（其中我挑中的是微型紫水晶洞，美则美矣，价格有些虚高；且其旁侧恰有一无色水晶洞，二者价格之和为整数，有做情侣款捆绑销售之嫌，最终未买）。</p><p>展会中的买家也很有意思。小孩，年轻女性，年轻男性，外国人。小孩哥和小孩姐出手十分阔绰，一拿就是一盘各种各样的”石头“（约莫十个左右吧）；女士们精挑细选，试图讲价，然而大多数专业知识不够（我想我也属于此群体）；年轻男士把脸和手机贴近每一盘货品细细观察（我疑心他们是来调查市场情况的）；外国友人我观察得不多，只记得其中有一位很帅的老哥（目移）。</p><p>看完展览想解决的问题：</p><ol><li>人工合成的宝石过于僵硬，怎么克服？</li><li>这和CVD的改进是否有关？怎么改进？</li><li>宝石好贵啊。早知道在旅游的时候多捡几颗了。（原产地巴基斯坦的我没办法，但是云南、福建的还有希望）</li><li>忘记问商家翠榴石的价格了，它那大小适合给P做耳钉（再次目移）。然而这展览一年一次。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>董晨宇：互联网观察</title>
      <link href="/2024/03/10/%E8%91%A3%E6%99%A8%E5%AE%87%EF%BC%9A%E4%BA%92%E8%81%94%E7%BD%91%E8%A7%82%E5%AF%9F/"/>
      <url>/2024/03/10/%E8%91%A3%E6%99%A8%E5%AE%87%EF%BC%9A%E4%BA%92%E8%81%94%E7%BD%91%E8%A7%82%E5%AF%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="董晨宇：互联网观察"><a href="#董晨宇：互联网观察" class="headerlink" title="董晨宇：互联网观察"></a>董晨宇：互联网观察</h1><h2 id="“狗屁新闻”"><a href="#“狗屁新闻”" class="headerlink" title="“狗屁新闻”"></a>“狗屁新闻”</h2><p>董晨宇说“狗屁新闻”是他看了“高速运转的机械进入中国”这类新闻越来越多地出现在我们生活中之后造出的词。弹幕和评论的反馈：这类”梗“不算是”新闻“。</p><p>董晨宇对于此类新闻特征的描述：</p><ol><li>放大镜人为制造；</li><li>没有公共价值；</li><li>占据公共注意力。</li></ol><p>处在加速社会的信息焦虑中，有效的信息回避是很难的，因为我们染上了“错失恐惧”（fear of missing out），不敢错过任何的信息。</p><p>狗屁新闻需要我们，而不是我们需要狗屁新闻。</p><p>就算是狗屁新闻，其中也有内含的价值，只不过被刻意地隐藏或是扭曲了。比如说“机械”中的女士实际上是得了“思维破裂”的病症。</p><p>弹幕：追逐这些需要知识积淀，分析思辨，而追逐狗屁新闻什么成本都不需要。</p><h2 id="一句台词、三个错误…理论究竟是干啥用的？"><a href="#一句台词、三个错误…理论究竟是干啥用的？" class="headerlink" title="一句台词、三个错误…理论究竟是干啥用的？"></a><strong>一句台词、三个错误…理论究竟是干啥用的？</strong></h2><p>理论是为了给我们提供一个新的角度来思考问题，而不是让我们钻进新的囚笼。</p><p>契机是电影《热搜》的一句台词，提到了：</p><p>沉默的螺旋、议程设置、魔弹理论。</p><p>然而似乎用错了。</p><ul><li>沉默的螺旋<ul><li>冯·诺伊曼</li><li>处于舆论弱势的人明哲保身，保持沉默；</li><li>舆论是社会控制的结果；</li><li>e.g. 所有大众媒体都发表同一观点</li></ul></li><li>议程设置<ul><li>媒体对于一个事件的报道数量会影响大众对该事件重要性的认知。</li><li>媒体是有可能扭曲现实的。</li><li>还存在大媒体对小媒体的议程设置。</li></ul></li><li>魔弹理论<ul><li>顾名思义，bullet</li></ul></li></ul><p>传播学黑话的堆叠？no.</p><p>理论的价值：帮助解构复杂的世界。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>法华</title>
      <link href="/2024/03/10/%E6%B3%95%E5%8D%8E/"/>
      <url>/2024/03/10/%E6%B3%95%E5%8D%8E/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2024.3.9 嘉定州桥老街一游。</p></blockquote><p>用顾维钧先生的画作可概览今日行程：</p><p><img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_134829-300x137.jpg"> 法华塔、顾维钧陈列展、胡厥文生平陈览馆、竹刻展览馆、孔庙、公园。</p><h3 id="州桥老街"><a href="#州桥老街" class="headerlink" title="州桥老街"></a>州桥老街</h3><p>嘉定州桥，4A级国家旅游景区，坐落于中国历史文化名镇——嘉定古镇的中心，是古镇最繁华、最热闹的地区，为嘉定人文、特产的聚集地，也是展示嘉定历史文化的核心地区。嘉定州桥景区内不仅有江南古镇的“小桥、流水、人家”的建筑景观，又有南宋的孔庙和法华塔、明代的汇龙潭和秋霞圃公园，以及顾维钧生平陈列室、陆俨少艺术院、嘉定竹刻博物馆等丰富的历史文化资源。游客在景区尽情游览的同时，更可在老街“十字”河畔品尝各类风味小吃，选购嘉定竹刻、黄草编织等土特产品。</p><p>有一家枣糕店的坚果枣糕很好吃。趁热。</p><h3 id="法华塔"><a href="#法华塔" class="headerlink" title="法华塔"></a>法华塔</h3><blockquote><p>上海市文物保护单位，但是其上碑文是一点也不保护。</p></blockquote><p>法华塔，又名“金沙塔”，南宋开禧年间(1205-1207)建，元至大元年(1308)重修，明万历三十六年(1608)重建，四面七级，楼阁式砖木结构，高41米余，为嘉定古城的标志性建筑。“金沙夕照”系嘉定人文胜景之一。民国十三年(1924)邑人戴思恭募资大修时，改底层围廊，各层腰檐栏杆，七层塔顶为钢筋混凝土结构。新中国成立后，嘉定县人民政府将其公布为文物保护单位，受到刻意保护。1994年，上海市文管委和嘉定区政府共同耗资近200万元，对严重倾斜(中心位移达120厘米)的法华塔进行抢修。1996年底竣工。修复后的法华塔，不仅“改邪归正”重新“站直”在人们面前，而且恢复了她“铃铎响诸天”的固有风采，并为其设置了立体泛光照明，使昔日“四角放光”的传说成为现实。</p><p>由于它改邪归正得比较艰难，所以不允许登塔。 <img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_135904-238x300.jpg"></p><h3 id="顾维钧陈列展"><a href="#顾维钧陈列展" class="headerlink" title="顾维钧陈列展"></a>顾维钧陈列展</h3><h4 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h4><p>很多中国人因巴黎和会知道了他，记住了这个代表中国对西方列强说“不”的第一人。事实上，他同样也是让世界对中国说“是”的第一人，《联合国宪章》上签署的第一个名字是三个汉字：顾维钧。</p><p>顾维钧(1888-1985)，字少川，上海嘉定人。作为一名职业外交家，顾维钧一生出使多国，出任过外交总长、财政总长、摄阁总理，历经三朝变革，是中国驻联合国的第一位代表，76岁时又当选为国际法庭副庭长，离职时获终身国际法官的荣誉称号。</p><p>作为一名中国人，顾维钧大半生都在海外任职。他见证了民国兴衰，在强国斗争的漩涡中以尽最大努力争取国家利益，书写了“弱国也有外交”的神话。他为废除治外法权及不平等条约而奋斗，参与了联合国的创建与发展，帮助中国取得了联合国安理会五大常任理事国之一的地位。</p><p>在近代中国踉踉跄跄走向世界由弱转强的过程中，顾维钧无疑发挥了重要作用，留下了不可磨灭的历史印记。这不仅得益于他杰出的外交才干，也因为一片永恒的爱国之情。今天，我们再读顾维钧的一生，必须读懂他为之自豪的事物、奋斗终生的理由，这是顾维钧用自己的一生留给后人的思考。</p><h4 id="一代外交家的诞生"><a href="#一代外交家的诞生" class="headerlink" title="一代外交家的诞生"></a>一代外交家的诞生</h4><p>顾维钧祖籍江苏省嘉定县（现上海市嘉定区）。嘉定是个历史悠久的江南城市，以教化闻名。嘉定城中有江南最大的孔庙，人文传统源远流长。明清两朝出过3个状元和几十名进士。到了20世纪，嘉定走出好几位中国外交家，有“外交家之乡”之称。而顾维钧便是其中最著名的外交家之一。</p><h4 id="哥伦比亚大学留学"><a href="#哥伦比亚大学留学" class="headerlink" title="哥伦比亚大学留学"></a>哥伦比亚大学留学</h4><p><img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_133435-225x300.jpg"> 顾维钧在哥伦比亚大学的成绩单。</p><h5 id="论文仙人"><a href="#论文仙人" class="headerlink" title="论文仙人"></a>论文仙人</h5><p>1912年2月，正在写博士论文《外国对中国政府的权利要求》的顾维钧接到袁世凯的电邀，请其回国担任总统府办公室英文秘书，起初顾维钧因学业未成而婉拒。“对我而言，完成我在哥伦比亚大学的学业更为重要。听闻我拒绝了该工作邀请，我的导师穆尔教授颇感震惊，甚至有点沮丧。他说，他非常理解我追求博士学位以备将来报效祖国的决心。但他却语重心长地告诉我，如果我再度接到邀请，千万勿再拒绝。我于是向教授提出了一个问题，那我的博士论文怎么办？穆尔导师于是让我把写好的部分给他看。两天后，他约见了我并告诉我，我可以把论文的导言部分作为论文提交。之后，我写信给中国公使，表明我可以接受邀请回国任职。”</p><h4 id="驻美公使"><a href="#驻美公使" class="headerlink" title="驻美公使"></a>驻美公使</h4><p>1915年，年仅27岁的顾维钧被任命为驻墨西哥公使，赴墨任途中又改任驻美兼古巴公使。这一任命开创了中国外交史上的一项空前纪录，顾维钧的职业生涯也由此进入新的阶段。</p><p>1916年顾维钧就任驻美公使后，接受《世界观》(World Outlook )杂志采访。该杂志以China’s Kood ‘Etat为题刊文称，对顾的任命预示了古老的中国解决其所面临难题的道路。英文“政变”一词coupd’etat中的coup与顾姓Koo同音，可见当时美国舆论对顾维钧之推重。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_133544-225x300.jpg"> 美国保证对顾维钧的报道</p><h4 id="拒签巴黎和约"><a href="#拒签巴黎和约" class="headerlink" title="拒签巴黎和约"></a>拒签巴黎和约</h4><p>《顾维钧回忆录》中关于对德拒签的情景</p><p>我好不容易和迪塔斯塔秘书长约定好于6月28日晨会晤。但是迪塔斯塔在会晤中声称，发表声明，无法接受。我又生气又沮丧，愤慨这拒绝使得寻求妥协的种种方法均告失败。我已清楚，中国无路可走，只有断然拒签。我于是去圣·克卢德向陆总长汇报，那是大清晨。彼时情景我记忆犹新。我自己驱车驶离医院。那真可谓一次旅行——在清晨五、六点钟时分，从圣·克卢德到巴黎，竟用了十五甚或二十分钟。汽车缓缓行驶在黎明的晨曦中，我觉得一切都是那样黯淡——那天色、那树影、那沉寂的街道。我想，这天必将被视为一个悲惨的日子留存于中国历史。同时，我暗自想象着和会闭幕典礼的盛况，想象着当出席和会的代表们看到为中国全权代表留着的两把座椅上一直空荡无人时，将会怎样地惊讶、激动。这对我、对代表团全体、对中国都是一个难忘的日子。中国的缺席必将使和会、使法国外交界、甚至使整个世界为之愕然，即便不是为之震动的话。</p><p>除此之外，顾维钧还在联合国任国际法官，直至72岁才退休。</p><h4 id="美满的晚年生活"><a href="#美满的晚年生活" class="headerlink" title="美满的晚年生活"></a>美满的晚年生活</h4><p>美满的晚年生活</p><p>晚年的顾维钧身居海外多年，生活过得非常有规律。他上午9时许起床，早餐时间约2小时，一面饮食，一面阅读。每天下午，顾维钧都要拄着拐杖，外出散步，这是他的健身之道，90多岁时他还能游泳、跳水。他喜欢画中国画，72岁还专程赴香港拜师学艺。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_134627-210x300.jpg"></p><p>晚年顾维钧</p><h3 id="胡厥文生平陈览馆"><a href="#胡厥文生平陈览馆" class="headerlink" title="胡厥文生平陈览馆"></a>胡厥文生平陈览馆</h3><p>胡厥文，爱国实业家。</p><h3 id="竹刻展览馆"><a href="#竹刻展览馆" class="headerlink" title="竹刻展览馆"></a>竹刻展览馆</h3><p>王世襄伟大，无需多言。 <img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_141103-300x225.jpg"></p><h3 id="孔庙"><a href="#孔庙" class="headerlink" title="孔庙"></a>孔庙</h3><p>封起来不让进，差评。</p><h3 id="汇龙潭公园"><a href="#汇龙潭公园" class="headerlink" title="汇龙潭公园"></a>汇龙潭公园</h3><p>5块钱门票，拿学生证享五折。（乐 侯峒曾、黄淳耀两先生的塑像不得不品。然而纪念碑的碑文已被磨损到看不清了。</p><p>汇龙潭于明代万历十六年（公元1588年）疏浚，距今已有四百余年历史。四面原有五条支流汇合于此，形如五条长龙蜿蜒伸展。潭中有岛，绿水环抱，河流如龙，山如明珠，潭名盖取五龙抢珠之意。公园占地面积4.76万平方米，建筑面积3212平方米，1979年对外开放。汇龙潭公园由南北两个景区组成。南部由汇龙潭水和应奎山景组成山水相依的自然景观，潭畔有重楼飞檐魁星阁，山巅树木葱茏，状元楼与孔庙牌坊遥相呼应，山光水色，相映成趣，潭边空间开阔，地势平坦，明代忠贞之士侯峒曾、黄淳耀两先生纪念碑巍然矗立。建于清光绪十四年（公元1888年)的百鸟朝阳打唱台气宇轩昂，装饰瑰丽，金碧辉煌，工艺独特，堪称近代建筑艺术之精品。北部景点、布局紧凑，古建筑相对集中，畅观楼、怡安堂、缀华堂造型各异、古朴典雅。亭、台、楼、阁、花廊、水榭疏密相间，错落有致，匾额、楹联，书法隽永。园内汇集宋、元、明、清诸代的石亭、石塔等文物古迹，古朴浑厚，是古代文化艺术之精品。公园古木参天，峥嵘挺拔。潭水碧波，平岗倒影，景色绚丽，极富诗情画意。依潭筑园，风格独特，园林布局，技艺精湛，设计构思兼顾城市物质享受和山林自然情趣，实为当今游览之胜地。</p><h3 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h3><h4 id="美景"><a href="#美景" class="headerlink" title="美景"></a>美景</h4><p><img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_145434-300x225.jpg"></p><h4 id="佳人"><a href="#佳人" class="headerlink" title="佳人"></a>佳人</h4><p><img src="http://yantares.cn/wp-content/uploads/2024/03/IMG_20240309_145536-225x300.jpg"></p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="英文参考"><a href="#英文参考" class="headerlink" title="英文参考"></a>英文参考</h3><p><strong>Willington Koo</strong></p><p>V.K. Wellington Koo as the minister to the US in 1916. In 1915, the 27-year-oldV.K.Wellington Koo was appointed minister to Mexico, and on his way to Mexico, he was re-appointed as the minister to the United States and Cuba. This appointment refreshed China’ s diplomatic history and V.K. Wellington Koo’s career also entered a new stage.</p><p>In his later years, Koo lived a very regular life abroad. He would get up at around 9 am and take a two-hours breakfast while reading. And every afternoon, he would go out for a walk with a cane as a way to stay healthy. He could swim and dive even when he was over 90 years old. He enjoyed creating Chinese paintings and studied with a Hong Kong master after age 72.</p><p>It took me a lot of trouble to make an appointment with Secretary-General Dutasta to meet in the moming of June 28. But Dutasta told me it was unacceptable to make the claim. I was angry and frustrated becausethis refusal aborted all the possible ways to seek compromise. I realized that China had no way out and had to refuse signing the treaty.So I drove to St. Cloud Hospital to report to Premier Lou Tseng-Tsiang. It was an carly moming. The memory is stil fresh in my mind. I left the hospital in my car. It was really some trip. at five or six o’clock in the moming. from St. Cloud Hospital to Paris. I actually had driven for fifteen or even twenty minutes. The car ran slowly in the dawn, and I felt that everything was so gloomy-the sly, the shadows of trees, the silent streets.I believed that this day would be kept in the Chinese history as day of tragedy. At the same time, I imagined the grand occasion of the closing ceremony of the Peace Conference, imagined how surprised and excited the delegates would be when they saw that the two seats reserved for the plenipotentiary of China were left empty It would be an unforgettable day for me, for all the delegations and for China. China’s absence would surely astonish, if not shock. the Peace Conference, the French diplomatic circles and even the whole world.</p><p>汇龙潭公园、</p><p>It is more than 400 years since Hul Long Pool was dredged and deepened during Wan Li Era of Ming Dynasty (A. D. 1588)Originally, there were five river branches around which converged in Hui Long Pool, just as five dragons stretched and extended.There is the island in the pool around the green water. The niver is like dragon and the mountain like pearl. The name of the pool originates from the means that five dragons grab the pear. open to the outside in 1979, Hui Long Pool Park has the floor area of 47.6 thousand sguare meters and the construction area of 3, 212 square meters.Hui Long Pool Park is composed of the northern and southemn scenic zones of which the southem scenic zone belongs to the natural landscape with the combination of Hui Long Pool and Ying Kui Mountain. Kui Xing Pavilion with multiple floors and overhanging eaves stands by Hui Long Paolwith the luxuriant trees on the fop of the mountain. Meanwhile, No. 1 Scholar Building and the memorial ar chway of Confucius Temple coordinate with each other over a distance in the beautiful landscape of mountain and water. The space near the pool is broad and the ground flat, where the monuments of the famous loyal and brave persoin Ming Dynasty, Hou Tongzeng and. Huang Chunyao, magnificently stands. Established with the special craftwork, elegant decoration and brilliant style in the 14th year of Guang Xu Era of ing Dynasty (A. D. 1888) the stage called Hundreds of Birds towards Sun is themaster works of the contemporayy architecture arts The layout of the northem scenic zone is relatively compact, as seen by the relative concentration of the ancient architectures including the elegant and unsophisticated Chang Guan Building, YiAn Hall and Zhui Hua Hall of different architecture styles, the well-distributed Kiosk, platform, building, pavilion, fower corridor and waterside pavilion and the outstanding calligraphies on in scribed tablet and pillar couplets. In addition, some vigorous and simple cultural relics such as stone towers and stone pavilions in Song, Yuan, Ming and Qing Dynasties are conserved in the park, all of which are the master workcs of Chinese ancient culture and arts. Idyllic and picturesque in the beautiful landscape, lots of tall and stralght ancient trees are in the park and the green jade-ike waves in the pool reflect the mountain image. Built by the pool, the park features the special style, wel-distributed garden and advanced skills. The park layout combines the municipal material enjoyment and the sentiment of natural landscape, which in deed develops the park into the current famous scenic zone.</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>青铜骑士</title>
      <link href="/2024/03/08/%E9%9D%92%E9%93%9C%E9%AA%91%E5%A3%AB/"/>
      <url>/2024/03/08/%E9%9D%92%E9%93%9C%E9%AA%91%E5%A3%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="普希金《青铜骑士》"><a href="#普希金《青铜骑士》" class="headerlink" title="普希金《青铜骑士》"></a>普希金《青铜骑士》</h1><h2 id="普希金"><a href="#普希金" class="headerlink" title="普希金"></a>普希金</h2><p>亚历山大·谢尔盖耶维奇·普希金（1799年6月6日－1837年2月10日）是俄国著名的文学家、被许多人认为是俄国最伟大的诗人、现代俄国文学的奠基人。19世纪俄国浪漫主义文学主要代表。被誉为“俄国小说之父”。他的作品是俄国民族意识高涨以及贵族革命运动在文学上的反应。代表作有诗歌《自由颂》、《致大海》、《致恰达耶夫》、《假如生活欺骗了你》等，诗体小说《叶甫盖尼·奥涅金》，小说《上尉的女儿》《黑桃皇后》叙事长诗《青铜骑士》等。</p><h2 id="《青铜骑士》"><a href="#《青铜骑士》" class="headerlink" title="《青铜骑士》"></a>《青铜骑士》</h2><p>原文如下。</p><h3 id="楔子"><a href="#楔子" class="headerlink" title="楔子"></a>楔子</h3><p>那里，在寥廓的海波之旁</p><p>他站着，充满了伟大的思想</p><p>河水广阔地奔流</p><p>独木船在波涛上摇荡</p><p>凄凉而孤单</p><p>在铺满青苔的潮湿的岸沿</p><p>黝黑的茅屋 东一处西一处</p><p>贫苦的芬兰人 在那里栖身</p><p>太阳躲进了一片浓雾</p><p>从没有见过阳光的森林</p><p>在四周喧哗</p><p>而他想道</p><p>我们就要从这里威胁瑞典</p><p>在这里就要建立起城堡</p><p>使傲慢的邻邦感到难堪</p><p>大自然在这里设好了窗口</p><p>我们打开它，便通向欧洲</p><p>就在海边，我们要站稳脚步</p><p>各国的船帆 将要来汇集</p><p>在这新的海程上游历</p><p>而我们 将在海空里欢舞</p><p>一百年过去了，年轻的城</p><p>成了北国的明珠和奇迹</p><p>从幽暗的树林</p><p>从沼泽中</p><p>它把灿烂的 傲岸的头高耸</p><p>这里原只有芬兰的渔民</p><p>像是自然的继子 郁郁寡欢</p><p>孤单的，靠近低湿的河岸</p><p>把他那破旧的鱼网投进</p><p>幽深莫测的水里</p><p>可是如今 海岸上却充满了生气</p><p>匀称整齐的宫殿和高阁</p><p>拥聚在一起 成群的大船</p><p>从世界每个角落</p><p>奔向这豪富的港口停泊</p><p>涅瓦河披上大理石的外衣</p><p>高大的桥梁 横跨过水波</p><p>河心的小岛遮遮掩掩</p><p>遮进了一片浓绿的花园</p><p>而在这年轻的都城旁边</p><p>古老的莫斯科 日趋暗淡</p><p>有如寡居的太后站在</p><p>刚刚加冕的女皇前面</p><hr><p>我爱你，彼得兴建的城</p><p>我爱你严肃整齐的面容</p><p>涅瓦河的水流多么庄严</p><p>大理石铺在它的两岸</p><p>我爱你铁栏杆的花纹</p><p>你沉思的没有月光的夜晚</p><p>那透明而又闪耀的幽暗</p><p>常常 我独自坐在屋子里</p><p>不用点灯写作或读书</p><p>我清楚地看见条条街路</p><p>在静静地安睡</p><p>我看见 海军部的塔尖多么明亮</p><p>在金光灿烂的天空</p><p>当黑夜还来不及把帷幕拉上</p><p>曙光却已一线接着一线</p><p>让黑夜只停留半个钟点</p><p>我爱你的冷酷的冬天</p><p>你的冰霜和凝结的空气</p><p>多少雪橇奔驰在涅瓦河边</p><p>少女的脸比玫瑰更为艳丽</p><p>还有舞会的笑闹 和窃窃私语</p><p>单身汉在深夜的豪饮狂欢</p><p>酒杯冒着泡沫，丝丝地响</p><p>彭式酒流着蓝色的火焰</p><p>我爱你的战神的操场</p><p>青年军人的英武的演习</p><p>步兵和骑兵列阵成行</p><p>单调中另有一种壮丽</p><p>呵 在栉比的行列中飘扬着</p><p>多少碎裂的胜利的军旗</p><p>还有在战斗中打穿的钢盔</p><p>也给行列带来耀目的光辉</p><p>我爱你，俄罗斯的军事重镇</p><p>当北国的皇后传来喜讯</p><p>一个太子在宫廷里诞生</p><p>或者俄罗斯战败了敌人</p><p>又一次庆祝她的光荣</p><p>或者是涅瓦河冰冻崩裂</p><p>蓝色的冰块向大海倾泻</p><p>因为感到春意欢声雷动</p><p>巍然矗立吧，彼得的城</p><p>像俄罗斯一样的屹立不动</p><p>总有一天连自然的威力</p><p>也将要对你俯首屈膝</p><p>让芬兰的海波永远忘记</p><p>它古代的屈服和敌意</p><p>再不要挑动枉然的刀兵</p><p>惊扰彼得的永恒的梦</p><p>然而有过一个可怕的时辰</p><p>人们还能够清晰地记忆</p><p>关于这，亲爱的读者</p><p>我将对你 叙述如下的一段事情</p><p>我的故事可是异常的忧郁</p><blockquote><p>另附戴骢先生译版：</p></blockquote><p>我爱你，彼得兴建的都城，</p><p>爱你严肃整齐的面容，</p><p>爱你涅瓦河端庄的水流</p><p>和大理石砌成的河岸。</p><p>我爱你铁栏杆上的花纹</p><p>和你那沉思的夜晚，</p><p>爱你透明的夜色和无月的幽光。</p><p>这时候，我坐在自己的房间里，</p><p>不用点灯就可写作或读书，</p><p>我清楚地看见大街小巷</p><p>在静静地安睡，看见</p><p>海军部的尖塔多么明亮。</p><p>黑夜还未及把帷幕</p><p>遮没金色的天空，</p><p>朝霞已匆匆来临，</p><p>前霞方逝，后霞已至，</p><p>只让黑夜逗留半个小时。</p><h3 id="第一部"><a href="#第一部" class="headerlink" title="第一部"></a>第一部</h3><p>在幽暗的彼得堡的天空</p><p>吹着十一月的寒冷的秋风</p><p>涅瓦河涌起轰响的巨浪</p><p>冲击着整齐的石铺的岸墙</p><p>河水激动着旋转着 像是病人</p><p>在她的床上不断地翻腾</p><p>这时候天色已晚</p><p>在昏黑中</p><p>雨点急骤地敲打窗户</p><p>而风愁惨地吹 扫吼吼地嘶鸣</p><p>这时候刚刚做客归来，回到家门</p><p>有一个青年名叫欧根</p><p>我们要用这个名字称呼故事的主人公</p><p>因为我喜欢它的音调</p><p>并且曾有一度</p><p>它和我的笔结过不解的因缘</p><p>他姓什么我们不想再钻研</p><p>尽管这姓氏</p><p>也许在过去一度出现在显赫的门第</p><p>甚至于史家克拉姆金</p><p>也许在笔下使这一族扬名</p><p>但是如今上流社会和传闻</p><p>却早把它忘得干干净净</p><p>我们的主角在某一处任职</p><p>住在科隆那</p><p>一个要人也不认识</p><p>他既不向往死去的祖先</p><p>也没有叹息已逝的流年</p><p>好了，既回到了家</p><p>欧根扔开外套，脱下衣服上了床</p><p>但是他却不能睡眠</p><p>他的脑海里翻腾着不少事情</p><p>他想什么呢？原来在盘算</p><p>他是多么微贱和贫寒</p><p>他必须辛辛苦苦才能期望</p><p>一个安定的生活 一点荣誉</p><p>但愿上帝仁慈</p><p>多给他一些金钱和智慧</p><p>他想起 也有些花天酒地的富翁</p><p>那些头脑并不高明的懒虫</p><p>他们的生活却多么适意</p><p>而他任职总共才只两年</p><p>他的思虑又转向天气风雨–还没有停息</p><p>傍近河沿 波涛不断地上涨</p><p>几乎冲去涅瓦河的桥 使交通中断</p><p>他想到 巴娜莎那怎么办</p><p>和她就要两天或三天不见</p><p>想到这里 欧根衷心地痛惜</p><p>并且像诗人一样幻想下去</p><p>我能结婚吗？为什么不？</p><p>自然这可能是非常艰苦</p><p>我准备操劳，日夜不停</p><p>总会有个办法安置个家</p><p>使它简单安恬，并不奢华</p><p>在那里安置下我的巴娜莎</p><p>也许过那么一年两载 就会找到差使</p><p>把家事交给巴娜莎管理和主持</p><p>并且教育我们的小孩</p><p>就这样 我们活着，手拉着手</p><p>生死相共，到死也不分离</p><p>教子孙把我们埋在一起</p><p>他想着，一夜想个不停</p><p>他忧郁并且衷心地期望</p><p>秋风不要嚎得这样愁人</p><p>雨点也不要打在窗上 这样无情</p><p>但是睡眠 终于合上他的眼睛</p><p>呵看</p><p>幽暗的风雨夜已渐渐消逝</p><p>让惨淡的白日接着统治 悲惨的白日</p><p>涅瓦河一整夜</p><p>抗拒着风暴向大海倾泻</p><p>但终于敌不过它的暴力</p><p>和它搏斗已用尽了力气</p><p>次日清早，在河水的两岸</p><p>成群的居民汇集举目相望</p><p>他们观赏着水花的泼溅</p><p>和汹涌的排山倒海的巨浪</p><p>但是从海湾吹来猛烈的风</p><p>顶住了水流不能前行</p><p>她翻来覆去愤怒咆哮</p><p>她退回淹没河心的小岛</p><p>这时候天时更为凶险</p><p>咆哮的涅瓦不断上升</p><p>她沸腾得像是一壶滚水</p><p>像是野兽猛然发了疯</p><p>突地向城市扑去在她面前</p><p>一切让开路她的周围</p><p>立刻是死寂和荒凉洪水</p><p>灌进了地窖 爬过门槛</p><p>运河也涌上了它的铁栏</p><p>看彼得堡像传说的人鱼</p><p>她的半截身子浸在水里</p><p>呵围攻偷袭</p><p>邪恶的波浪 像盗贼似地爬进门窗</p><p>小船一摆船尾把玻璃撞碎</p><p>摊贩的木板上裹着布帷</p><p>残破的草房木片屋檐</p><p>小本生意的什物杂件</p><p>贫穷人家的所有资财</p><p>雷雨摧毁的桥梁的碎片</p><p>和从坟墓冲出的棺材</p><p>一切都飘浮在街上</p><p>人民 眼见上苍的愤怒，等待死亡</p><p>唉 一切都完了 衣食和房间</p><p>哪儿去找</p><p>那是悲惨的一年</p><p>我们的沙皇 还正光芒万丈</p><p>统治着俄罗斯</p><p>他出现在凉台上 忧郁迷惆</p><p>他说沙皇可不能管辖冥冥中的自然力</p><p>他坐下</p><p>他以悲伤的眼睛沉思地遥望 那险恶危殆的灾区</p><p>以前的广场已变为湖泽</p><p>条条大河是以前的街衢</p><p>而皇宫像是阴沉的岛国 处在大水中</p><p>沙皇只开口说了句话</p><p>请看他的将军</p><p>他们便东西南北遍及全城</p><p>有的走向大街 有的穿过小弄</p><p>在波涛里出入奋不顾身</p><p>搭救那被洪水吓呆的游魂</p><p>那等着淹没在家门的居民</p><p>那时候在彼得广场的一角</p><p>一所新的巨厦刚刚盖好</p><p>在高大的阶台上</p><p>一对石狮 像活的一样张牙舞爪</p><p>在门口把守可怜的欧根</p><p>他的两手在胸前十字交叉</p><p>没戴帽子 苍白得可怕</p><p>正静静地坐在石狮背上 动也不动</p><p>然而这可怜人并没有为自己恐惧</p><p>任波浪怎样贪婪地拍打，溅到脚跟</p><p>他并没有听见 没有留心</p><p>任雨点怎样淋湿着脸</p><p>怒吼的风怎样摆出威严</p><p>并且把他的帽子吹到天空</p><p>他只把自己忧郁的眼睛</p><p>凝固在一个遥远的方向</p><p>在那里山峰似的波浪</p><p>仿佛是从汹涌的海底</p><p>翻腾上来把一切冲掉</p><p>那里 暴风雨在怒号</p><p>那里 房屋的碎片在浮荡</p><p>而就在巨浪近处呵</p><p>天天就在那海湾的旁边</p><p>一棵垂柳 一道简陋的篱墙</p><p>墙里有破旧的小屋</p><p>住着一家母女两人</p><p>住着他的巴娜莎 他的美梦</p><p>难道是在梦里 他看见这一切</p><p>难道人生</p><p>只是一场空 一个春梦</p><p>或是上天对我们的嘲弄</p><p>这时候他好像是中了魔魅</p><p>好像是和石狮结为一体，不能够下来</p><p>在他周围 再没有别的，只是水</p><p>而上面在那稳固的高空</p><p>超然于河水的旋流急浪</p><p>背对着欧根以手挥向</p><p>无际的远方坚定肃静</p><p>是骑着青铜巨马的人像</p><h3 id="第二部"><a href="#第二部" class="headerlink" title="第二部"></a>第二部</h3><p>但如今涅瓦河发够了脾气</p><p>暴虐和破坏已使她厌腻</p><p>终于回转来</p><p>却一路欣赏</p><p>自己的横暴造成的情景</p><p>并且把虏获随处抛扬</p><p>这好像是盗匪的首领</p><p>带着一队人马突入村镇</p><p>他们凶残地打家劫舍</p><p>杀烧和虏掠 哭号和愤恨 詈骂和扭打</p><p>天大的灾祸</p><p>一切做完，强盗迅速撤退</p><p>害怕追兵</p><p>又因为满载而归 不胜疲劳</p><p>便在一路 抛下他们劫来的财物</p><p>洪水撤退了</p><p>石铺的路 已经呈现</p><p>而我的欧根 心怀着忧思希望和恐怖</p><p>一路奔跑着像失了魂</p><p>跑向那尚未平伏的河身</p><p>那里像在得意刚才的胜利</p><p>怒吼的波浪 仍旧在翻腾</p><p>水面上仍旧滚满了汽泡</p><p>像是有炉火在下面燃烧</p><p>像是战马刚刚回归阵地</p><p>涅瓦河是这样急促地喘息</p><p>欧根看见一只船</p><p>仿佛获得了意外的发现</p><p>他一面追去，一面叫喊</p><p>摆渡的船夫正自悠闲</p><p>情愿只要几个铜板</p><p>把他渡过波涛的彼岸</p><p>和波涛搏斗了很长时间</p><p>看那小船老是没入浪里</p><p>一连串的波浪就要打翻大胆的搭客</p><p>但终于 他来到对岸</p><p>这不幸的人</p><p>跑过所有熟悉的街巷</p><p>去到他熟悉的地方举目四望</p><p>却再也不认识呵可怕的景象</p><p>在他眼前一切都很零乱</p><p>这里一片荒凉 那里一堆破烂</p><p>房屋变了形状</p><p>有的完全倾圮了</p><p>另外一些被洪水搬了地方 像是战场上横陈着尸身</p><p>他一眼看见周围的死人 一阵昏眩</p><p>他什么也没想</p><p>尽管苦难的折磨已使他疲弱</p><p>却飞快地跑去到那地方</p><p>那里不可知的命运正在期待</p><p>像是密封的信函等他拆开</p><p>看这里他跑过城郊</p><p>这里是海湾 附近便是他熟悉的房子</p><p>它怎样了</p><p>他站住</p><p>他转来转去 又走回原处看一看</p><p>转过身仔细观察</p><p>就在这里 应该是她的家</p><p>这里是柳树 原来有篱墙</p><p>显然洪水已经把它扫光</p><p>但哪里有房子？</p><p>他迷惘 他踱来踱去 想了又想 自言自语 高声说个不住 而突然用手拍着前额 他大笑起来</p><p>夜的帷幕</p><p>向战栗的城轻轻垂落</p><p>但它的居民却在谈论白天所发生的一切不幸</p><p>久久不能安睡</p><p>破晓的光</p><p>透过疲惫而苍白的云彩</p><p>流入安静的都城</p><p>这光亮 已不能找到昨天的灾害</p><p>留下的痕迹 一片紫红 遮盖了 丑恶的形象</p><p>一切事情 和从前一样有条理地进行</p><p>在那畅达无阻的街心</p><p>人们依旧带着漠然的表情</p><p>面对面走过去</p><p>那些官员 也放弃了昨夜隐蔽的桃源</p><p>到衙门正式办公</p><p>勇敢的小贩 丝毫没有丧气</p><p>把地窖 又从涅瓦河的手里接管</p><p>并且希望以邻居的钱包</p><p>填补自己重大的亏空</p><p>小船一只只从院子搬出去</p><p>末了</p><p>瓦斯托夫男爵天宠的诗人</p><p>也已吟唱了不朽的诗章</p><p>对涅瓦河的灾难表示哀伤</p><p>但是我可怜的可怜的欧根</p><p>唉 他的脆弱而迷乱的神经</p><p>却经不住这可怕的打击</p><p>那涅瓦河的吼吼的风声</p><p>和翻天巨浪还在他的耳际</p><p>不断地轰鸣</p><p>有什么恶梦 撕裂他的神志</p><p>恐怖的思想 紧抓着他</p><p>他只无言地游荡</p><p>一礼拜 一个月转瞬已过</p><p>他从来没有回到家稍坐</p><p>他那幽僻的小屋既然租期已满</p><p>又没付租钱</p><p>一个穷诗人便来做了房客</p><p>欧根从此没有回来</p><p>连衣物也不要了</p><p>整天地流浪</p><p>很快的，世界便把他遗忘</p><p>夜晚他睡在码头</p><p>从窗户扔出的面包 就是他的食物</p><p>他所穿的衣服原已破旧</p><p>这时更是稀烂</p><p>一些顽童朝他的背影扔着石头</p><p>更常常的，马车夫的皮鞭抽在他身上</p><p>因为显然 他一点也不辨认路径 茫然无感</p><p>内心的风暴 使他听不见外界的闹声</p><p>就这样他拖着一个躯壳</p><p>度过悲惨的岁月</p><p>既不像人 又不像野兽 既不像生灵 又不像阴间的鬼魂</p><p>有一晚</p><p>他睡在涅瓦河的码头上</p><p>夏令正渐渐地转为秋天</p><p>吹起了冷风黝黑的波浪</p><p>扑向码头 打着光滑的阶沿</p><p>那声音像是幽诉和低怨</p><p>像是含冤的人在哀求法官</p><p>靠在他紧闭不动的门前</p><p>欧根惊醒来 周围异常黑暗</p><p>雨在淋漓 风吹得非常凄惨</p><p>在阴暗的远处</p><p>一个岗哨 正远隔着夜雾朝他高呼</p><p>欧根吃了一惊</p><p>过去的恐怖 重又在眼前浮现</p><p>他连忙爬起来 到街上流浪</p><p>忽然他站住了，睁大眼睛</p><p>静静扫视着四周的情景</p><p>脸上露着失魂的惊惶</p><p>他到了哪里？</p><p>眼前又是 巨厦的石柱和一对石狮</p><p>张牙舞爪和活的一样</p><p>把守在高大的阶台之上</p><p>而笔直的在幽暗的高空</p><p>在石栏里面纹丝不动</p><p>正是骑着铜马的巨人</p><p>以手挥向无际的远方</p><p>欧根不由得战栗</p><p>他脑中 有些思想可怕的分明</p><p>他知道</p><p>就在这里 洪水泛滥</p><p>就在这里 贪婪的波浪包围他向他 恶意地侵凌</p><p>包围着他、石狮和广场</p><p>和那坚定的矗立的人</p><p>以铜的头颅伸向苍穹</p><p>就是这个人</p><p>按照他的意志 在海岸上建立了一个城</p><p>看，在幽暗里，他是多么可怕</p><p>他的额际 飘浮着怎样的思想</p><p>他掌握着怎样的力量</p><p>那匹马燃烧着怎样的烈焰</p><p>呵 高傲的马你将奔向何方</p><p>你的蹄子将往哪里飞扬</p><p>呵 你命运的有力的主宰</p><p>不正是这样一手握着铁缰</p><p>你勒住俄罗斯 在悬崖上面</p><p>使她扬起前蹄 站在高岗</p><p>这可怜的发疯的欧根</p><p>尽绕着铜像的脚边环行</p><p>他以惶惑的眼睛注视着</p><p>那统治半个世界的国君</p><p>但他的目光忽然昏暗</p><p>胸口感到窒息</p><p>他把额角贴靠着冰冷的栏杆</p><p>他的心里奔腾着火焰</p><p>他的血滚沸</p><p>而突然沉郁地 他站在高傲的铜像前面</p><p>咬紧牙齿握着拳头</p><p>像突然有什么魔鬼附体</p><p>他全身战栗地低声诅咒</p><p>好呵 建设家，你创造的奇迹</p><p>等着我的说罢</p><p>转过头，便飞快地逃去</p><p>因为这时候</p><p>他似乎看见威严的皇帝</p><p>突然间怒气冲冲</p><p>无声地把他的脸转向欧根</p><p>而当他穿过广场逃奔</p><p>在空旷的广场上他却听见</p><p>仿佛背后霹雳一声雷鸣</p><p>仿佛有匹快马向他追赶</p><p>石路上响着清脆的蹄声</p><p>在他身后在苍白的月色下</p><p>看青铜骑士骑着快马</p><p>一面以手挥向高空</p><p>一面赶他这可怜的疯人</p><p>这一夜无论跑到什么地方</p><p>他总听见骑马的铜像</p><p>追赶他响着清脆的蹄声</p><p>从那时候起</p><p>只要欧根由于偶然的机会路过广场</p><p>他的脸上便显出慌张、惶惑的神情</p><p>他会把手迅速地放在自己的胸口</p><p>好像去抚摸那里的创伤</p><p>并且脱下破旧的小帽</p><p>低着头 露着困窘的目光</p><p>绕一条小道溜去</p><p>在海滨 有一个小岛</p><p>迟归的渔人 有时候把船在那里停泊</p><p>一面晾着鱼网，一面烧着他们简陋的晚餐</p><p>或者礼拜天</p><p>一些官员划着小船游经这里</p><p>便到岛上休憩</p><p>它非常荒凉 甚至没有一根草</p><p>在那里滋生洪水的泛滥</p><p>游戏似的把一间旧茅屋冲流在那里</p><p>在那水边</p><p>它便停留着 像一丛灌木</p><p>去年春天 来了一只大船</p><p>把破烂的茅屋移去那里面</p><p>一无所有</p><p>但是在门口</p><p>我们的疯人却被人发现</p><p>自然，人们看在上帝的面上</p><p>把这僵冷的尸体赶快就地埋葬</p><hr><h2 id="穆旦"><a href="#穆旦" class="headerlink" title="穆旦"></a>穆旦</h2><p>本诗的译者是穆旦先生。</p><p>穆旦(1918-1977)，原名查良铮，曾用笔名梁真，出生于天津，祖籍浙江省海宁市袁花镇。爱国主义诗人、翻译家。</p><p>1940年在西南联大毕业后留校任教。1949年赴美国留学，入芝加哥大学英国文学系学习。1952年获文学硕士学位。1953年回国后，任南开大学外文系副教授。1958年受到政治迫害，调图书馆工作。1977年因心脏病突发去世。</p><p>穆旦于40年代出版了《探险者》、《穆旦诗集( 1939—1945)》、《旗》三部诗集，将西欧现代主义和中国诗歌传统结合起来，诗风富于象征寓意和心灵思辨，是”九叶诗派”的代表性诗人。20世纪80年代之后，许多现代文学专家推其为现代诗歌第一人，亦是九叶诗派成员之一。国外诗歌翻译工作，译本在国内翻译文中有较大影响。</p><h3 id="穆旦译文之美"><a href="#穆旦译文之美" class="headerlink" title="穆旦译文之美"></a>穆旦译文之美</h3><p><a href="https://zhuanlan.zhihu.com/p/23931254">https://zhuanlan.zhihu.com/p/23931254</a> “穆旦从全局考虑，用韵脚的变换来配合内容的变化；而且，在一些细微的地方，穆旦也有所调整，不是局限于原来的安排，而是重新编排，使之更能体现出应有的韵味。这两个特点保证了真正出色的「信达雅」的译文的产生。”</p><p>简而言之，就是适当地进行了二次创作。</p><p>这篇文章还提到了<strong>“抄诗计划”</strong>，可以借鉴。</p><hr><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><img src="http://yantares.cn/wp-content/uploads/2024/03/image-1709877087205.png" alt="file"></p><p>座落在圣彼得堡十二月党人广场的彼得一世铜像</p><h3 id="“青铜骑士”"><a href="#“青铜骑士”" class="headerlink" title="“青铜骑士”"></a>“青铜骑士”</h3><p>“青铜骑士”是叶卡捷琳娜二世请法国雕塑家为彼得一世雕铸的一尊青铜塑像，长诗《青铜骑士》以此为题，并作为中心意象。诗歌由楔子和正文两部分组成，楔子的内容是对彼得一世创建彼得堡的深谋大略和丰功伟绩的颂扬；正文又分两个部分，第一部分描述彼得堡建成后遭遇到的洪水灾害，第二部分讲述了灾害给人民带来的巨大痛苦；课文节选自诗歌的楔子。长诗开头原有一段前记：“这篇故事所叙述的事件是以事实为根据的。洪水泛滥的详情引自当时报刊的记载。好奇的读者可以参看B.H.伯尔赫的记事，便知其详。”这是指的1824年11月彼得堡遭遇的特大洪灾。那次水灾中，彼得堡大部分市区被淹，569人丧生。伯尔赫在《圣彼得堡水灾纪实录》中写道：洪浪伴随着强风，95艘船被抛上陆岸，19座桥梁、5千幢房屋被毁，大树带根拔起，电线断路，火灾频发，全城被宣布为战时状态……。</p><p>彼得堡位于俄国西北边陲通向欧洲的入海口，本是一片沼泽地，彼得大帝为了把俄国变成一个欧洲大国，在此筑城，并把都城从莫斯科迁到这里。</p><h3 id="诗歌中的“他”"><a href="#诗歌中的“他”" class="headerlink" title="诗歌中的“他”"></a>诗歌中的“他”</h3><p>“他”，指沙皇彼得一世。诗人通过青铜骑士的象征，对沙皇进行了神化，故开头只用“他”字指代，营造敬畏神灵的氛围。诗歌“楔子”采用的是英雄诗体，诗中几处出现“偶像”（кумир）一词，都证明这一点。</p><h3 id="瓦涅河"><a href="#瓦涅河" class="headerlink" title="瓦涅河"></a>瓦涅河</h3><p>指涅瓦河水。涅瓦河是俄国西北部一条重要河流，彼得堡便建筑在涅瓦河的入海口。</p><p>这里原来生活着臣属于瑞典的芬兰人，18世纪初俄国与瑞典进行21年[北方战争]，打败了瑞典人，将芬兰并入自己版图，所以说：“我们就要从这里威胁瑞典。在这里就要建立起城堡，使傲慢的邻邦感到难堪。”</p><h2 id="鉴赏"><a href="#鉴赏" class="headerlink" title="鉴赏"></a>鉴赏</h2><h3 id="整体基调风格"><a href="#整体基调风格" class="headerlink" title="整体基调风格"></a>整体基调风格</h3><p>多变。彼得大帝的部分是庄严的赞美诗，叶甫根尼的段落悲凉。</p><h3 id="四步抑扬格"><a href="#四步抑扬格" class="headerlink" title="四步抑扬格"></a>四步抑扬格</h3><blockquote><p><a href="https://www.docin.com/p-1684580885.html">https://www.docin.com/p-1684580885.html</a> <a href="https://www.zhihu.com/question/475799570">https://www.zhihu.com/question/475799570</a> <a href="https://www.sohu.com/a/146010600_648975">https://www.sohu.com/a/146010600_648975</a> <a href="https://iics.bfsu.edu.cn/info/1056/1524.htm">https://iics.bfsu.edu.cn/info/1056/1524.htm</a></p><h4 id="英诗韵律"><a href="#英诗韵律" class="headerlink" title="英诗韵律"></a>英诗韵律</h4><p>由于语言的构成要素，汉语长于音韵，而英语长于节奏。</p></blockquote><p>英语词汇主要由双音节词和多音节词组成，每一个双音节词或多音节词由重读音节(accented syllable)和与它相邻的非重读音节(unaccented syllable)组成。</p><p>英诗的节奏则形成于重读音节与轻读音节的交替出现，通过不断变化的语调映照出语流的跌宕起伏。重读音节和非重读音节构成一个音步 (foot) ，音步是构成英诗的基本单位，诗行的长短主要取决于音步数量的多少。轻音节为“抑”，重音节为“扬”，因此音步根据抑扬可分为四种格式:</p><ol><li>抑扬格(iambus); 2) 扬抑格(trochee); 3) 扬抑抑格(dactyl); 4) 抑抑扬格 (anapaest)。</li></ol><p>英诗的音步又因为数量的不同有着不同的表现形式，如双音步 (dimetre)、五音步(pentametre)、八音步(octametre)等。在漫长的创作实践和发展中，抑扬格五音步成为英诗中最常用、最受欢迎的格式，英语诗行中有 2&#x2F;3 就是运用的抑扬格五音步。备受人们喜爱的莎士比亚“十四行诗”(sonnet)就是用这种格式写成的，例如其前四句:</p><p>Shall I&#x2F;compare&#x2F;thee to&#x2F;a sum&#x2F;er’sday ? Thou art&#x2F;more love&#x2F;ly and&#x2F;more tem&#x2F;perate. Rough winds&#x2F;do shake&#x2F;the dar&#x2F;ling buds&#x2F;of May, And sum&#x2F;mer’s lease&#x2F;hath all&#x2F;too short&#x2F;a date.</p><h4 id="俄文中的“格”"><a href="#俄文中的“格”" class="headerlink" title="俄文中的“格”"></a>俄文中的“格”</h4><p>中文是孤立语，表示格的方式是通过位置和虚词来实现的。</p><p>而俄语为典型的屈折语，表达“格”的方式是通过词本身的变化。比如说，я, люблю, тебя三个词中，я是“我”（я）这个词的主格形式，而тебя是“你”（ты）的宾格形式，也就是说变格完成后，他们的成分就确定了，和位置无关。</p><p>现代俄语的6个格：</p><p>①именительный падеж，直译称名格，或译主格，最基本的用法是在句子里充当主语； ②родительный падеж，直译父母格，或译从属格，最基本的用法是表示从属关系，相当于英语的A of B的“of B”的部分； ③дательный падеж，直译给予格，或译给格，最基本的用法是表示谓语的指向性对象，或者间接宾语，相当于英语的 to sb.&#x2F;sth.； ④винительный падеж，宾格，最基本的用法是表示谓语的直接对象，宾语； ⑤родительный падеж，工具格或者造格，最基本的用法是表示动作的工具&#x2F;手段&#x2F;方式等，相当于英语的by sb.&#x2F;sth.或者with sb.&#x2F;sth.； ⑥предложный падеж，前置词格，最基本的用法是和前置词в\на\о连用表示位置、方向、关于某事物，相当于英语的in&#x2F;on&#x2F;about sb.&#x2F;sth.。</p><h4 id="普希金与四步抑扬格"><a href="#普希金与四步抑扬格" class="headerlink" title="普希金与四步抑扬格"></a>普希金与四步抑扬格</h4><h3 id="民族史诗？"><a href="#民族史诗？" class="headerlink" title="民族史诗？"></a>民族史诗？</h3><p>彼得大帝的形象</p><h3 id="立场"><a href="#立场" class="headerlink" title="立场"></a>立场</h3><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3>]]></content>
      
      
      <categories>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 普希金 </tag>
            
            <tag> 诗歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>俄罗斯病人--假如予我以一日的飞驰与翅翼</title>
      <link href="/2024/03/06/%E4%BF%84%E7%BD%97%E6%96%AF%E7%97%85%E4%BA%BA-%E5%81%87%E5%A6%82%E7%BB%99%E6%88%91%E4%B8%80%E6%97%A5%E7%9A%84%E9%A3%9E%E9%A9%B0%E4%B8%8E%E7%BF%85%E7%BF%BC/"/>
      <url>/2024/03/06/%E4%BF%84%E7%BD%97%E6%96%AF%E7%97%85%E4%BA%BA-%E5%81%87%E5%A6%82%E7%BB%99%E6%88%91%E4%B8%80%E6%97%A5%E7%9A%84%E9%A3%9E%E9%A9%B0%E4%B8%8E%E7%BF%85%E7%BF%BC/</url>
      
        <content type="html"><![CDATA[<p>但是，孩子，那些能够计划得到、预想得到的正确的事情，并不会让我们心跳加速。突如其来的激情、抵挡不住的冲动、无法抗拒的诱惑、雪崩一样的痛苦，才会让我们的心狂跳，人的一生就是为这些心跳的时刻活着的。</p><hr><p><strong>诗歌</strong> 1 普希金《青铜骑士》</p><p>2 3 普希金《奥涅金》</p><p>4 阿赫玛托娃《二行诗》</p><p>5 茨维塔耶娃《野性的意志》</p><p>6 聂鲁达《今夜我可以写下最哀伤的诗句》</p><p>7 聂鲁达《我们甚至失去了黄昏的颜色》</p><p>8 惠特曼《给你》</p><p>9 惠特曼《草叶集》</p><p>10 古米廖夫《您不止一次地想起我吧》</p><p>11 艾吕雅《除了爱你我没有别的愿望》</p><p>12 卡瓦菲斯《他发誓》</p><p>13 古米廖夫《他们来到了河边》</p><p>14 惠特曼《我们两个小伙子厮缠在一起》</p><p>15 帕斯捷尔纳克《一日长于百年》</p><p>16 惠特曼《为你啊，民主》</p><p>17 卡瓦菲斯《记住吧，肉体》</p><p>18 艾吕雅《贞洁的独居者》</p><p>19 惠特曼《从滚滚的人海中》</p><p>20 阿赫玛托娃《离开》</p><p>21 路易斯·罗萨雷斯 有的爱比一个吻还短 有的吻比一世生命更久</p><p>22 路易斯·罗萨雷斯 而活着不过是一面淌血的镜子 每一天都被震碎，当我穿过它去看你</p><p>23 阿赫玛托娃，1940，《安魂曲》 即使我历经磨难的嘴被堵住，亿万人民也会用我的呼喊抗议。</p><p>24 普希金《我曾爱过你》</p><p>25 茨维塔涅瓦《两个》</p><p>26 路易斯·塞尔努达《漫游》</p><p>27 赫伯特《两滴》</p><p>终末 路易斯·塞尔努达《如果人能说出》</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>行无咎，思无邪，道无进</title>
      <link href="/2024/03/02/%E8%A1%8C%E6%97%A0%E5%92%8E%EF%BC%8C%E6%80%9D%E6%97%A0%E9%82%AA%EF%BC%8C%E9%81%93%E6%97%A0%E8%BF%9B/"/>
      <url>/2024/03/02/%E8%A1%8C%E6%97%A0%E5%92%8E%EF%BC%8C%E6%80%9D%E6%97%A0%E9%82%AA%EF%BC%8C%E9%81%93%E6%97%A0%E8%BF%9B/</url>
      
        <content type="html"><![CDATA[<p>其行也无愧，其思亦无邪，其道自未进。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>夜风奇谭</title>
      <link href="/2024/03/01/%E5%A4%9C%E9%A3%8E%E5%A5%87%E8%B0%AD/"/>
      <url>/2024/03/01/%E5%A4%9C%E9%A3%8E%E5%A5%87%E8%B0%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="夜风奇谭"><a href="#夜风奇谭" class="headerlink" title="夜风奇谭"></a>夜风奇谭</h1><blockquote><p>经过些微的艺术加工，实际情况请以3.1日监控为准。</p></blockquote><p>是夜，惠风和畅，不见星月。椰子油勤恳一日，头晕眼花，戊时方食于秋谷苑。饭菜虽冷，其心甚悦。大快朵颐之际，惊觉所视忽暗，秋谷苑行将关闭，忙端盘离去。</p><p>既归舍，舍友五香曰：“午间宿管查房，指汝之违规电器，警告上报学院。吾阻之。”椰子油大惊，谢舍友，欲赶制ddl。然遍寻不得行囊，哭曰：“吾电脑！吾平板！吾《电工学》！吾《有机化学实验》！”满室乱走。又曰：“吾知矣！吾落之于秋谷苑！”遂下楼如黑旋风。</p><p>路遇三女，一人引吭高歌。椰子油寻囊心急，自三人狭缝窜出。二女大笑：“呔！汝歌声骇人至疾走奔逃之境！”</p><p>然秋谷苑已落锁闭门。椰子油绕之疾走，得一隅亮光，遂登堂入室。穿寻二室，镜片朦胧。二女沐浴其中，曰：“啊——！”椰子油回首，见一标识：“女士澡堂，男士勿入”。速离。</p><p>二女浴罢，椰子油求钥。曰：“澡堂与秋谷苑不通。”</p><p>椰子油见春禾苑未闭，问钥其中。曰：“春禾苑与秋谷苑不同钥。”</p><p>椰子油颓然。绕秋谷苑走。忽觉窗低，或可翻窗而入。推窗，竟未锁。问之云渲染。云渲染曰：“易！吾尝翻入十九楼。毋忧，寻小道即遁！”</p><p>椰子油欣然寻小道。未果，思及放风事，问之陈英雄。陈英雄曰：“可，吾放课即来寻汝。”椰子油大喜，四处游荡，得旧椅一把。四处游荡。</p><p>辰时陈英雄至，椰子油夹道欢迎，请之放风。陈英雄站定，椰子油上椅，举腿，抬臀，蹭入窗内。一跃落地，飞驰向用餐处，不见行囊。椰子油疑惧，环秋谷苑内疾走。无果，告窗外陈英雄：“不见吾包！”陈英雄亦惊：“何人拾汝包？”曰：“吾最末离，无人可拾吾包！”</p><p>椰子油又巡数周，终见其包于隐蔽之“失物招领”处。狂喜，向窗奔，翻出。</p><p>陈曰：“善！”椰子油亦自满，曰：“拍照为证。”陈曰：“吾为人证。”二人乐，回舍。陈英雄亦奔波一日，所遇怪事颇多。椰子油闻之，曰：“6”。</p><p><img src="http://yantares.cn/wp-content/uploads/2024/03/3.1%EF%BC%882%EF%BC%89-169x300.jpg"></p><p><img src="http://yantares.cn/wp-content/uploads/2024/03/3.1-300x225.jpg"></p><hr><p>若想了解云渲染翻十九楼和陈英雄的一天，请购买《云渲染怒登十九层高塔》和《陈英雄误闯红教堂》，仅需￥3.0*10^8。数量有限，先到先得。</p><p><strong>参考文献：（按时间顺序排名）</strong></p><p>[0] 如何成功打滚并分散主人注意力，缪缪，2024</p><p>[1] 电子器件标准及周旋学，斡旋（化名），2024</p><p>[2] 翻窗学及其拓展应用，psych（网名），2024</p><p>[3] 地势测量及侦察学，黎墨澜（笔名），2024</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 6 </tag>
            
            <tag> 奇谭 </tag>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GOOGLE PLAY</title>
      <link href="/2024/03/01/google-play/"/>
      <url>/2024/03/01/google-play/</url>
      
        <content type="html"><![CDATA[<p>为了下obsidian哼哧哼哧搞了半天google play，搞到一半想起来规避google play的方法：电脑下载apk传给手机……</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>adobe creative cloud卸载</title>
      <link href="/2024/03/01/adobe-creative-cloud%E5%8D%B8%E8%BD%BD/"/>
      <url>/2024/03/01/adobe-creative-cloud%E5%8D%B8%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p>遭遇： 项目原因要用PS和PR，正好换电脑就请维修站的工作人员帮我装了adobe系列，然后发现正版太贵了，改为去cadzxw下载。过了一会想起来这个adobe creative cloud会自动检测软件是否为正版，影响使用，于是想卸载，结果：</p><p><img src="http://yantares.cn/wp-content/uploads/2024/03/image-1709283978876.png" alt="file"> 卸载了PS，PR，acrobat，仍旧如此提示。</p><p>哦，原来您是流氓软件啊，失敬。</p><hr><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><blockquote><p>转载自<a href="https://zhuanlan.zhihu.com/p/23986674">知乎</a>。</p></blockquote><p>官方提供了专用的工具。</p><p><strong>卸载Creative Cloud的方法步骤：</strong> 1.下载AdobeCreativeCloudCleanerTool.exe 此工具存在两种类型： 1）、Remove all products (Windows) 2）、Remove selected products (Windows)</p><p>第二种：</p><p>下载地址：<a href="https://helpx.adobe.com/creative-cloud/kb/cc-cleaner-tool-installation-problems.html">Remove selected products</a></p><p>（打开下载页面后，选择相应的操作系统，然后点击上图红框内容就可以下载了。）</p><p>2.右键以管理员身份运行AdobeCreativeCloudCleanerTool.exe</p><p>3.选择语言：输入字母 e ，回车；输入y，回车</p><p>4.选择</p><ul><li>选择6，回车</li><li>选择1，回车</li><li>输入y，回车确定</li></ul><p>耐心等待，出现以下界面说明卸载完成。</p><p><strong>删除Win10资源管理器中的Creative Cloud文件夹</strong> 1.在注册表以下位置找到了对应的项目：HKEY_USERS\S-1-5-21-3185218813-812416551-593507322-1001\SOFTWARE\Classes\CLSID{0E270DAA-1BE6-48F2-AC49-F7A03EB7D1CF}</p><p>2.对应键为：System.IsPinnedToNameSpaceTree</p><p>该键值默认为1，即在文件资源管理器导航窗格中显示“Creative Cloud文件”。如果你不想看到它，将其键值修改为0即可。修改后可立即生效，无需重启文件资源管理器，也无需重启计算机。</p><p>（在Windows10正式版操作系统中测试，其他版本操作系统应该也适用。）</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adobe </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>效率软件</title>
      <link href="/2024/03/01/%E6%95%88%E7%8E%87%E8%BD%AF%E4%BB%B6/"/>
      <url>/2024/03/01/%E6%95%88%E7%8E%87%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="效率软件"><a href="#效率软件" class="headerlink" title="效率软件"></a>效率软件</h1><p>不知道效率软件的定义是什么，反正可以记录的都先算进来吧。</p><h2 id="纯码字类-简洁"><a href="#纯码字类-简洁" class="headerlink" title="纯码字类-简洁"></a>纯码字类-简洁</h2><h3 id="电脑类："><a href="#电脑类：" class="headerlink" title="电脑类："></a>电脑类：</h3><ul><li>word</li></ul><p>老牌码字器，好处是大家都能打开docx格式，缺点是公式之类太难打。</p><ul><li>typora</li></ul><p>我的最爱，喜欢markdown。极度简洁。非常适合纯码字。</p><ul><li>Zine</li></ul><p>以前喜欢用来写文学笔记和随笔，因为在学校机房用也很方便。现在用得少。</p><ul><li>幕布</li></ul><p>用来做思维导图不错。有点鸡肋。</p><h3 id="ipad类："><a href="#ipad类：" class="headerlink" title="ipad类："></a>ipad类：</h3><ul><li>Goodnotes or notability</li></ul><p>批注用。</p><ul><li>marginnote3</li></ul><p>买了专业版但没怎么用。感觉功能繁杂，显得冗余了。</p><h2 id="管理类-逻辑"><a href="#管理类-逻辑" class="headerlink" title="管理类-逻辑"></a>管理类-逻辑</h2><ul><li>notion</li></ul><p>正在用。好处是功能齐全，界面美观，多设备均可使用；缺点是个人版虽然免费，群体版却要收费。内容多了容易卡。</p><ul><li>obsidian</li></ul><p>相对于typora的优点：可以搭建自己的知识管理系统。</p><p>附一下obsidian+zotero: <a href="https://www.corrain.top/obsidian-zotero/">https://www.corrain.top/obsidian-zotero/</a></p><ul><li>quicker</li></ul><p>快捷手势？用了再评价。</p><h2 id="交流类-共享"><a href="#交流类-共享" class="headerlink" title="交流类-共享"></a>交流类-共享</h2><ul><li>博客网站</li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 效率 </tag>
            
            <tag> 经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>match the quotes with the works.</title>
      <link href="/2024/03/01/match-the-quotes-with-the-works/"/>
      <url>/2024/03/01/match-the-quotes-with-the-works/</url>
      
        <content type="html"><![CDATA[<p>Paragraph 1 I have an idea that some men are born out of their due place. Accident has cast them amid certain surroundings, but they have always a nostalgia for a home they know not. They are strangers in their birthplace, and the leafy lanes they have known from childhood or the populous streetsin which they have played, remain but a place of passage. They may spend their whole lives aliens among their kindred and remain aloof among the only scenes they have ever known.</p><hr><p>works: <img src="http://yantares.cn/wp-content/uploads/2024/03/matchAb-300x188.png"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文学 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zotero使用</title>
      <link href="/2024/03/01/zotero%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/03/01/zotero%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="zotero"><a href="#zotero" class="headerlink" title="zotero"></a>zotero</h1><p>可参考：<a href="https://www.corrain.top/zotero-1/">https://www.corrain.top/zotero-1/</a> 算是比较完整的使用指南。</p><p><strong>chrome connector:</strong></p><p>使用 <code>shift</code>+<code>+</code>，可以展开文献列表，使用 <code>-</code> 可以折叠文献列表。</p><p>D&#x2F;zotero&#x2F;locate&#x2F;engines.json已替换为这位博主的。</p><p><strong>插件：</strong></p><p>如何将插件导入到 Zotero 中呢？</p><p>依次点击：工具 -&gt; 插件，进入到插件管理界面，然后将下载下来的插件(.xpi)直接拖入其中，或者在插件管理界面，点击右上角的设置按钮，选择 Install Add-on From File。将插件导入后，需要重启软件才会生效。插件导入后，下载下来的插件文件就可以删除了</p><p><strong>中文社区：</strong></p><p><a href="https://zotero-chinese.com/">https://zotero-chinese.com/</a></p><p>利用坚果云同步的问题，懂了，但不完全懂，等到我有实验室两台电脑这种情况再说……</p><p>好的，现在我有两台电脑了。坚果云的问题在于它把文献PDF都压缩成压缩文件了。</p><p>之后有问题可以查看Q群的文件。</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> zotero </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>躬身，甘为推磨</title>
      <link href="/2024/03/01/%E8%BA%AC%E8%BA%AB%EF%BC%8C%E7%94%98%E4%B8%BA%E6%8E%A8%E7%A3%A8/"/>
      <url>/2024/03/01/%E8%BA%AC%E8%BA%AB%EF%BC%8C%E7%94%98%E4%B8%BA%E6%8E%A8%E7%A3%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2024.2.29 读《2.5小时销售额破1240万元！董宇辉称近年获关注沾了文学的光》有感。</p></blockquote><h2 id="《收获》"><a href="#《收获》" class="headerlink" title="《收获》"></a>《收获》</h2><p>新闻报道，此次直播延续了“董宇辉+杂志主编+嘉宾”的直播模式，《收获》主编程永新带着两位著名作家余华和苏童一起亮相。</p><p>“虽然聊了很多文学，但是对上直播间的目的大家都很明确，那就是为《收获》带货。直播结束后传来消息，直播间中《收获》2024年全年订阅量达到了惊人的6.3万套，而《收获2024长篇小说》季刊也售出了1.2万套，总成交金额超过1240万元。这个数字比《人民文学》四小时直播，共计销售8.26万套，99.2万册，成交金额1785万元，销售码洋1983万元的“战绩”略低，但仍然是一个让很多老牌文学杂志羡慕不已的成绩。”</p><p>并不是觉得文学应该脱离群众，只是潜意识里认为它不会与直播带货之流混于一道。“推销文字”一词本身就相当讽刺。</p><p>2024.3.2 驳回：应当表述得更加清楚，以防误解。 文学当中一部分的实用性也很重要，但是</p><h2 id="《读书》"><a href="#《读书》" class="headerlink" title="《读书》"></a>《读书》</h2><p>正为此忧心，然而第二天立马又读到了另一段回忆沈昌文的文字。作者为樊国宾，原文题目为《蓄养“诗书宽大之气”》，不知为何在搜厉以宁时排在很前面。下附文段。</p><p>1993年4月26日，当年正统率天下士林的《读书》杂志核心骨干来二教座谈。一脸抬头纹的沈昌文老辣幽默；邻居大姐型的吴彬聪慧矜持；卡车司机出身的赵丽雅娇小清秀。有人问沈昌文对王朔的看法，沈立即回了一句：“王朔是谁？我不知道。”</p><p>我接着问：上海的《书林》停刊了，你们还活着，你们到底有什么狡猾的策略？</p><p>沈看都不屑看我，用带点南方语气的口音说：“办杂志要让读者会心微笑，而不能让大家鼓掌。我们这本杂志好比打鼓，多数内容还是打边鼓，打在鼓面上的每期只有五十万字里的两三万字。”停顿了一阵子，他挠挠头，又说：“逼良为娼……人家心想：你本来就是娼。”</p><p>像老沈这样的人，北大学生是拿他没有办法的。</p><h2 id="文学"><a href="#文学" class="headerlink" title="文学"></a>文学</h2><p>秉着充分利用时代特色的精神，问问GPT，“文学应该向流量献媚吗？”。GPT没有犹豫，立刻答道：</p><p>文学与流量献媚之间存在着一种复杂的关系，需要细致的思考和平衡。流量献媚指的是在文学作品中迎合大众口味、追求大量点击、阅读量或关注度的做法。这种做法通常包括使用流行的话题、题材或风格，以吸引更多的读者或观众，从而获得更多的关注和认可。</p><p>在这个问题上，有几个方面需要考虑：</p><ol><li><p><strong>文学的本质</strong>：文学作为一种艺术形式，其本质在于表达作者的思想、情感和对世界的观察。追求流量可能会削弱作品的深度和内涵，导致作品失去原本的艺术性和独特性。</p></li><li><p><strong>文学的目的</strong>：文学作品的目的可以是启发人们思考、传达特定的价值观或情感体验，而不仅仅是为了获得关注和赞誉。如果文学作品只是为了吸引流量而牺牲了其原有的意义和价值，那么它可能会失去其真正的意义和影响力。</p></li><li><p><strong>作者的立场</strong>：对于作者来说，是否追求流量献媚可能取决于他们的目标和价值观。一些作者可能更愿意保持原创性和独立性，而另一些作者可能认为追求流量是为了将自己的作品传播给更多的人，并可能会选择适当地调整自己的创作风格和内容以迎合读者的口味。</p></li><li><p><strong>文学市场的现实</strong>：在当今文学市场，流量和关注度往往与商业成功息息相关。一些作者可能会被出版商或市场需求所驱使，更倾向于迎合大众口味以获得更多的销量和收入。</p></li></ol><p>因此，对于文学是否应该向流量献媚这个问题，没有一个固定的答案，取决于个人的价值观、创作目的以及对文学市场的认识。然而，重要的是在追求流量的同时，保持对文学本身的尊重和理解，不应牺牲作品的品质和深度。</p><p>讲得挺全面，但是总是差点意思。差了什么呢？</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>La la land（爱乐之城）</title>
      <link href="/2024/02/29/la-la-land%EF%BC%88%E7%88%B1%E4%B9%90%E4%B9%8B%E5%9F%8E%EF%BC%89/"/>
      <url>/2024/02/29/la-la-land%EF%BC%88%E7%88%B1%E4%B9%90%E4%B9%8B%E5%9F%8E%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2024.2.29 晚间看完。</p></blockquote><p>最早听到的片内曲目是city of stars（初中？），当初对la la land的理解不知为何出了问题，把男女主的关系理解成《罗马假日》那种一日尽兴型了，真实的剧情没有那么浪漫写意，真实的比重反而更大，只不过电影的表现手段比较诗意。</p><p>意料之中地，最能共情的人物是男主Seb。意外地守旧，少言，对某些观点坚持，但迷茫，会为某物妥协。不如说明他本人就是fancy的化身。</p><p>看影片下面的评论，很多谈论爱。但是那只是一个瞬间吧。持续多久全靠那一瞬间能够冲上多少能量。影片的结局已经非常理想主义了。</p>]]></content>
      
      
      <categories>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
            <tag> 灵魂 </tag>
            
            <tag> 电影 </tag>
            
            <tag> 远绪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aircraft materials</title>
      <link href="/2024/02/28/aircraft-materials/"/>
      <url>/2024/02/28/aircraft-materials/</url>
      
        <content type="html"><![CDATA[<p>有遗憾的人生是完美的人生。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>打印资料小寄巧</title>
      <link href="/2024/02/28/%E6%89%93%E5%8D%B0%E8%B5%84%E6%96%99%E5%B0%8F%E5%AF%84%E5%B7%A7/"/>
      <url>/2024/02/28/%E6%89%93%E5%8D%B0%E8%B5%84%E6%96%99%E5%B0%8F%E5%AF%84%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<ol><li>几百页的资料可以在淘宝上找店家打印。</li><li>使用edge的pdf打印功能可以把几页ppt整合到一页里，然后再打印。但是排版不是很方便。</li><li>如何将多个pdf合成为一个文件？ adobe:<ul><li>选择添加文件 ，然后在想要添加文件的位置选择 (+) 图标。 从“最近”或“文件”列表，或从计算机中选取所需的文件，然后选择继续 。</li><li>使用 Adobe Express 模板设计新页面。</li><li>选择要顺时针旋转、逆时针旋转或要删除的页面。 将鼠标悬停在文件上可以选择展开页面或删除文件。</li><li>根据需要输入文件名。</li><li>拖动文件以按照您希望它们在合并 PDF 中的显示方式来重新排列文件。 注： Microsoft® Excel: .xls、.xlsx Microsoft® PowerPoint: .ppt、.pptx Microsoft® Word: .doc、.docx 图像文件格式: .bmp、.gif、.jpeg、.jpg、.png、.tif、.tiff</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> 资料 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“此应用包不支持通过应用安装程序安装，因为它使用了某些受限制的功能。”</title>
      <link href="/2024/02/27/%E6%AD%A4%E5%BA%94%E7%94%A8%E5%8C%85%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83/"/>
      <url>/2024/02/27/%E6%AD%A4%E5%BA%94%E7%94%A8%E5%8C%85%E4%B8%8D%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83/</url>
      
        <content type="html"><![CDATA[<p>安装microsoft teams时遇到的问题： （忘记截图了，这里借用一下相同问题的配图）</p><p><img src="http://yantares.cn/wp-content/uploads/2024/02/image-1709015268662.png" alt="file"></p><hr><p>解决方案：</p><p>问题出现原因是安装程序版本过老。</p><p>故在microsoft store更新【应用安装程序】(microsoft corporation)：</p><p><img src="http://yantares.cn/wp-content/uploads/2024/02/image-1709015381644.png" alt="file"></p><p>更新后即可正常安装。</p><hr><p>附：连接vpn可能导致打不开microsoft store，并使teams离线。</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 笔记本 </category>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> microsoft </tag>
            
            <tag> 安装 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub SSH key 配置</title>
      <link href="/2024/02/27/github-ssh-key-%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/02/27/github-ssh-key-%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="github-SSH"><a href="#github-SSH" class="headerlink" title="github SSH"></a>github SSH</h1><p>参考：<a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</a></p><p>（GITHUB官网）</p><h2 id="Before-check"><a href="#Before-check" class="headerlink" title="Before-check"></a>Before-check</h2><ul><li>检查现有SSH密钥：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -al ~/.ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lists the files in your .ssh directory, if they exist</span></span><br></pre></td></tr></table></figure><p>Check the directory listing to see if you already have a public SSH key. By default, the filenames of supported public keys for GitHub are one of the following.</p><ul><li><em>id_rsa.pub</em></li><li><em>id_ecdsa.pub</em></li><li><em>id_ed25519.pub</em></li></ul><h2 id="Generating-a-new-SSH-key"><a href="#Generating-a-new-SSH-key" class="headerlink" title="Generating a new SSH key"></a>Generating a new SSH key</h2><ul><li>打开Git Bash；</li><li>生成SSH:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Adding-your-SSH-key-to-the-ssh-agent"><a href="#Adding-your-SSH-key-to-the-ssh-agent" class="headerlink" title="Adding your SSH key to the ssh-agent"></a><strong>Adding your SSH key to the ssh-agent</strong></h2><ul><li>In a new <em>admin elevated</em> PowerShell window, ensure the ssh-agent is running. You can use the “Auto-launching the ssh-agent” instructions in “<a href="https://docs.github.com/en/articles/working-with-ssh-key-passphrases">Working with SSH key passphrases</a>“, or start it manually.</li></ul><p>auto version:</p><p>You can run ssh-agent automatically when you open bash or Git shell. Copy the following lines and paste them into your ~&#x2F;.profile or ~&#x2F;.bashrc file in Git shell:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span>=~/.ssh/agent.env</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">agent_load_env</span></span> () &#123; <span class="built_in">test</span> -f <span class="string">&quot;<span class="variable">$env</span>&quot;</span> &amp;&amp; . <span class="string">&quot;<span class="variable">$env</span>&quot;</span> &gt; /dev/null ; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">agent_start</span></span> () &#123;</span><br><span class="line">    (<span class="built_in">umask</span> 077; ssh-agent &gt; <span class="string">&quot;<span class="variable">$env</span>&quot;</span>)</span><br><span class="line">    . <span class="string">&quot;<span class="variable">$env</span>&quot;</span> &gt; /dev/null ; &#125;</span><br><span class="line"></span><br><span class="line">agent_load_env</span><br><span class="line"></span><br><span class="line"><span class="comment"># agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running</span></span><br><span class="line">agent_run_state=$(ssh-add -l &gt; /dev/null 2&gt;&amp;1; <span class="built_in">echo</span> $?)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! <span class="string">&quot;<span class="variable">$SSH_AUTH_SOCK</span>&quot;</span> ]  [ <span class="variable">$agent_run_state</span> = 2 ]; <span class="keyword">then</span></span><br><span class="line">    agent_start</span><br><span class="line">    ssh-add</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$SSH_AUTH_SOCK</span>&quot;</span> ] &amp;&amp; [ <span class="variable">$agent_run_state</span> = 1 ]; <span class="keyword">then</span></span><br><span class="line">    ssh-add</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> <span class="built_in">env</span></span><br></pre></td></tr></table></figure><p>If your private key is not stored in one of the default locations (like ~&#x2F;.ssh&#x2F;id_rsa), you’ll need to tell your SSH authentication agent where to find it. To add your key to ssh-agent, type ssh-add ~&#x2F;path&#x2F;to&#x2F;my_key</p><ul><li>In a terminal window without elevated permissions, add your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace <em>id_ed25519</em> in the command with the name of your private key file.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add c:/Users/YOU/.ssh/id_ed25519</span><br></pre></td></tr></table></figure><h2 id="Adding-a-new-SSH-key-to-your-GitHub-account"><a href="#Adding-a-new-SSH-key-to-your-GitHub-account" class="headerlink" title="Adding a new SSH key to your GitHub account"></a><strong>Adding a new SSH key to your GitHub account</strong></h2><p>Copy the SSH public key to your clipboard.</p><p>If your SSH public key file has a different name than the example code, modify the filename to match your current setup. When copying your key, don’t add any newlines or whitespace.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_ed25519.pub</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copies the contents of the id_ed25519.pub file to your clipboard</span></span><br></pre></td></tr></table></figure><p>然后进github复制粘贴就行了</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 机器学习 </category>
          
          <category> 笔记本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Planets, Op. 32:4. Jupiter, the Bringer of Jollity</title>
      <link href="/2024/02/26/the-planets-op-324-jupiter-the-bringer-of-jollity/"/>
      <url>/2024/02/26/the-planets-op-324-jupiter-the-bringer-of-jollity/</url>
      
        <content type="html"><![CDATA[<h3 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h3><p>Gustav Holst为太阳系诸星所谱《行星组曲，Op. 32》中，热度最高的当属木星这首《欢乐使者》。至于原因，可简要引述其B站版本下一位乐友的评论：</p><blockquote><p>即使你不喜欢古典音乐，只要你坚持三分十秒，我不信你不爱那段雄壮瑰丽的行板。。。</p></blockquote><p>网易云上的版本由Herbert von Karajan及柏林爱乐乐团演奏。</p><h3 id="背景故事"><a href="#背景故事" class="headerlink" title="背景故事"></a>背景故事</h3><p><strong>Britannica:</strong></p><p>The Planets, Op. 32, orchestral suite consisting of seven short tone poems by English composer Gustav Holst. Its first public performance took place in 1920, and it was an instant success. Of the various movements, “Mars” and “Jupiter” are the most frequently heard.</p><hr><p><strong>youtube:</strong> <a href="https://www.youtube.com/watch?v=iqCx07wv1Pk">https://www.youtube.com/watch?v=iqCx07wv1Pk</a></p><p>1913年，39岁的Gustav Holst于西班牙Mallorca与两个作曲家好哥们A和B度假。以及Clifford Bax，A的诗人弟弟。</p><p>这位诗人向Holst推荐了WHAT IS A HOROSCOPE(by Alan Leo)，一部占星书。Holst因此迷上了这种学科，这些对黄道十二宫的心理画像，并以此为灵感，借各星球的气质为他们各谱一曲。</p><p>于是从1914年起，Holst每周在为保罗女子学校教授音乐课的周末谱写这套组曲。</p><p>这套组曲包括7个大章： 火星Mars，战争预兆；(一战期间写成, disorder) motion 金星Venus，和谐回转（柔美）； sublime 水星Mercury，罗马信使（迅捷）； light 木星Jupitar，欢乐使者（英伦爱国赞美诗：”I vow to thee my country”）； 土星Saturn，衰朽亡者（Inspired by A）； heavy 天王星Uranus，魔法幻想； vulgar 海王星Neptune，神秘遥远。 static</p><p>组曲于1916年完成，但因一战被搁置。</p><p>两年后，B资助Holst进行演出。</p><p>该组曲对电影作曲家影响极大。</p><h3 id="first-glance"><a href="#first-glance" class="headerlink" title="first glance"></a>first glance</h3><p>首段庄重而不失诙谐；弦乐的跃入是欢快的，却在一段逐渐激昂的造势和静默后以更加浩荡的声势登场，无怪乎对听众的听觉造成巨大的震撼。</p><p>经典无愧乎经典。初听便十分耳熟，细究来竟是因此后年岁有太多高超的模仿者。这边是流行文化的引领者。然而作曲家本人的形象并不“流行”，而是较为安静的。</p>]]></content>
      
      
      <categories>
          
          <category> 悦乐 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>柔枝百绕绵绵意，玉蕊千回淡淡香</title>
      <link href="/2024/02/25/%E6%9F%94%E6%9E%9D%E7%99%BE%E7%BB%95%E7%BB%B5%E7%BB%B5%E6%84%8F%EF%BC%8C%E7%8E%89%E8%95%8A%E5%8D%83%E5%9B%9E%E6%B7%A1%E6%B7%A1%E9%A6%99/"/>
      <url>/2024/02/25/%E6%9F%94%E6%9E%9D%E7%99%BE%E7%BB%95%E7%BB%B5%E7%BB%B5%E6%84%8F%EF%BC%8C%E7%8E%89%E8%95%8A%E5%8D%83%E5%9B%9E%E6%B7%A1%E6%B7%A1%E9%A6%99/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运一下图书馆发布的科普，因为真的很喜欢……非盈利应该不会侵权？ 原网址：<a href="https://www.lib.tongji.edu.cn/index.php?classid=11979&newsid=33838&t=show">https://www.lib.tongji.edu.cn/index.php?classid=11979&newsid=33838&t=show</a></p></blockquote><p>同济植物二十四节气：雨水–结香（Edgeworthia chrysantha）</p><p>廿四节气中雨水的“雨”是动词，是降雨的意思。时至雨水，降水开始增多，气候上寒潮频发，乍暖还寒，上海自雨水节气开始降温下雨，陆续返校的老师同学们记得备上雨具。</p><p>古人将雨水分为三候：一候雨水节气的獭祭鱼；二候后五日的鸿雁来；三候雨水之后十日的草木萌动。”降雨让种子萌发，润绿大地。</p><p>结香花如其名，枝条柔韧可以打结而不断，花香浓郁，香味之浓可以排进同济花香榜前三。同学们可以在空闲之余，感受结香的“柔枝百绕绵绵意，玉蕊千回淡淡香”。</p><p>结香为瑞香科结香属，花期一般在冬末春初。关于给结香花打结的寓意有很多，有些人希望打结可以让自己的美梦成真，有些人则认为打结可以求得姻缘，不过这也仅仅是人们在其身上赋予的美好期许。</p><p>结香是落叶灌木，开花时枝头犹如挂着一个个金黄的小球，近看可以发现，小球是由许多小花组成的头状花序，每一朵都有一个长长的筒状结构，筒子朝外的一头则分为四个裂片，吸引传粉昆虫；靠内的筒底则藏着花蜜。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>时间会抹杀所有，但我的村庄会留下来</title>
      <link href="/2024/02/24/trashed-2/"/>
      <url>/2024/02/24/trashed-2/</url>
      
        <content type="html"><![CDATA[<h1 id="单独：时间会抹杀所有，但我的村庄会留下来"><a href="#单独：时间会抹杀所有，但我的村庄会留下来" class="headerlink" title="单独：时间会抹杀所有，但我的村庄会留下来"></a>单独：时间会抹杀所有，但我的村庄会留下来</h1><p><a href="http://static.owspace.com/wap/299590.html">http://static.owspace.com/wap/299590.html</a></p><p><strong>以故乡为灵感的创作有很多，但都拥有一个共同的特质——记录故乡的，都是离开故乡的人。</strong></p><p>访谈对象：</p><ul><li><strong>郑在欢：</strong>从《驻马店伤心故事集》到《雪春秋》</li><li><strong>宥予：</strong>《撞空》</li><li><strong>梁鸿：</strong>《中国在梁庄》、《梁庄十年》</li></ul><h2 id="只有离开家，才能感受家"><a href="#只有离开家，才能感受家" class="headerlink" title="只有离开家，才能感受家"></a>只有离开家，才能感受家</h2><ul><li>梁鸿：</li></ul><p>我们只有离开家之后，才能够开始了解家。我到了现在的年龄会发现，早年我们都是毫不留情地离开家的，我们就是为了离开家才奋斗的，我们要去广州、上海，远方才是我的家。这是每个少年最原本的要求，<strong>那个时候我们的眼光是朝外的，我们去看一个新的世界，一个不同于家的世界。</strong></p><p>家蕴含着我们对生命丝丝缕缕的感受，这种感受伴随着我们慢慢往外走，一直到我们开始写作，开始生活。因此我认为，<strong>一个人如果能够经常回去看看家，把家作为情感对象来观察，会比观察其他地方有意思得多。</strong></p><p>写了梁庄这么多年，我得到的支持和回馈，远远大于我给予梁庄和梁庄人的。我什么都没有给予，但得到了更多东西。</p><ul><li>郑在欢</li></ul><p>也许我之后会像梁鸿老师一样，再回到家去，重新回到当时的生活。因为如果不刻意这样做的话，和故乡可能就会比较远了，小说会离地越来越远，离虚构越来越近。我觉得家乡有这样一种时间上和空间上的双重作用。从这个意义上来说，<strong>家乡肯定是我的写作出发的地方。</strong>家乡是我们选择不了的，并且会影响我们很多，我的世界观就是被我的家乡塑造的。</p><ul><li>宥予</li></ul><p>对于回家，我好像没办法说是回到故乡，对于家的归属感不太确定。但是我发现，随着年龄增长，我反而离我童年的记忆越来越近。我甚至怀疑等到再老一点，我可能就回到最初的记忆里去了。这些记忆不单单是与人相关的，都是一些很淡、很小的片段，没有太多的情绪夹杂在里面，但是我又会一遍一遍地回到这些很早期的记忆中去。<strong>所以我不确定“家”的地理位置大概在哪里，但我会经常回到记忆里，那些记忆也都发生在故乡的土地上。</strong></p><h2 id="人类是“无耻中的坚韧”"><a href="#人类是“无耻中的坚韧”" class="headerlink" title="人类是“无耻中的坚韧”"></a>人类是“无耻中的坚韧”</h2><ul><li>梁鸿</li></ul><p>我最近刚好和一位朋友聊天，聊到当我们从灾难中回到日常生活的时候，会发现人类是“无耻中的坚韧”，为什么这么说呢？哪怕是在死亡和灾难面前，人类依然要吃喝拉撒，依然要去做饭、喝水、上厕所，我们还要索取爱，我们更希望得到爱。也正是这样一些非常细微的索取、要求、贪婪、欲望……支撑人类不断地繁衍下去，支撑人类的存在。</p><ul><li>郑再欢</li></ul><p>宥予写的这种关于城市的漂泊生活，我们可能看过写北京、上海的比较多，广州的我还是第一次看。写北京、上海的生活会和广州这种火热的生活产生一种很强的对比。我今年第一次去广州，我很喜欢，广州的烟火气非常重，城市空间很立体，不像北京、上海那么规整，人群的交叉感非常强。我在到广州后，感觉像是回到了青春时候。</p><p>但是，在这么火热的城市气息下，宥予写人是很淡漠的，可能这方面大家会觉得像加缪。但是我觉得这种淡漠其实是年轻人来到了一个节点，对周遭世界开始力不从心之后，就不再关心了，以及对自身状态的迷茫，又要活着，又要工作。</p><h2 id="回家是为了身份感的确证"><a href="#回家是为了身份感的确证" class="headerlink" title="回家是为了身份感的确证"></a>回家是为了身份感的确证</h2><ul><li>梁鸿</li></ul><p>过年时我们都说要回家，因为有大量打工的人一定要回家。这也是我在“梁庄系列”这三本书里面都提到的事实，这些打工的人一般是青壮年、四五十岁，可能和伴侣两个人一起在外打工，在城市里面没有真正的家。然而家里的房子还在村庄，春节一定得回到自己的村庄里面，才能够觉得安顿下来了。<strong>因为只有在那一个月里，以主人的身份招待亲朋好友，他们的身份才能得到确证。</strong>我觉得现在的回家过年并不是完全被传统文化驱使，存在着非常复杂的元素。</p><p>我觉得打工回家的返乡潮特别值得我们思考：为什么要回家？回家做什么？父辈为什么回家？他们回家做什么？我们生活在一个什么样的空间、潮流与存在状态里？</p><ul><li>郑再欢</li></ul><p>回家有很多因素，不仅有团圆这一个目的。虽然团圆听起来最好听、最不功利，但其实人都是被各种利益拖着走的，父辈们尤其如此。我想我以前可能是以一个比较傲慢的年轻人的心态去看待这件事情，会觉得他们很土，过年就想着回家，两代人不愿意互相理解，或者说很难互相理解，做到真正的交心。我觉得家乡的人，尤其是男性很不擅长谈心，心里的话不会说出来，他们的委屈和难处是很少对外讲的。</p><ul><li>宥予</li></ul><p>我最大的印象是房子的改变。九十年代时，村里多是一些砖房加上灰瓦的房子，后来第一批年轻人开始去电子厂等工厂打工，开始盖一些水泥的平房；再一辈人出去做农民工，在建筑工地上干活，他们提着桶、背着被子就出发了，过年的时候也是同样的状态回来，可能几年之后，房子逐渐变成两层楼；目前应该是第四代，房子越来越气派了，成了大别墅。我对家乡变化的感知主要是通过房子的变化。<strong>但是同时，房子里没有什么人了，只有老人在家。</strong></p><h2 id="文学的意义是抵抗人类遗忘的天性"><a href="#文学的意义是抵抗人类遗忘的天性" class="headerlink" title="文学的意义是抵抗人类遗忘的天性"></a>文学的意义是抵抗人类遗忘的天性</h2><p>因为时间是滔滔而过的，它确实是会抹杀掉所有的东西，但是我希望我和我的村庄留下来。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>猫的社会学</title>
      <link href="/2024/02/21/%E7%8C%AB%E7%9A%84%E7%A4%BE%E4%BC%9A%E5%AD%A6/"/>
      <url>/2024/02/21/%E7%8C%AB%E7%9A%84%E7%A4%BE%E4%BC%9A%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>今晚上楼遇见一只小黑猫，怯怯地缩在我家门口，叫了一声。抱着看热闹的心态开了门放出缪缪，一转身小黑猫不见了踪影。</p><p>缪是同往常一样急不可耐地往楼顶跑了，到它爱打滚的地方却放慢了脚步。它身前是一只废弃的红木柜，我瞬间意识到小黑猫在柜下阴影中。</p><p>缪的尾巴膨大了。它直直地盯着那片漆黑，发出了平常我们无缘得见的嚎叫。紧接着又是数声猫叫和喘气声，我亦无以辨清是哪只猫发出的。</p><p>直到被抱回家前，缪都保持着同一姿势与黑猫对峙。一回家它立马对妈妈发出了熟悉的、嗲嗲的撒娇叫声，可它仍旧蓬松的尾巴昭示着它不轻松的心情。</p><p>希望有一日缪能与我分享猫的社会学。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>情骨</title>
      <link href="/2024/02/21/%E6%83%85%E9%AA%A8/"/>
      <url>/2024/02/21/%E6%83%85%E9%AA%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>歌姬：赤羽&amp;苍穹；调校：坐标；作词：椿庭；作曲&#x2F;编曲：喻川 空耳：Antares</p><p>《烈火浇愁》同人曲，发布于2020-6-23 读过原著，但没看过原歌词；歌，循环过很多次。</p></blockquote><p>轻舟红尘漫漫 万千灯盏 梦萦寒潭 渺春风何处安 是清欢</p><p>过眼韶光 荏苒 三杯浊酒 一梦千年 生离别尘世间 从此百味不沾身 沉眠</p><p>何忧恃人间的空茫 何忧恃情人的相忘 转笑颜又纵身跃 卷梨香 绕指尖 惊魂不见故人影 灯华又现远渡临 难相见</p><p>忆执手相依 旧梦夜阑 望余生中 有生别离 有情寸断 踏尘路三千 何人入梦 心贪恋 浮船起落 难相见 谁成全 若朝夕不改 天涯路断 若此心无悔 情永寿 不入忘川 纵天地何惧 赤火成舟 扬帆渡远 愁难靠岸</p><hr><p>大梦恍然如昨 秋月照影 远山辽阔 渺渺人间烟火 曾执着</p><p>沧海桑田 几番 万盏灯华 堪寒梦断 人有和月有圆 凄清一色共沉沦 心安</p><p>山为山盟心为海石 痴人痴心情难已 书同途回共饮生死 叹此生 梦朝夕 独身离索几世孤寂 有心难抑 有情难已 是相思</p><p>忆执手相依 旧梦夜阑 望余生中 有生别离 有情寸断 踏尘路三千 何人入梦 心贪恋 浮船起落 难相见 谁成全 若朝夕不改 天涯路断 若此心无悔 情永寿 不入忘川 纵天地何惧 赤火成舟 扬帆渡远 愁难靠岸</p><hr><p>冕服十二旒 白玉路往 芳山凄清也好似 秋火苍苍 独临飞絮雪 有情比肩 自狂妄 半盏浇愁 十指牵 此生长</p><p>红梅枝几重 不闻梨香 小楼惯听风 执子手 再难相忘 霜花别久寒 踏斥一生苦乐愁肠 情长未央</p><p>冕服十二旒 白云落往 芳山凄清也踏四方 秋火苍苍 独临飞絮雪 有情比肩 天自狂妄 半盏浇愁 十指牵 此生长</p><blockquote><p>写完空耳看了一眼原歌词，大为震撼，这里就不贴上了：D</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 悦乐 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>S.忒修斯之船</title>
      <link href="/2024/02/21/s-%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9/"/>
      <url>/2024/02/21/s-%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="S-忒修斯之船"><a href="#S-忒修斯之船" class="headerlink" title="S.忒修斯之船"></a>S.忒修斯之船</h1><h2 id="阅读之前"><a href="#阅读之前" class="headerlink" title="阅读之前"></a>阅读之前</h2><p>奇怪的寻书旅径：太阳照常升起→刘心武→忒修斯之船，本打算花109购买，一查图书馆竟然有，赶忙借来，若能在回家前看完可谓妙哉。收藏价值也是有的啊。</p><p>《s.忒修斯之船》是一本少见的互动类书籍：其上有4人的批注，纸张刻意做旧。</p><p>竟然在考前看入了迷……只能说对话体对于碎片化读者来说太容易了。</p><p>但是如何从对话体提取有趣的信息？</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>书中提到的“作家人选”：</p><p>瑞典童书作家托斯滕·埃斯壮，苏格兰哲学家麦金内，西班牙小说家费拉拉，美国低俗小说家萨默斯比等等，均为虚构。但来自各个不同的国度，有各自明确的特征。</p><p>不觉得在电脑上写读书笔记是对“最美纸质书”的不尊重吗？好吧，没关系的，都一样。</p><p>埃里克最初留下的笔记多数客观陈述，少数带发泄情感性质。珍留言后，对话形成，他的形象主观性更强了。</p><p>驳回。埃里克写给自己的笔记主观到了极致，他本人也自傲，其中一些甚至显现出了客观性。</p><p>爱伦坡的《大漩涡历险记》，批注的原话送还：作者极其喜爱虚构作家及其作品，为什么在这里竟提了真实的人物和书？</p><p>充满暗语的悬疑书。</p><p>珍和埃里克的关系，与石察卡和柯岱拉的关系，不是很相像吗？合作的笔友，从未谋面（原因都是“男方”不愿意）。</p><p>石写完一章，给石译，再写，再译。如此交流。（表面如此。）</p><p>珍和埃里克交流得更频繁，靠留言。</p><p>于是提供了一条新的思路：观察珍、柯，埃、石之间的共鸣点和共鸣次数。</p><p>啊呀，我先和石共鸣了。</p><p>“只要心里想到任何字句他都会说出口，然后追随者联想的轨迹直到走进死胡同，每次都是如此。他会猛然捕捉住浮现于脑海的极少数影像—……—但这些都只是各自独立的画面，来自一部不存在的电影。”</p><p>批驳：</p><ol><li>作家写的东西不全然和本人有关。<ol><li>反批驳：然而作家写不出认知以外的东西，不是吗？也许应该复核一下马原的“不可知论”。</li></ol></li><li>读书的主要目的不应该是寻求认同感吧。探索别人的世界，重点是看不同的东西。</li></ol><p><strong>罗夏克墨迹测验：</strong></p><p>罗夏墨迹测验（Rorschach Test）是国际上著名的人格测验之一。它与人格问卷或量表不同，使用的材料是十张墨迹图形。施测时让被试顺序自由地观看每一张图，并讲出所看到地东西以及如何看出的，然后使用符号对被试的回答进行分类编码，再经过对编码的分析和综合，进而获得人格的信息。</p><p>罗夏测验在1921年被首创，当初设计的目的是用来诊断精神分裂症的。</p><p>罗夏测验是一个知觉过程，而不是一个联想过程，施测目的是让被试报告看到了什么，而不是联想到了什么。随后在记录被试反应时，要求必须逐字逐句地记录下来。因此需要经过练习学会速记。</p><p>“宛如罗夏克墨迹测验图案的木纹”，拥有怎样经验的作者会写出这样的话？</p><p><img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/9f3e7e70-2222-46b8-9bb7-397ec648e50b/90acf70f-b17b-4c68-b26f-0156fbffeecc/Untitled.png" alt="Untitled"></p><p>Oops!</p><p><strong>普莱费尔密码：</strong></p><p>Playfair cipher或 Playfair square，使用一个关键词方格来加密字符对的加密法，1854年由一位名叫查尔斯·惠斯通（Charles Wheatstone）的英国人发明。</p><p><em>密钥：</em></p><p>①构造一个基于5×5的字母矩阵</p><p>②该矩阵使用一个关键词（密钥）来构建</p><p>③然后从左到右、从上到下；依次填入密钥的字母（注意：密钥中重复的字母不填），然后再以字母表顺序依次填入其他字母</p><p>④字母 I 和 J 算作一个字母</p><p><em>加密：</em></p><p>①明文两两分组，落单或相同填充z。</p><p>②同行、同列的明文则向右、向下位移一位得到的字母作为密文输出；</p><p>③不同行不同列的明文则取其同行同列交互的字母作为密文输出。</p><p>④若关键词（密钥）中出现相同的字母时，则需要去掉重复的密钥（如果有重复则跳过）。</p><p>奇怪。S. “翌日醒来”，看到的仍是“右舷舷窗射入的夕阳光束”？右舷和夕阳出现的次数略多。</p><p>星座是恒久宇宙，比记忆更漫长的。若它比思维更活跃，那确实令人警惕。</p><p>左舷出现了。双桅船，希望的象征。右舷是保守的过去，左舷的明快的未来？</p><p>假装自己是学者，对于资料来源小心求证……</p>]]></content>
      
      
      <categories>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书 </tag>
            
            <tag> 对话 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索拉里斯星</title>
      <link href="/2024/02/21/%E7%B4%A2%E6%8B%89%E9%87%8C%E6%96%AF%E6%98%9F/"/>
      <url>/2024/02/21/%E7%B4%A2%E6%8B%89%E9%87%8C%E6%96%AF%E6%98%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="索拉里斯星"><a href="#索拉里斯星" class="headerlink" title="索拉里斯星"></a>索拉里斯星</h1><h2 id="序言：冷峻的折光"><a href="#序言：冷峻的折光" class="headerlink" title="序言：冷峻的折光"></a>序言：冷峻的折光</h2><p>“……描写外星生命的科幻小说汗牛充栋，但它们大多只停留在表面刻画上，一旦进入心理层面，那些外星人便失去了神秘和光彩，显露出变形地球人的本来面目。而莱姆却不同，在这部想像奇绝的作品中，他笔下的索拉利斯海以一种傲慢的姿态超越了科幻小说中的外星人模式，为科幻小说殿堂增添了一个魅力无穷的外星生命的形象。”</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>关键词</p><ul><li><p>等离子体</p></li><li><p>爱因斯坦-波色理论</p></li><li><p>信息漫游</p></li><li><p>电子脉冲、磁场脉冲、引力脉冲</p></li><li><p>集论</p></li><li><p>控制论</p></li><li><p>赋予意识—杜哈尔特</p></li><li><p>太阳耀斑，超短波报话机</p></li><li><p>罗巴切夫斯基锥体几何和黎曼负弯曲曲率几何学</p></li><li><p>数学对位法合成的乐谱</p></li><li><p>鸵鸟政治</p></li><li><p>青年人的试金石</p></li><li><p>“索拉里斯情结”</p></li><li><p>“我无法超出我自己”</p></li><li><p>任何科学总是求助于伪科学, 求助于伪科学中⻛格独特的对现实的歪曲;天文学求助于行占星术的女巫，化学曾是炼金术。</p></li><li><p>Zweckentfrendungs</p></li></ul><h3 id="《伪经指要》"><a href="#《伪经指要》" class="headerlink" title="《伪经指要》"></a><strong>《伪经指要》</strong></h3><p>“一个正常的人，”他说，“什么才叫个正常的人呢? 是一个从来就没有干过丑事的人?就算他没干过，难道他就没想过?或者他真的连想也没想过，只是不由自主的一个闪念，而且是十年或者三十年前出现的一闪而过的念头，也许这个念头早已褪色，并忘得一干二净了 , 对此他从来就没有担心过，因为他知道，这只是个昙花一现的念头，根本就没有付诸实施。好了，现在你可以想象到了，怎么突然间一下子，光天化日之下，就在人群当中，当时闪念中的 ‘这个’ ，出现在他面前，一副真真切切的肉体，如影相随，死死地缠住他，怎么都消灭不掉，奈何?你能有什么好办法?”</p><p>我们要揭开宇宙之谜，我们就做好了一切准备，这就是说, 我们做好了忍受寂寞的淮备，奋斗的准备，也准备殉难和死亡。出于谦卑我们没有大肆声张，但我们有时确实在想,我们很了不起。然而，这并不是全部，我们所显示的这些意愿只不过是虚张声势而己。我们根本就不想征服宇宙,我们只是想最大限度地延伸地球的边界。</p><p>……</p><p>我们博爱且又尊贵，我们不想征服其他人种，我们只想向他们传播我们的价值，并作为回报，接收他们的全部遗产。我们自认为负有交流的神圣使命，一种骑士气概。 这又是一个谎言。我们寻找的是人，而不是人以外的存在。 我们并没有人以外的世界的需要。我们需要的是人自己的镜子。对其他的世界我们无从着眼，摸不着门道。我们由这个世界而来，也窒息于这个世界。我们想寻找按我们的样式理想化出来的图像; 我们寻找一颗星球，寻找一种文明，比我们的星球、我们的文明更完美，我们希望在其他星 球找到的，是以我们的蒙昧过去为原型的东西，它也许已进入更高的进化阶段，但它也一定是基于与我们文明中一样的进化原则。可是另一方面,对那些我们不能同意的东⻄，我们就会奋力反击，最后就只剩下了我们从地球上带来的纯粹地球的纯粹美德，人类的英雄主义的功德碑!我们就是受这一道德的指引⻜到这里，我到了这里就是要实现这一目标，可是另一方面，当真理显示出来时，我们却要隐瞒真理，我们不能忍受不同于我们的真理!”</p><h3 id="《思想家》"><a href="#《思想家》" class="headerlink" title="《思想家》"></a><strong>《思想家》</strong></h3><p>我们，我们是普适的，一切都应该像我们这样，我们自以为是宇宙之草，我们要把我们的普适之草播撒到全宇宙，我们的想法是，宇宙的所有地方都要采用我们习以为常的东西。我们就是基于这种模式才勇敢而又兴奋地奔赴远方的：看，另一个世界!这下好了，另一个世界是什么意思?我们征服它或者被它所征服，我们这颗多灾多难的倒霉的脑袋里就没有装别的东⻄，啊，这有什么意义。完全没有意义。</p><p>接下来就跳起了圆舞曲，又回到了最初假说的始点 :老掉牙的又成了新鲜的，只做了一点皮毛的变化，在细节上面再发挥一些，或者走相反的路，把单纯的东西复杂化，使其更加具有歧义性，这样一来，原本虽然范围广阔但却一目了然的索拉里斯学却越来越卷入到到处都是死胡同的拉比伦宫中。在日益普遍的迟钝、郁积和素然无味的气氛中，好像纸张上的那个沉问得要死的第二个大洋一直伴随着素拉里斯大洋，挥之不去。</p><p>然而，所有这一切知识都是不可转释的，无论谁，如果他根据自己的好恶把它翻译成地球上的语言的话，那么，所有寻索和探究它的价值和意义就会丧失殆尽，留下来的只是地球语言自身的价值体系和认知体系。</p><h3 id="《梦》"><a href="#《梦》" class="headerlink" title="《梦》"></a><strong>《梦》</strong></h3><p>要这样做就只有一个办法，把我经历的所有梦 境都尽可能地挤出来，但即便这样也只能记录整个梦境的一部分，这就不可避免地丧失掉整个梦境的震撼人心之处。</p><h3 id="《老拟态》"><a href="#《老拟态》" class="headerlink" title="《老拟态》"></a><strong>《老拟态》</strong></h3><p>“的残缺…” “不，”我打断他说，“对我来说，一个神的不完满并不是因为创造它的人赋予了它太多的朴素，而是因为这种不完满就蕴含在它内在的本质特征中。 一个神的有限性就体现 在它的无所不知、无所不能，体现在这个神在其作品中缺乏的对末来的预见，这个神所预见的现象，随着时间的流逝， 连这个神自己都惊慌不已。这是一个⋯⋯有残缺的神，它的欲望和胃口总是超出它的能力，但它又没有自知之明 ，不能很快就意识到这一点。一个神，它造出了钟表，但没有可量度的时间。它造出的自然构造或者动力学都服务于特定的目标; 但它们往往会过于膨帐，超出自己的目标，从而背 叛了自己。它总是臆造无限，这个无限性仅仅是它基于自己的能力的尺度, 用于衡量它无休止的失败⋯</p><p>这种形体在如此沉湎于自己的情况下，还能设法如此迅速地辨识和把握新的、无意间碰到的陌生形态，而且到了半途就不屑一顾了, 这己经是通过什么神秘的规律所不能解释的了。多么不可思议的交往–在易于挑起的好奇和光泽无极、无所不能的巨物之间!我还从来都没有像现在这样感受到它存在的无岸的巨大, 它的强大, 它的绝对的沉默,这种在波浪的涌动中有规则地呼吸的沉默。沉思，惊骇，我沉浸在这永恒不动的似乎根本无法企及的领域中，在不断强化的自我遗忘中，我与这液态的、盲目的巨型怪物耦合为一体，我仿佛不费吹灰之力，毋需只言片语，不必通过任何想法就与之耦合到了一起。</p><p>可是，我内心中确实还对此残留着某种最终的东⻄:期待。回应我的期待的，是圆满?还是又一场玩笑? 还是新的痛苦?我一无所知，我只是死死咬定了一个坚不可摧的信念，种种<strong>残忍的奇迹频仍的时代</strong>还没有过去。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">扎可帕内，1959 年6 月一1960 年6 月</span><br></pre></td></tr></table></figure><h3 id="《译后记》"><a href="#《译后记》" class="headerlink" title="《译后记》"></a><strong>《译后记》</strong></h3><p>希腊哲学为母体的“人类”概念：</p><p>统合在希腊哲学尺度中的人才有了共同的类的概念，而随着希腊哲学在近代欧洲的复兴和 放大，出现了以近代科学为核心的⻄方文明，以及⻄方文明 的全球化，并在接受了以希腊哲学为母体的“人类”概念的情况下，对地球上其他精神存在的方式和价值体系构成了挑战，在这种挑战和冲突中有了种种刺耳的说法，如“欧洲 中心主义”“西方中心主义”“遇各斯中心主义”等等。这些说词产生于人种的比较中，产生于文化单元的比较中，不管在这些比较中生产出多少差异，它们仍然是“ 人” 与人的游戏方式。而在“ 人” 与非人的游戏中也生产出了“ 人类中心主义” 的说法 。</p><p>人已经失去了发现新大陆时的奇异的陌生力量，在共同的解释系统和话语方式中，人已经完全同质化了,不仅异国情调褪色了，而且诸种基于历史积淀的神秘感也黯然失色。地球上已经没有什么神秘的东⻄可以停泊 “ 人类” 的寄托。</p><ul><li>人被禁锢在人的世界和人的世界的延伸中。</li><li>若即若离的中性拥有。</li></ul><p>您有过话语解放的冲动吗?您有过人类自我超越的挣扎吗?您在地球云层的包围下，在琐屑的社会事务、生存事务的日常纠缠中，有过眺望无际星空的冲动吗?您在聆听地球人关于地球人的价值体系、信仰体系、政治经济体系的高谈阔论时，心头曾內过一丝的悲凉吗?您在目睹和经受 了地球人生生死死的欢欣与悲哀时，曾经萌生过解脱缠绵红尘的郁网吗?</p><p>《索拉里斯星》会给予您解答吗？</p>]]></content>
      
      
      <categories>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书 </tag>
            
            <tag> 幻想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白色绵羊中的黑色绵羊</title>
      <link href="/2024/02/21/%E7%99%BD%E8%89%B2%E7%BB%B5%E7%BE%8A%E4%B8%AD%E7%9A%84%E9%BB%91%E8%89%B2%E7%BB%B5%E7%BE%8A/"/>
      <url>/2024/02/21/%E7%99%BD%E8%89%B2%E7%BB%B5%E7%BE%8A%E4%B8%AD%E7%9A%84%E9%BB%91%E8%89%B2%E7%BB%B5%E7%BE%8A/</url>
      
        <content type="html"><![CDATA[<blockquote><p>京东读书专业版可阅读。</p></blockquote><p>作为一名写作者，你看见了什么？</p><h1 id="白色绵羊里的黑色绵羊"><a href="#白色绵羊里的黑色绵羊" class="headerlink" title="白色绵羊里的黑色绵羊"></a>白色绵羊里的黑色绵羊</h1><h1 id="谈小说"><a href="#谈小说" class="headerlink" title="谈小说"></a>谈小说</h1><h2 id="读先于写"><a href="#读先于写" class="headerlink" title="读先于写"></a>读先于写</h2><p><strong>余华</strong>，叙述的高速公路；放下书去写作的冲动。</p><blockquote><p>想起了所谓同人的“巧合羁绊写作法”。 原文大意是说在同人一类作品当中，逻辑和常理都为羁绊弯腰服务。我擅自加上了手段：“巧合”。</p></blockquote><p><strong>《水浒传》：</strong></p><p>林冲：被命运推着走</p><p>动词像一根根骨头一样，使小说有质感，有力量。</p><p>武侠；中国社会日常生活</p><p><strong>海明威：</strong></p><p>站着写作。简练。</p><p>“冰山”，你藏起来不是因为你不知道，是因为你知道，才把它藏起来。因为不需要写出来，你所创造的世界才有了一种巨大的空间感，一种确凿的但读者却无法完全可知的底座，这就引起了读者的参与和思考。</p><p>“一个东西倘若不是和任何别的东西相依赖而存在，就不能说它真的存在。”</p><p>文学史编造的假象</p><p>片段速写式的写作。</p><p>福克纳，海明威：巴洛克建筑与光秃秃的石碑。</p><p>这个想法暗藏在我心里很长时间，一直想要跑出来，直到看到这个小说才找到了钥匙。</p><p>少年进入成人世界</p><blockquote><p>如此便启发我，可在我那《反色时代》中描写“成人进入少年世界”，恰好老爸这个人物原型也现成。</p></blockquote><p>“招魂”</p><h2 id="灵感捕手"><a href="#灵感捕手" class="headerlink" title="灵感捕手"></a>灵感捕手</h2><p>小说无时无刻不在反映过往的积累和现在的想法。</p><p>“小说就是我的日记”</p><p>没有被看到比没有被承认更可怕，心里有一种感伤。</p><blockquote><p>这就是我做博客网站的原因。</p></blockquote><p>一个小说家，他没有选择诗的方式表达自己，他也没有选择用写新闻的方式表达自己，他也没有选择用音乐、用绘画的方式表达，他用一个故事的方式表达自己，就说明这个人某种程度上具备用故事的载体去表达自己的能力，或者说至少是爱故事的，他愿意用故事这种虚构的方式去表达自己，去承揽自己的这些情感，去给出自己的疑问。</p><p>小说的开头随意还是精妙，因人而异。</p><h2 id="故事之外"><a href="#故事之外" class="headerlink" title="故事之外"></a>故事之外</h2><p>故事本身是载体，其外的氛围等也重要。</p><p>短篇小说是世界的比喻句，是一个大的比喻句；而诗是短促的比喻句。</p><p>契诃夫《醋栗》</p><p>塞林格《为埃斯米而作—既有爱也有污秽凄苦》，春天的暖风</p><p>e.g. 直接引语和间接引语的巧妙运用</p><p>《跷跷板》：以一种氛围开启，然后在写的过程中慢慢发现每个人物的个性和故事的情节。</p><h2 id="小说的引擎"><a href="#小说的引擎" class="headerlink" title="小说的引擎"></a>小说的引擎</h2><p>人物关系</p><p>它要制造出一种紧张，好像要有什么事情发生。</p><p>相遇</p><p>魅力</p><h2 id="小说并不模仿生活"><a href="#小说并不模仿生活" class="headerlink" title="小说并不模仿生活"></a>小说并不模仿生活</h2><p>小说这个精神世界和现实世界没有直接的临摹关系。</p><p>创造而非记录。</p><p>你大概握住这个人物的重要把手后，之后你就尽其所能地写吧。</p><p>厄休拉《黑暗的左手》：事实其实是想象的产物。事实能否取信于人，取决于讲述的方式。</p><h2 id="人物非人亦非物"><a href="#人物非人亦非物" class="headerlink" title="人物非人亦非物"></a>人物非人亦非物</h2><p>而“我自己”这三个字，本身也很复杂，每个人都有很多个自己，比如你见到父母时的自己和你见到喜欢的人的时候的自己就很不一样，从这个角度说，面对文学时候的“自己”肯定也是很不一样的一个。</p>]]></content>
      
      
      <categories>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仙人抚我顶</title>
      <link href="/2024/02/21/%E4%BB%99%E4%BA%BA%E6%8A%9A%E6%88%91%E9%A1%B6/"/>
      <url>/2024/02/21/%E4%BB%99%E4%BA%BA%E6%8A%9A%E6%88%91%E9%A1%B6/</url>
      
        <content type="html"><![CDATA[<p>“修仙”是这样的一座桥梁，横亘在过去与未来之间。 其中人物的长寿、异能，更像是把现在的事解释给古人听。 然而其余能力，如御剑飞行，把一些外在的东西内化到人自己身上了，是对未来最简易的祈望。</p><p>正如诠释学是语言体系的转换，修仙小说这种类型文学亦是一种转换器。它联古通今，修生复死，</p>]]></content>
      
      
      <categories>
          
          <category> 读罢有感 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>归乡</title>
      <link href="/2024/02/21/%E5%BD%92%E4%B9%A1/"/>
      <url>/2024/02/21/%E5%BD%92%E4%B9%A1/</url>
      
        <content type="html"><![CDATA[<p>乘载着不同的载具，归乡。新时代的乘汽车等，归得快；旧时代者乘马匹等，归得慢，且需回到更遥远的故乡。所有事物都在奔驰，包括大地，星辰……回到它们最初的原点。 “移步换景”。如进入洗手间，时代倒退五年，事物新颖度退回五年。 人们不知不觉随之倒退，恍惚地窥见未来。 其中敏锐者，或欲正行。</p>]]></content>
      
      
      <categories>
          
          <category> project </category>
          
          <category> 反色时代 </category>
          
          <category> 系列 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如梦幻泡影，如露亦如电</title>
      <link href="/2024/02/21/%E5%A6%82%E6%A2%A6%E5%B9%BB%E6%B3%A1%E5%BD%B1%EF%BC%8C%E5%A6%82%E9%9C%B2%E4%BA%A6%E5%A6%82%E7%94%B5/"/>
      <url>/2024/02/21/%E5%A6%82%E6%A2%A6%E5%B9%BB%E6%B3%A1%E5%BD%B1%EF%BC%8C%E5%A6%82%E9%9C%B2%E4%BA%A6%E5%A6%82%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<p>本篇推荐bgm：The Planets, Op. 32:4. Jupiter, the Bringer of Joy (霍尔斯特：行星组曲）</p><blockquote><p>纵然有愧，其行无亏。 此文亦可追溯至高中文，《似有大悲之意》，因无合适的题目提供机会而并未写出。 但借助考试作文契机临摹无形之物本就是无奈和愚钝之举。倒不如求知于实践与书籍。 如Oscar Wilde所言：”Art is quite useless.”</p></blockquote><p>每当读完一本书、看完一部电影或是完整欣赏过其他形式的艺术作品后，一种难言而强壮的悲怆感便涌上心头。仿佛一位旧友的故事就此终结，而回忆尽头的你除随波逐流、脱离梦境外别无选择。这类情绪体验在马斯洛的体系中被称为“高峰体验”，在现代理论中被称为“心流”。简而言之，这是一段短暂的自我实现。</p><p>它短暂、可贵，飘忽难定。但这也许是可被掌控的。</p><p>出于此状态的人充满创造力。《群山之声响彻寰宇》是典型的无外因“心流”产物。</p><p>而有外因的心流好比登山过程。阅读即是山路上的艰难险阻，瞬感即是</p><hr><p><strong>附</strong>：23.6.22所记</p><p>误差是一切所谓悲剧的起源。我脑中划过的一道闪电，表述出来需费如此多额外的精力！本可用来思考的神经，就这样耗在遣词造句上。 必需发展脑科学。 我们之间的隔阂不只是诗意化的描述。</p><p>这不代表你应否认未来的可贵。 你不应因未来的可贵而否认现在……它可能不会在未来再发生，尽管未来满是可能性。</p><p>我是个挖星星的人……不断把这些思想从地底挖出，为它的光辉痴迷刹那，它便飞往星空……此后我鲜少有喘息窥天之机，星星也在未来的我眼中模糊暗淡……是否能挖到星星也取决于偶然……</p><p>正因近地悬浮的轻舟没有载荷，才走的那样顺畅，走的那样远……可是如果想突破，记忆这种累赘是必须的吗？除非足够快，一下冲得足够远……我的轻舟就能一瞬间达到时间累成的高塔的效果。</p><p>这样的随机会让我觉得我是自由的。也没有画地为牢地局限自己。真是矛盾。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远绪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>戴锦华：历史与人民的回忆</title>
      <link href="/2024/02/05/%E6%88%B4%E9%94%A6%E5%8D%8E%EF%BC%9A%E5%8E%86%E5%8F%B2%E4%B8%8E%E4%BA%BA%E6%B0%91%E7%9A%84%E5%9B%9E%E5%BF%86/"/>
      <url>/2024/02/05/%E6%88%B4%E9%94%A6%E5%8D%8E%EF%BC%9A%E5%8E%86%E5%8F%B2%E4%B8%8E%E4%BA%BA%E6%B0%91%E7%9A%84%E5%9B%9E%E5%BF%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>summary 人民消失于影视之中。</p></blockquote><h2 id="历史-人民-记忆"><a href="#历史-人民-记忆" class="headerlink" title="历史 人民 记忆"></a>历史 人民 记忆</h2><p>投眼于未来，对现实失望，对是否有未来怀疑？</p><p>难道不是人类历史上第一次现代技术，从数码转型到生物学革命，我们正第一次问鼎死亡吗？不是第一次人类在尝试战胜死亡吗？</p><p>因为伴随技术革命而来的是前所未有的环境危机和能源危机，共享的美好世界不能达成了。</p><p>那么当带着危机意识去展望未来时，历史的作用前所未有地显现。</p><p>因为没有什么是凭空产生的，没有什么未来是会从虚无中降临的。它永远是昨日、历史的一个必然的延申。</p><p>大历史“文明观”—历史概念：伴随着帝国主义、殖民主义的全球战略产生。</p><p>文明观本身是一种等级观。文明观建立了一种用似乎时间的表达来规划空间的想象。</p><p>今讲具体的历史。20世纪的历史。</p><p>20世纪的中国：蜕变、畸变、血与火。</p><p>郭沫若《凤凰涅槃》：焚烧，投身火中，化为灰烬，重生飞起。</p><p>然而每一次我们烈火焚身的时候，我们并不知道，我们能不能重生。我们也并不知，在灰烬中重生的，会是一只凤凰，还是一个恐怖的幽灵。</p><p>20世纪的世界：世界大战把全球化的事实显影出来了。</p><p>奥斯维辛、广岛、南京。惨烈，乌托邦的沉沦。信仰碎裂。</p><p>冷战。世界一分为二。</p><p>胜者是主导了世界的欧美的自由资本主义，败者是东方阵营，社会主义阵营？</p><p>施隆道夫：胜者是自由市场，是资本；败者是全球人民！</p><p>苏联之死代表几百年来人类别样的理想，实现公平正义的社会实验的全面失败。</p><p>短暂的20世纪。</p><p>“世纪末”：19世纪末，然而很多内容在20世纪初发生—19世纪的结构延伸到20世纪的开端。</p><p>20世纪的结束：20c90s，冷战终结了。</p><p>军事对抗终结了，理想实验失败了，我们都置身于这个整体胜利或者大失败的历史回旋当中。</p><p>哥伦布发现新大陆后，全球处于互动当中，无任一国家的解释可自封于国境线内。</p><p>以现代资本主义的逻辑，鸦片战争是野蛮对文明的征服、弱智对强者的征服。</p><p>而_我在想，如今的孩子们沉浸在游戏、追星、短视频当中，也是野蛮对文明的征服后果之一吗？_</p><p>20世纪的中国经历了世界历史上所有样式的革命。</p><p>革命是摧毁后重建。革命不是改良，革命不是延续，革命不是温和的变革，革命是暴力的，革命是极端的。</p><p>“大时代”</p><p>“中国道路论”。戴认为，这与我们20世纪的这一次熔毁紧密联系。</p><p>人民，people。</p><p>公民&lt;人口</p><p>中国，城乡二元制：农民不享有公民权。</p><p>美国：公民权以大于公民数的人口基数为基础实施。美国国土上的第三世界。</p><p>人民是一个历史概念。不是对多数人的正面称呼。</p><p>人民因履行历史主体和国家主人的权利而存在。是关于一种政治想象，政治实现，关于这个国家的多数在这个国家的政治结构中所处的地位。对应着政治参与和政治权力。</p><p>“人民”的概念连接着劳动者、生产者。</p><p>那么在影视中劳动、生产如何蒸发了？</p><p>如果大家从事的都是非物质劳动、非物质生产，那么物质从哪里来？还有没有人在土地上耕作？</p><p>20世纪颠覆了包含劳动生产的“人民”概念。</p><p>福柯：</p><p>二战后~20c70s，拍法西斯的电影塑造的纳粹形象：极佳的人文修养+心理疾患（性变态）</p><p>纳粹法西斯主义的性爱化是回避两次世界大战是资本主义内部矛盾无法回避的结果。将其转移为某种浪漫的而残忍的事实。</p><p>福柯认为，这描绘的不是记忆，而是历史。历史书写的意义在于阻断、抹去、改写人民的记忆。</p><p>历史不是真实，历史不是真理，历史从来不是客观真实的记述，历史是什么？历史是胜利者的清单。</p><p><strong>所有历史都是当代史。</strong></p><p><em>这和我“用当下、个人的话语体系来囊括其他”的观点一致。</em></p><p>经历历史的自我感知。</p><p>历史涂抹记忆的过程是多么剧烈，多么有效。</p><p>“父母能够津津有味讲出的版本完全吻合于主流叙事的版本。”</p><p>电影作为大众文化、文化工业，当然它是在历史这一边的。</p><p>那么∵20世纪的中国经历了世界历史上所有样式的革命</p><p>∴我们拥有不同的胜利者为不同的政治需要写下的历史文本。</p><p>这些交织的文本能帮助我们倾听众声喧哗之下的窃窃私语。</p><p>E.P. Tomthon — 历史是倾听无声处的声音。</p><p><em>看到这时我突然感受到S.忒修斯之船的魅力所在了。从繁杂隐晦的信息中挖掘“真实”的历史（真相）。</em></p><h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h2><p>不愿被绑在“学科战车”上的人。</p><p>人文社科：通过多种媒介去触摸真实。</p><h3 id="英雄和人民"><a href="#英雄和人民" class="headerlink" title="英雄和人民"></a>英雄和人民</h3><p>我们怎样地在一个连续的历史当中自我断裂。</p><p>《白毛女》《红高粱》《董存瑞》</p><p>今天的底层，我们的工农兵，曾是绝对的主角，因为他们是人类历史的发动机和动力。</p><p>今天历史书写的策略之一是以历史考据和历史真实和客观为名，去重新改写和操控那段历史。比如董存瑞到底有没有喊：“为了新中国前进！”</p><p>董存瑞是英雄，也是人民。</p><p>包含了一个真实的成长（接受现代文化教育、阶级启蒙）故事。</p><p>阶级意识：当你第一次把自己和更广大的人群、历史的进程联系在一起，你成为了人民中的一员。成为了英雄。（历史唯物主义）</p><p>国际主义：我们如何冲破自己的皮囊。</p><p>中国电影：英雄成长的故事。</p><p>背叛：背叛自己的阶层，自己的利益集团。</p><p>生物趋利避害，人性舍生取义。</p><p>今天是极端利己主义合法化的年代。但在那个年代，纯粹的利他是广存的。</p><p>今天我们用“人性”来解释很多社会性问题，但我们实际使用的是“动物性”。人之所以区别于动物，正是因为那些超越性价值的存在。</p><p>“那个”社会实验并不必然失败；但胜利者们把它记载为必然失败。</p><h3 id="干群关系"><a href="#干群关系" class="headerlink" title="干群关系"></a>干群关系</h3><p>党和人民的关系。革命党→执政党，有连续和断代。</p><p>拯救者和被拯救者。</p><p>政治断代化：越来越教条的单一想象—共产党作为启蒙者、救助者，成为了描述历史、想象历史的参数。但党和人民互为历史主体，互为拯救者。大地之母的儿子：当他脱离大地，他就什么都不是。</p><p>电视剧红旗谱：红色经典的重拍怎样构成一个内在的反转和颠覆。埋葬式。</p><p>“颠倒颠倒的历史观的历史观”</p><p>人特殊的生命经验造就他如今的气场。“有机知识分子”</p><p>人民试图把握自己的命运，进而试图把握历史和创造历史的故事。</p><p>1970，尼克松访华。</p><p>改革开放</p><p>80年代：最重要的十年，承接50-70的某些特征，但终如破堤之水冲破了旧结构。</p><p>《黄土地》：共产党宣传片vs反共电影？</p><p>“爱上外来者”：一个全新的世界，全新的希望</p><p>庄稼人的规矩—宗族社会的规矩+公家人的规矩—共产党军人的规矩。</p><p>没吃没喝唱欢乐vs有吃有喝写烦恼。</p><p>Structure of feeling，情感结构。</p><p>罗中立的父亲。</p><p>“但是他无从改变的是这个世界的结构。”</p><p>激越而空洞的革命歌。</p><p>与历史无关的主人公突然连接上了历史（通过民族、国家）</p><p>自此人民的形象消失于电影之中，取而代之的是某种修辞，比如“小资”，比如“80后”，“90后”。</p><p>90年代以来，各种各样的阶层，各种各样的社会群体开始盗用“多数”的名义。他们最真实的身份是消费者。他们盗用了社会主体的位置。</p><p>曾经的社会主体，劳动者，生产者隐入了艺术电影之中。然而艺术电影频被批是“反电影”的。且其中多数是三产。</p><p>《钢的琴》仍然是物质的非物质生产。</p><p>皮克提：随着20世纪的结束，我们正快速地倒归回19世纪。20世纪初资本主义打开的那个上升到阶梯如今关闭了。（阶级分化再加剧）</p><p>如果我们要拥有一个共同的名字去应对资本的剥夺，</p><p>拒绝偿还债务而启动遗产</p><p>中国电影的一个序列形象：今天的底层，大众，民众，当年叫人民，叫阶级，叫历史的主人公，叫国家的主人公，叫创造世界历史的动力。</p><p>不是个人的才能，而是资源的分配。</p><p>工作服原理：“你一穿上工作服，你就隐形了。”被视为空间和环境的因素。你的阶级已被标明在你的外表。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人文 </tag>
            
            <tag> 人民 </tag>
            
            <tag> 网课 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十二讲 文件</title>
      <link href="/2024/02/05/%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AE%B2-%E6%96%87%E4%BB%B6/"/>
      <url>/2024/02/05/%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AE%B2-%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="12-1-文件的概述"><a href="#12-1-文件的概述" class="headerlink" title="12.1 文件的概述"></a>12.1 文件的概述</h2><ul><li><p>标准输入输出</p><ul><li>受限于数据类型，处理数据数量有限，程序结束不保存计算结果。</li></ul></li><li><p>文件输入输出</p><ul><li>可以处理大批量数据，长久地保存计算结果。</li></ul></li></ul><h3 id="文件概述"><a href="#文件概述" class="headerlink" title="文件概述"></a>文件概述</h3><ul><li><p>文件是存储在<strong>外存</strong>（如磁盘）上的数据集合。</p></li><li><p>每个文件通过<strong>唯一的文件名</strong>来标识。</p><ul><li><p>文件路径：指明文件在外存中位置</p></li><li><p>主文件名：遵循标识符命名规则</p></li><li><p>文件后缀（扩展名）：表示文件性质</p></li></ul><p>e.g.<code>D:\\document\\codes.txt</code></p></li><li><p>计算机按文件名对文件进行读写等操作。</p></li><li><p>文件按<strong>数据存储形式</strong>分类</p><ul><li><p>文本文件（ASCII文件）</p></li><li><p>把内存中数据转换为ASCII码，每个字符用一个ASCII码存储。</p></li><li><p>二进制文件</p></li><li><p>把内存中数据按其内存中存储形式不进行格式转换直接存放在文件上。</p></li></ul><p>例：整数123在内存占4个字节，其二进制文件也占4个字节，文本文件占3个字节。</p><p>​ 二进制文件因为与字符没有直接的对应关系，所以不能直接编辑和显示。</p><p>​ 故一般字符型数据以文本文件形式存储。而数值型数据视情况而定，二进制形式比较方便。</p></li><li><p>文件存取方式</p><ul><li>顺序存取</li><li>每当打开文件进行读、写操作时，总是从 文件的开头开始，从头到尾顺序地读写。</li><li>随机存取</li><li>可以通过调用C语言的库函数去指定开始读写的字节号，然后直接对此位置上的数据进行读写操作。</li></ul></li><li><p>C语言文件操作步骤</p><ul><li>定义文件类型指针</li><li><code>FILE *文件指针变量</code></li><li>打开文件</li><li>调用<code>fopen</code>函数</li><li>文件读写</li><li>调用读写函数：<ul><li><code>fgetc, fputc</code></li><li><code>fgets, fputs</code></li><li><code>fread, fwrite</code></li><li><code>fscanf, fprintf</code></li></ul></li><li>关闭文件</li><li>调用<code>fclose</code>函数</li></ul></li><li><p>对文件的处理通过调用标准的输入输出库函数实现。</p></li><li><p>文件操作一般采用：缓冲文件系统“的方式。</p><p><img src="/img/image-20231130092504128.png" alt="image-20231130092504128"></p></li><li><p>C语言文件处理的关键是定义一个<strong>文件指针</strong>，通过该指针对文件进行打开、读写、关闭等操作。</p><ul><li>定义：<code>FILE *文件指针标识符;</code></li></ul><p>如：<code>FILE *fp1,fp2;</code></p><ul><li>FILE是结构体变量，存放每一个被打开文件的有关信息（如缓冲区的状态、大小，文件当前位置等）。使用FILE类型，需包含<code>stdio.h</code>文件。</li></ul></li></ul><h2 id="12-2-文件的打开和关闭"><a href="#12-2-文件的打开和关闭" class="headerlink" title="12.2 文件的打开和关闭"></a>12.2 文件的打开和关闭</h2><p>实质：建立&#x2F;撤销文件信息区和文件缓冲区</p><h3 id="文件的打开：fopen"><a href="#文件的打开：fopen" class="headerlink" title="文件的打开：fopen"></a>文件的打开：fopen</h3><ul><li>函数原型：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FILE *fopen(char *fname,char *mode)</span><br></pre></td></tr></table></figure><ul><li>功能：<ul><li>按照mode规定的方式，打开由fname指定的文件。</li></ul></li><li>参数：<ul><li><strong>fname</strong>：字符指针，指向要打开或建立的文件名字符串；</li><li><strong>mode</strong>：字符指针，指向文件处理方式字符串。</li></ul></li><li>返回值：<ul><li>正常返回：被打开的文件的 文件指针；</li><li>异常返回：NULL，表示打开操作不成功。</li></ul></li></ul><h4 id="c2022：fopen-s"><a href="#c2022：fopen-s" class="headerlink" title="c2022：fopen_s"></a>c2022：fopen_s</h4><p>使用方法如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打开文件</span></span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="type">errno_t</span> err = <span class="built_in">fopen_s</span>( &amp;fp, <span class="string">&quot;D:\\users.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="文件的打开方式：mode"><a href="#文件的打开方式：mode" class="headerlink" title="文件的打开方式：mode"></a>文件的打开方式：mode</h4><blockquote><p>有”r”, “w”, “a”, “+”, “b”, “t”六种模式选择符号。</p><p>r—-read</p><p>w—-write</p><p>a—-append</p><p>t—-text（默认）</p><p>b—-binary</p><p>+—-read+write</p></blockquote><p>mode</p><p>r</p><p>以<strong>只读</strong>方式打开文件，该文件必须存在。</p><p>w</p><p>打开<strong>只写</strong>文件，若文件存在则清除内容，若不存在则创建该文件。</p><p>a</p><p>以<strong>追加</strong>方式打开<strong>只写</strong>文件。若文件不存在，则会建立该文件；若文件存在，写入的数据会被追加到文件尾后。</p><p>r+</p><p>以<strong>读&#x2F;写</strong>方式打开文件，该文件必须存在。</p><p>w+</p><p>打开<strong>可读&#x2F;写</strong>文件，若文件存在则清除内容，若文件不存在则建立该文件。</p><p>a+</p><p>以<strong>追加</strong>方式打开<strong>可读&#x2F;写</strong>文件，若文件不存在，则会建立该文件；若文件存在，写入的数据会被追加到文件尾后。</p><p>rb</p><p>以<strong>只读</strong>方式打开一个<strong>二进制文件</strong>，只允许读数据。</p><p>wb</p><p>以<strong>只写</strong>方式打开或新建一个<strong>二进制文件</strong>，只允许写数据。</p><p>ab</p><p><strong>追加</strong>打开一个<strong>二进制文件</strong>，并在文件末尾写数据。</p><p>rb+</p><p>以<strong>读&#x2F;写</strong>方式打开<strong>二进制文件</strong>，该文件必须存在。</p><p>wb+</p><p>以<strong>读&#x2F;写</strong>方式打开或建立一个<strong>二进制文件</strong>，允许读和写。</p><p>ab+</p><p>以<strong>读&#x2F;写</strong>方式打开一个二进制文件，允许读或在文件末追加数据。</p><p>说明：<strong>t</strong>表示打开<strong>文本文件</strong>，如果不加<strong>b（二进制文件）</strong>，表示默认加了t。</p><ul><li><p>为了程序的通用性，文件名可在程序运行时输入，如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FILE *fp;</span><br><span class="line"><span class="type">char</span> fname[<span class="number">15</span>];</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Input filename:\n&quot;</span>;</span><br><span class="line">cin&gt;&gt;fname;</span><br><span class="line">fp=<span class="built_in">fopen</span>(fname,<span class="string">&quot;r&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>在fopen函数中，若文件名直接给出，路径中的<code>\</code>应写成<code>\\</code>;</p><p><code>fp=fopen(&quot;D:\\Doc\\codes.txt&quot;,&quot;a&quot;);</code></p><p>若文件名在程序运行时输入（如上例），则路径中的分隔符直接输入字符<code>\</code>。</p><p>(input) <code>D:\Doc\codes.txt</code></p></li><li><p>为保证程序正常运行，需对fopen函数的返回值进行检验，以判断文件是否成功打开，形式如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((fp=<span class="built_in">fopen</span>(fname,mode))==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">  cout&lt;&lt;<span class="string">&quot;can&#x27;t open file\n&quot;</span>;</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（该段程序需要头文件stdlib.h）</p></li></ul><h3 id="文件的关闭"><a href="#文件的关闭" class="headerlink" title="文件的关闭"></a>文件的关闭</h3><ul><li>函数原型：<ul><li><code>int fclose(FILE *fp)</code></li></ul></li><li>功能：<ul><li>关闭fp所指的文件，释放fp所指的文件类型结构体变量。</li></ul></li><li>参数：<ul><li>fp：一个已打开文件的文件指针。</li></ul></li><li>返回值：<ul><li>正常返回：0；</li><li>异常返回：<code>EOF(-1)</code>，表示文件在关闭时发生错误。</li></ul></li></ul><p>应养成及时关闭文件的习惯，防止误操作或其他原因丢失数据。</p><p>判断</p><h2 id="12-3-文件的读写"><a href="#12-3-文件的读写" class="headerlink" title="12.3 文件的读写"></a>12.3 文件的读写</h2><blockquote><p>顺序读写：按照数据在文件中的存储顺序读写文件，容易但效率不高；</p><p>随机读写：反之，对任意位置的数据读写、访问。</p></blockquote><h3 id="顺序读写"><a href="#顺序读写" class="headerlink" title="顺序读写"></a>顺序读写</h3><ul><li><p>C语言提供四种顺序读写函数：</p><p>字符读写、字符串读写、格式读写和数据块读写。</p></li></ul><p>函数</p><p>功能</p><p>函数</p><p>功能</p><p>fputc</p><p>向文件<strong>写入字符</strong></p><p>fputs</p><p>向文件<strong>写入字符串</strong></p><p>gfetc</p><p>从文件<strong>读取字符</strong></p><p>fgets</p><p>从文件<strong>读取字符串</strong></p><p>fwritec</p><p>向文件<strong>写入数据块</strong></p><p>fprintf</p><p>向文件<strong>格式化写入数据块</strong></p><p>fread</p><p>从文件<strong>读取数据块</strong></p><p>fscanf</p><p>从文件<strong>格式化读取数据块</strong></p><h4 id="从文件读取字符：fgetc"><a href="#从文件读取字符：fgetc" class="headerlink" title="从文件读取字符：fgetc"></a>从文件读取字符：fgetc</h4><ul><li><p>函数原型</p><ul><li><code>int fgetc(FILE *fp)</code></li></ul></li><li><p>功能：</p><ul><li>从fp所指文件中读取一个字符，并使文件指针后移一个字符位置。</li></ul></li><li><p>参数：</p><ul><li>fp：文件指针，指向要从中读取字符的文件。</li></ul></li><li><p>返回值：</p><ul><li>正常返回：读取的字符；</li><li>异常返回：EOF(-1)。</li></ul></li><li><p>返回类型的说明：用于区分有效数据和输入的结束（EOF）</p><ul><li>若返回类型为char：内存中都是一个字节（无法区分）</li><li>EOF：0xFF</li><li>数据：0xFF</li><li>若返回类型为int：四个字节（正确区分）</li><li>EOF: 0xFFFFFFFF</li><li>数据:0x000000XX</li><li>所以将fgetc函数的返回定义为int类型。</li></ul></li></ul><h4 id="文件结束测试函数：feof"><a href="#文件结束测试函数：feof" class="headerlink" title="文件结束测试函数：feof"></a>文件结束测试函数：feof</h4><ul><li>函数原型：<code>int feof(FILE *fp)</code></li><li>功能：判断文件是否结束；</li><li>参数：fp:文件指针；</li><li>返回值：<ul><li>0：假植，表示文件未结束。</li><li>1：真值，表示文件结束。</li></ul></li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(!<span class="built_in">feof</span>(fp))</span><br><span class="line">&#123;</span><br><span class="line">    ch=<span class="built_in">fgetc</span>(fp);</span><br><span class="line">    <span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不想输出-1的话：</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ch=<span class="built_in">fgetc</span>(fp);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">feof</span>(fp)==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="向文件写入字符：fputc"><a href="#向文件写入字符：fputc" class="headerlink" title="向文件写入字符：fputc"></a>向文件写入字符：fputc</h4><ul><li>函数原型：<code>int fputc(int ch,FILE *fp)</code></li><li>功能：把ch中的字符写入fp所指的文件当前位置处，并使文件指针后移一个字符位置。</li><li>参数：<ul><li>ch：整型变量，内存要写到文件中的字符。</li><li>fp：文件指针，指向要在其中写入字符的文件。</li></ul></li><li>返回值：<ul><li>正常：写入的字符。</li><li>异常：EOF(-1)。</li></ul></li></ul><p><strong>例1</strong></p><p>编程将文件file1.txt的内容显示在屏幕上，同时将该文件中的数字字符复制到文件file2.txt中。</p><p><strong>分析：</strong></p><p>实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp1,fp2;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    fp1=<span class="built_in">fopen</span>(<span class="string">&quot;c:\\file1.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="comment">//只读方式打开file1</span></span><br><span class="line">    <span class="keyword">if</span>(fp1==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;fail to open file1.txt&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>((fp2=<span class="built_in">fopen</span>(<span class="string">&quot;c:\\file2.txt&quot;</span>,<span class="string">&quot;w&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;fail to open file2.txt&quot;</span>;</span><br><span class="line">        <span class="built_in">fclose</span>(fp1);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">feof</span>(fp1))</span><br><span class="line">    &#123;</span><br><span class="line">        ch=<span class="built_in">fgetc</span>(fp1);</span><br><span class="line">        <span class="built_in">putchar</span>(ch);<span class="comment">//文件内容读到内存后显示在屏幕上</span></span><br><span class="line">        <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            <span class="built_in">fputc</span>(ch,fp2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp1);<span class="built_in">fclose</span>(fp2); </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="向文件写入字符串：fputs"><a href="#向文件写入字符串：fputs" class="headerlink" title="向文件写入字符串：fputs"></a>向文件写入字符串：fputs</h4><ul><li><p>函数原型：<code>int fputs(char *str,FILE *fp)</code></p></li><li><p>功能：将str指向的字符串的内容输入到fp所指文件的当前位置，同时将fp自动向前移动strlen(str)个字符位置。</p></li><li><p>参数：</p><ul><li>str: 字符串常量&#x2F;字符串指针&#x2F;字符数组名等。</li><li>fp: 文件指针，指向要被写入的文件。</li></ul></li><li><p>返回值：</p><ul><li>正常：非负整数。</li><li>异常：EOF(-1)。</li></ul><p>说明：</p><ol><li>字符串结束符<code>\0</code>不输入到文件；</li><li>不自动在字符串末尾加换行符。</li><li><code>fputs</code>自带换行。</li></ol></li></ul><h4 id="从文件读取字符串：fgets"><a href="#从文件读取字符串：fgets" class="headerlink" title="从文件读取字符串：fgets"></a>从文件读取字符串：fgets</h4><ul><li><p>函数原型：<code>int fgets(char *str,int n,FILE *fp)</code></p></li><li><p>功能：从由fp指出的文件中读取<strong>n-1个</strong>字符，并把它们存放到由str指出的字符数组中，最后自动加上<code>\0</code>。</p></li><li><p>参数：</p><ul><li>str: 接受字符串的内存地址，可以是数组名或指针。</li><li>n：要读取字符的个数</li><li>fp: 文件指针，指向要被读取字符的文件。</li></ul></li><li><p>返回值：</p><ul><li>正常：字符串的内存首地址（str的值）。</li><li>异常：NULL。</li></ul><p>说明：</p><ol><li>读入n-1个字符到文件时，遇到换行符或文件结束符则提前结束；</li><li>读入结束后，系统自动加<code>\0</code></li></ol></li></ul><p><strong>例2</strong> 字符串读写函数示例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">if</span>((fp=<span class="built_in">fopen</span>(<span class="string">&quot;file1.txt&quot;</span>,<span class="string">&quot;w&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;can&#x27;t open file1!\n&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;I am a teacher.&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;I love my homeland!&quot;</span>,fp);</span><br><span class="line">    <span class="built_in">fclose</span>(fp);<span class="comment">//必须先关闭，再以只读的方式打开。</span></span><br><span class="line">    <span class="keyword">if</span>((fp=<span class="built_in">fopen</span>(<span class="string">&quot;file1.txt&quot;</span>,<span class="string">&quot;r&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;can&#x27;t open file1!\n&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">feof</span>(fp))<span class="comment">//指针指到的地方没结束的话</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fgets</span>(s,<span class="number">16</span>,fp);<span class="comment">//每次读取15个字符</span></span><br><span class="line">        <span class="built_in">puts</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);<span class="comment">//关闭指针</span></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="从文件读取数据块：fread"><a href="#从文件读取数据块：fread" class="headerlink" title="从文件读取数据块：fread"></a>从文件读取数据块：fread</h4><ul><li>函数原型：<code>int fread(void *buffer, int size, int count, FILE *fp)</code></li><li>功能：<ul><li>从文件指针fp所指的文件的当前位置读取字节数为size大小的数据块共count个，存到buffer所指的内存存储区中。</li></ul></li><li>参数：<ul><li>buffer：指向存放读入数据存储区的首地址的指针。</li><li>size：数据块的字节数，即一个数据块的大小。</li><li>count：一次读入数据块的数量。</li><li>fp：文件指针，指向要从中读出数据的文件。</li></ul></li><li>返回值：<ul><li>正常返回：实际读取数据块的个数，即count。</li><li>异常返回：0。</li></ul></li></ul><h4 id="向文件写入数据块：fwrite"><a href="#向文件写入数据块：fwrite" class="headerlink" title="向文件写入数据块：fwrite"></a>向文件写入数据块：fwrite</h4><ul><li>函数原型：<code>int fwrite(void *buffer, int size, int count, FILE *fp)</code></li><li>功能：<ul><li>将以buffer为起始地址的长度为size的count个数据块输出到文件指针fp所指的位置去。</li></ul></li><li>参数：<ul><li>buffer：指向存放输出数据存储区的首地址的指针。</li><li>size：数据块的字节数，即一个数据块的大小。</li><li>count：一次输出数据块的数量。</li><li>fp：文件指针，指向要从中写入数据的文件。</li></ul></li><li>返回值：<ul><li>正常返回：实际输出数据块的个数，即count。</li><li>异常返回：0。</li></ul></li></ul><h4 id="块读写应用"><a href="#块读写应用" class="headerlink" title="块读写应用"></a>块读写应用</h4><p><strong><code>fread</code>和<code>fwrite</code>常用于读写二进制文件。</strong></p><p><strong>例：</strong></p><p>假设fp指向以二进制形式打开的可读写文件，并有如下说明：</p><p><code>float f; double d[10];</code></p><p><strong>常见的块读写应用示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fwrite</span>(&amp;f,<span class="built_in">sizeof</span>(<span class="type">float</span>),<span class="number">1</span>,fp); <span class="comment">//把浮点数f写入文件</span></span><br><span class="line"><span class="built_in">fwrite</span>(d,<span class="built_in">sizeof</span>(<span class="type">double</span>),<span class="number">10</span>,fp);  <span class="comment">//把数组d中所有数写入文件</span></span><br><span class="line"><span class="built_in">fread</span>(&amp;f,<span class="built_in">sizeof</span>(<span class="type">float</span>),<span class="number">1</span>,fp);  <span class="comment">//从文件中以块形式读一浮点数到变量f中</span></span><br><span class="line"><span class="built_in">fread</span>(d,<span class="built_in">sizeof</span>(d),<span class="number">1</span>,fp);  <span class="comment">//从文件中一次性读一个数组d大小的数据块到数组d中</span></span><br></pre></td></tr></table></figure><h5 id="例3"><a href="#例3" class="headerlink" title="例3"></a><strong>例3</strong></h5><p>从键盘上读入5个学生的成绩信息，将它们以文件的形式保存在磁盘上。然后再将从文件中读取学生信息，并在屏幕上显示出来。假设学生成绩信息包括学生姓名、学号、总分。</p><p><strong>分析：</strong></p><p>程序处理的数据为<strong>结构数组</strong>，应选择<strong>块读写</strong>的方式进行文件操作，具体步骤如下：</p><ul><li>声明学生成绩结构类型</li><li>定义学生成绩结构数组</li><li>以块读写的方式对学生信息进行文件读写</li></ul><p>程序实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> N 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> num[<span class="number">8</span>];</span><br><span class="line">    <span class="type">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> s[N],t[N];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">if</span> ((fp=<span class="built_in">fopen</span>(<span class="string">&quot;student.dat&quot;</span>,<span class="string">&quot;wb&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;can&#x27;t openstudent.dat&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="comment">//判定是否成功打开</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123; cin&gt;&gt;s[i].name&gt;&gt;s[i].num&gt;&gt;s[i].score;</span><br><span class="line">        <span class="built_in">fwrite</span>(&amp;s[i],<span class="built_in">sizeof</span>(student),<span class="number">1</span>,fp); <span class="comment">//对于第i个学生，逐元素向文件写数据</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);<span class="comment">//写文件结束先关闭，再以读的方式打开</span></span><br><span class="line">    <span class="keyword">if</span> ((fp=<span class="built_in">fopen</span>(<span class="string">&quot;student.dat&quot;</span>,<span class="string">&quot;rb&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;can&#x27;t openstudent.dat&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fread</span>(t,<span class="built_in">sizeof</span>(t),<span class="number">1</span>,fp); <span class="comment">//一次性从文件读出整个数组</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">        cout&lt;&lt;s[i].name&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;s[i].num&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;s[i].score&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="向文件格式化写入数据：fprintf"><a href="#向文件格式化写入数据：fprintf" class="headerlink" title="向文件格式化写入数据：fprintf"></a>向文件格式化写入数据：fprintf</h4><ul><li>函数原型：<code>int fprintf(FILE *fp,const char *format,arg_list)</code></li><li>功能说明：将变量表列<code>(arg_list)</code>中的数据，按照<code>format</code>指出的格式，写入由<code>fp</code>指定的文件。</li><li>参数说明：<ul><li><code>fp</code>：文件指针，指向将数据写入的文件。</li><li><code>format</code>：指向写出数据格式字符串的指针.</li><li><code>arg_list</code>：要写入文件的变量表列，各变量之间用逗号分隔。</li></ul></li><li>返回值：<ul><li>正常返回：输出的字节数。</li><li>异常返回：负值。</li></ul></li><li>示例：<code>fprintf(fp,&quot;%d%s&quot;,4,&quot;China&quot;);</code><ul><li>表示将整数4和字符串”China”按整数和字符串的形式写入fp所指的文件中。</li></ul></li></ul><h4 id="从文件格式化读取数据-：fscanf"><a href="#从文件格式化读取数据-：fscanf" class="headerlink" title="从文件格式化读取数据 ：fscanf"></a>从文件格式化读取数据 ：fscanf</h4><ul><li><p>函数原型：<code>int fscanf(FILE *fp,const char *format,add_list)</code></p></li><li><p>功能说明：按照<code>format</code>指出的格式，从<code>fp</code>指定的文件中读取数据存 放至地址表列<code>(add_list)</code>的变量中。</p></li><li><p>参数说明：</p><ul><li><code>fp</code>：文件指针，指向要从中读取数据的文件。</li><li><code>format</code>：指向读取数据格式字符串的指针。</li><li><code>add_list</code>：存放读取数据的变量的地址表列。</li></ul></li><li><p>返回值：</p><ul><li>正常返回：成功读取的参数的个数。</li><li>异常返回：EOF（-1）。</li></ul></li><li><p>示例：</p><p><code>fscanf(fp,&quot;%d%d&quot; ,&amp;x,&amp;y);</code></p><p>表示从fp所指的文件中顺序读取两个整数给变量x和y。</p><p>地址符号<code>&amp;</code>不能省略。</p></li></ul><h5 id="fscanf-s"><a href="#fscanf-s" class="headerlink" title="fscanf_s"></a>fscanf_s</h5><blockquote><p>vs2022那令人恼火的安全函数</p></blockquote><p>和fscanf区别就是fscanf_s比fscanf多了个域宽检查，会多一个参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line"><span class="built_in">fscanf_s</span>(fp,<span class="string">&quot;%s&quot;</span>,str,<span class="number">20</span>);<span class="comment">//fsanf_s会比fscanf多一个说明要读出数据内存大小的数字。</span></span><br></pre></td></tr></table></figure><p>读取多个数据：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fscanf_s</span>(fp, <span class="string">&quot;%s %s %s&quot;</span>, s1,<span class="number">20</span>, s2,<span class="number">20</span>, s3,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><p>读取多个数字的字符串：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fscanf_s</span>(fp, <span class="string">&quot;%s %s %s %d %d&quot;</span>, s1, <span class="number">20</span>, s2, <span class="number">20</span>, s3, <span class="number">20</span>,&amp;a,&amp;b);</span><br></pre></td></tr></table></figure><h5 id="例4"><a href="#例4" class="headerlink" title="例4"></a>例4</h5><p>用格式化读写文件方式实现例三相同的功能</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> N 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>],num[<span class="number">8</span>];</span><br><span class="line">    <span class="type">double</span> score;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">if</span> ((fp=<span class="built_in">fopen</span>(<span class="string">&quot;student.dat&quot;</span>,<span class="string">&quot;wb&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;can&#x27;t openstudent.dat&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="comment">//判定是否成功打开</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123; cin&gt;&gt;name&gt;&gt;num&gt;&gt;score;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%s %s %lf&quot;</span>,name,num,score); <span class="comment">//对于第i个学生，逐元素向文件写数据</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);<span class="comment">//写文件结束先关闭，再以读的方式打开</span></span><br><span class="line">    <span class="keyword">if</span> ((fp=<span class="built_in">fopen</span>(<span class="string">&quot;student.dat&quot;</span>,<span class="string">&quot;rb&quot;</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;can&#x27;t openstudent.dat&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%s%s%lf&quot;</span>,name,num,&amp;score);<span class="comment">//name和num无需地址符号，因为它们是数组名</span></span><br><span class="line">        cout&lt;&lt;name&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;num&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;score&lt;&lt;endl;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="随机读写"><a href="#随机读写" class="headerlink" title="随机读写"></a>随机读写</h3><ul><li>顺序读写文件只能从头开始，顺序读写各个数据。</li><li>随机读写可按需要只读写文件中某些<strong>指定</strong>的部分。</li><li>随机读写的关键是要<strong>按要求移动位置指针</strong>，即进行文件的<strong>定位</strong>。</li><li>实现文件定位、移动文件内部位置指针的函数主要有<code>rewind</code>函数 和<code>fseek</code>函数。</li></ul><h4 id="rewind函数"><a href="#rewind函数" class="headerlink" title="rewind函数"></a>rewind函数</h4><ul><li>函数原型：<code>void rewind(FILE *fp)</code></li><li>功能说明：使指示文件位置的<strong>指针重新返回到文件开始</strong>。</li></ul><h4 id="fseek函数"><a href="#fseek函数" class="headerlink" title="fseek函数"></a>fseek函数</h4><ul><li>函数原型：<code>int fseek(FILE *fp, long offset, int whence)</code></li><li>功能说明：使文件指针fp移到基于whence的相对位置offset处。</li><li>参数说明：<ul><li>offset是相对whence的字节位移量，用长整型表示。</li><li>whence是移动的基准，常用符号常量表示。</li></ul></li><li>返回值：<ul><li>正常返回：0。</li><li>异常返回：-1，表示定位操作出错。</li></ul></li></ul><p><strong>whence：</strong></p><p>符号常量</p><p>值</p><p>基准位置</p><p>SEEK_SET</p><p>0</p><p>文件开头</p><p>SEEK_CUR</p><p>1</p><p>当前读写的位置</p><p>SEEK_END</p><p>2</p><p>文件尾部</p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fseek</span>(fp,<span class="number">1234L</span>,SEEK_CUR);</span><br><span class="line"><span class="comment">//把读写位置从当前位置向后移动1234字节（L后缀表示长整数）</span></span><br><span class="line"><span class="built_in">fseek</span>(fp,<span class="number">0L</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">//把读写位置移动到文件末尾</span></span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p><strong>1</strong></p><p>编写程序，从键盘输入一串字符，要求将该串字符的倒序串先写入到文件f1.txt中，然后再将原字符串的内容接到该文件的末尾。例如，假设从键盘输入的字符串为“How do you do?”，则文件f1.txt的内容为：</p><p>?od uoy od woHHow do you do?</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp;</span><br><span class="line">    <span class="type">char</span> s[N],t[N];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">errno_t</span> err = <span class="built_in">fopen_s</span>(&amp;fp,<span class="string">&quot;C:\\Users\\pc\\Desktop\\ctest.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);<span class="comment">//只写方式打开file1</span></span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;fail to open ctest.txt&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入字符串：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">gets_s</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">        t[i] = s[<span class="built_in">strlen</span>(s) - i - <span class="number">1</span>];</span><br><span class="line">    t[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">fputs</span>(t, fp);</span><br><span class="line">    <span class="built_in">fseek</span>(fp, <span class="number">0L</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">fputs</span>(s, fp);</span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="type">errno_t</span> err1 = <span class="built_in">fopen_s</span>(&amp;fp,<span class="string">&quot;C:\\Users\\pc\\Desktop\\ctest.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;can&#x27;t open ctest.txt&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">feof</span>(fp))<span class="comment">//指针指到的地方没结束的话</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fgets</span>(s, <span class="number">31</span>, fp);<span class="comment">//每次读取31个字符</span></span><br><span class="line">        <span class="built_in">puts</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2</strong></p><p>用记事本建立一个文本文件f2.txt，在该文件中任意存放一组整数。编写程序统计该文件中正整数、负整数和零的个数。（提示：用fscanf函数读取文件中的数据）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>,pos=<span class="number">0</span>,neg=<span class="number">0</span>,zero=<span class="number">0</span>;</span><br><span class="line">    <span class="type">errno_t</span> err = <span class="built_in">fopen_s</span>(&amp;fp,<span class="string">&quot;C:\\Users\\pc\\Desktop\\f2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;fail to open ctest.txt&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">feof</span>(fp))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf_s</span>(fp, <span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">        <span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line">            pos++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num &lt; <span class="number">0</span>)</span><br><span class="line">            neg++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num == <span class="number">0</span>)</span><br><span class="line">            zero++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;正整数有&quot;</span> &lt;&lt; pos &lt;&lt; <span class="string">&quot;个，负整数有&quot;</span> &lt;&lt; neg &lt;&lt; <span class="string">&quot;个，零有&quot;</span> &lt;&lt; zero &lt;&lt; <span class="string">&quot;个。&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>负整数好像多了一个？</p><p><strong>3</strong></p><p>‎将从键盘输入的N个学生的学号和成绩存入到文件student.dat中。再从文件中读取学生的信息，求出最高分、最低分和总分。N可通过符号常量自行定义大小。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5 <span class="comment">//N个学生</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> num[<span class="number">8</span>];</span><br><span class="line">    <span class="type">double</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp,* fp1;</span><br><span class="line">    student s[N], t[N];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">errno_t</span> err = <span class="built_in">fopen_s</span>(&amp;fp,<span class="string">&quot;student.dat&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;fail to open student.dat&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;输入第&quot;</span> &lt;&lt; i<span class="number">+1</span> &lt;&lt; <span class="string">&quot;位学生的学号和成绩：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; s[i].num &gt;&gt; s[i].score;</span><br><span class="line">        <span class="built_in">fwrite</span>(&amp;s[i], <span class="built_in">sizeof</span>(student), <span class="number">1</span>, fp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="type">errno_t</span> err1 = <span class="built_in">fopen_s</span>(&amp;fp1, <span class="string">&quot;student.dat&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp1 == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;fail to open student.dat&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> max = <span class="number">0</span>, min = <span class="number">999</span>, sum = <span class="number">0</span>,score;</span><br><span class="line">    <span class="type">char</span> num[N];</span><br><span class="line">    <span class="built_in">fread</span>(t, <span class="built_in">sizeof</span>(t), <span class="number">1</span>, fp);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += t[i].score;</span><br><span class="line">        <span class="keyword">if</span> (t[i].score &gt; max)</span><br><span class="line">            max = t[i].score;</span><br><span class="line">        <span class="keyword">if</span> (t[i].score &lt; min)</span><br><span class="line">            min = t[i].score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fclose</span>(fp1);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;最高分：&quot;</span> &lt;&lt; max &lt;&lt; <span class="string">&quot;最低分：&quot;</span> &lt;&lt; min&lt;&lt; <span class="string">&quot;总分：&quot;</span> &lt;&lt; sum&lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4</strong></p><p>编写程序，将一存放一行字符串的文本文件中的每一个字符及其所对应的ASCII码输出到屏幕上。例如文件的内容是“I love China”，则输出：</p><p>I(73) (32)l(108)o(111)v(118)e(101) (32)C(67)h(104)i(105)n(110)a(97)</p><p>注意：空格也是有效字符。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> s[N];</span><br><span class="line">    <span class="type">errno_t</span> err = <span class="built_in">fopen_s</span>(&amp;fp,<span class="string">&quot;C:\\Users\\pc\\Desktop\\ctest.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);<span class="comment">//ctest.txt是一个桌面文本文件</span></span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;fail to open ctest.txt&quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; !<span class="built_in">feof</span>(fp); i++)</span><br><span class="line">        s[i]=<span class="built_in">fgetc</span>(fp);</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">fclose</span>(fp);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; s[i] &lt;&lt; <span class="string">&quot;(&quot;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);</span><br><span class="line">        cout&lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十讲 结构</title>
      <link href="/2024/02/05/%E7%AC%AC%E5%8D%81%E8%AE%B2-%E7%BB%93%E6%9E%84/"/>
      <url>/2024/02/05/%E7%AC%AC%E5%8D%81%E8%AE%B2-%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="第十讲-结构"><a href="#第十讲-结构" class="headerlink" title="第十讲 结构"></a>第十讲 结构</h1><h2 id="10-1-结构体类型"><a href="#10-1-结构体类型" class="headerlink" title="10.1 结构体类型"></a>10.1 结构体类型</h2><p>例：输入5个学生的信息，如何将这些信息按平均分倒序排序并输出？学生信息：学号、姓名、语文、数学、外语三门课成绩。</p><ul><li>如何描述5个学生的信息？</li></ul><ol><li>独立变量：30个；</li><li>通常的数组：定义多个数组，分别存放5人的姓名、学号、成绩</li><li>使用结构类型数组！</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> no[<span class="number">7</span>];</span><br><span class="line">    <span class="type">int</span> Chinese,English,math;</span><br><span class="line">&#125;s[<span class="number">5</span>];</span><br></pre></td></tr></table></figure><h3 id="结构类型的概念"><a href="#结构类型的概念" class="headerlink" title="结构类型的概念"></a>结构类型的概念</h3><p>按类型和性质将可能不同但有关联的数据组合在一起构成的集合。</p><h3 id="结构类型如何声明"><a href="#结构类型如何声明" class="headerlink" title="结构类型如何声明"></a>结构类型如何声明</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> 结构类型标识符  <span class="comment">//结构类型关键字</span></span><br><span class="line">&#123;</span><br><span class="line">    结构成员<span class="number">1</span>定义;</span><br><span class="line">    结构成员<span class="number">2</span>定义;</span><br><span class="line">    ...;</span><br><span class="line">    结构成员n定义;</span><br><span class="line">&#125;; <span class="comment">//;不能省!!</span></span><br></pre></td></tr></table></figure><ul><li><p>结构变量的成员可以像同类型普通变量一样使用；</p></li><li><p>结构成员名可以与结构外的其他变量同名，二者不代表同一个对象；</p></li></ul><p><strong>结构类型可以嵌套定义</strong>，即一个结构类型的变量可以作为<strong>另一</strong>结构类型的成员。（但不能作为自身的）</p><p>例：先声明结构类型date，再声明结构类型person</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">date</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">    <span class="type">int</span> year;                </span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name=[];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">date</span> birthday;<span class="comment">//也可以直接date birthday</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/img/image-20231109105019428.png" alt="image-20231109105019428"></p><p>结构成员 <code>birthday</code> 是内嵌在 <code>struct person</code> 类型中的另一个结构类型的变量。</p><h3 id="结构变量如何定义"><a href="#结构变量如何定义" class="headerlink" title="结构变量如何定义"></a>结构变量如何定义</h3><p>结构类型不是程序操作的对象，不占用内存空间，只有在定义结构变量后，系统才会为之分配内存单元。定义方式：</p><ul><li>先声明结构类型再定义结构变量</li><li>在声明结构类型的同时定义结构变量</li><li>省略结构标识符直接定义结构变量</li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">date</span> birthday;</span><br><span class="line">&#125;p1,p2;<span class="comment">//声明类型的同时定义变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">date</span> birthday;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span> p1,p2; <span class="comment">//先声明类型再定义变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">date</span> birthday;</span><br><span class="line">&#125;p1,p2;<span class="comment">//无类型名变量，也只能有这里定义的两个变量了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">30</span>];</span><br><span class="line"><span class="type">char</span> num[<span class="number">10</span>];</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line">&#125;s= &#123;<span class="string">&quot;FangMin&quot;</span>, <span class="string">&quot;1300010&quot;</span>, <span class="number">87</span>&#125;;</span><br><span class="line"><span class="comment">/*结构变量的初始化:</span></span><br><span class="line"><span class="comment">该初始化语句为结构变量 s 的 name 成员赋初值&quot;FangMin&quot;、为 num 成员赋初值&quot;1300010&quot;、为 score 成员赋初值 87。*/</span></span><br></pre></td></tr></table></figure><h2 id="10-2-结构体变量"><a href="#10-2-结构体变量" class="headerlink" title="10.2 结构体变量"></a>10.2 结构体变量</h2><h3 id="结构变量的访问"><a href="#结构变量的访问" class="headerlink" title="结构变量的访问"></a>结构变量的访问</h3><h4 id="结构成员的访问"><a href="#结构成员的访问" class="headerlink" title="结构成员的访问"></a>结构成员的访问</h4><p>结构变量多数情况下需访问到成员，而不能整体访问。</p><ul><li><p>通过结构变量访问成员：</p><p><code>结构变量名.成员名</code></p></li><li><p>通过指向结构的指针访问成员：</p><p><code>(*指向结构的指针).成员名</code></p><p>注：括号不能省略，否则优先<code>.</code>运算</p><ul><li>指针访问成员的专门运算符：</li></ul><p><code>p-&gt;name</code></p></li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">date</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">    <span class="type">int</span> year;                </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    date birthday;</span><br><span class="line">&#125;p1,*p=&amp;p1;</span><br></pre></td></tr></table></figure><p>可如下访问：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">p<span class="number">1.</span>age=<span class="number">21</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;name,<span class="string">&quot;Fang Min&quot;</span>); <span class="comment">//p-&gt;name是字符数组，赋值要用strcpy函数</span></span><br><span class="line">p-&gt;birthday.month=<span class="number">8</span>;<span class="comment">//p-&gt;birthday已经是date类型变量，和month的关系是.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对p1赋值（普通）：</span></span><br><span class="line"><span class="built_in">strcpy</span> (p<span class="number">1.</span>name, <span class="string">&quot;Fang Min&quot;</span>);</span><br><span class="line">p<span class="number">1.</span>sex = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">p<span class="number">1.</span>age = <span class="number">24</span>;</span><br><span class="line">p<span class="number">1.</span>birthday.month = <span class="number">8</span>;</span><br><span class="line">p<span class="number">1.</span>birthday.day = <span class="number">10</span>;</span><br><span class="line">p<span class="number">1.</span>birthday.year = <span class="number">1989</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//借助结构指针对p1赋值：</span></span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;name, <span class="string">&quot;Fang Min&quot;</span>);</span><br><span class="line">p-&gt;sex = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">p-&gt;age = <span class="number">24</span>;</span><br><span class="line">p-&gt;birthday.month = <span class="number">8</span>;</span><br><span class="line">p-&gt;birthday.day = <span class="number">10</span>;</span><br><span class="line">p-&gt;birthday.year = <span class="number">1988</span>;</span><br></pre></td></tr></table></figure><p>其中，</p><p><code>name</code> 成员为<strong>字符数组</strong>，对字符数组赋值必须通过调用 <code>strcpy</code> 函数实现，而不能直接用赋值语句；</p><p>而 <code>birthday</code> 成员本身又是一个内嵌的结构类型变量，所以也要按<strong>结构成员访问方式</strong>访问到它的具体成员 year、 month、 day。</p><blockquote><p>总结：小心字符数组char s[N]和内嵌型结构变量。</p></blockquote><h3 id="访问原则"><a href="#访问原则" class="headerlink" title="访问原则"></a>访问原则</h3><ul><li>不允许<strong>整体输入输出</strong>结构变量，必须逐成员输入输出；</li><li>允许<strong>整体赋值</strong>和<strong>做函数参数</strong>；</li><li>引用成员时若成员本身又属复杂类型，则需逐级找到最低一级成员；</li><li>成员需遵循同类型普通变量的使用规则及其各种运算。</li></ul><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><ul><li><p>结构变量初始化</p><p>各成员的初值按顺序组织在<code>&#123;&#125;</code>中。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">  <span class="type">char</span> sex;</span><br><span class="line">  <span class="type">int</span> age;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">date</span> birthday;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span> p=&#123;<span class="string">&quot;Tom&quot;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="number">18</span>,&#123;<span class="number">12</span>,<span class="number">21</span>,<span class="number">2015</span>&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>结构数组初始化</p><p>每个数组元素都是一个结构变量，组织在内层<code>&#123;&#125;</code>中；所有数组元素组织在外层<code>&#123;&#125;</code>中。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line">  <span class="type">char</span> num[<span class="number">7</span>];</span><br><span class="line">  <span class="type">int</span> score;</span><br><span class="line">&#125;p[<span class="number">10</span>]=&#123;&#123;<span class="string">&quot;Fang Min&quot;</span>,<span class="string">&quot;1403235&quot;</span>,<span class="number">84</span>&#125;,&#123;<span class="string">&quot;Fang Hua&quot;</span>,<span class="string">&quot;1403256&quot;</span>,<span class="number">75</span>&#125;&#125;;<span class="comment">//p[0]和p[1]初始化了，p[2]~p[9]的成员值默认为空串或0</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">gets</span>(p<span class="number">1.</span>name);</span><br><span class="line"><span class="built_in">gets</span>(name);</span><br></pre></td></tr></table></figure></li></ul><h2 id="10-3-结构的应用"><a href="#10-3-结构的应用" class="headerlink" title="10.3 结构的应用"></a>10.3 结构的应用</h2><h3 id="引例的实现"><a href="#引例的实现" class="headerlink" title="引例的实现"></a>引例的实现</h3><p>输入5个学生的信息，如何将这些信息按平均分倒序排序并输出？学生信息：学号、姓名、语文、数学、外语三门课成绩。</p><p><strong>分析：</strong></p><ul><li>数据结构的选取：应将平均分也定义在“学生”结构类型中；</li><li>正确理清层次关系；</li><li>明确输入、输出、赋值等操作数据的访问要求。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> no[<span class="number">7</span>];</span><br><span class="line">    <span class="type">double</span> Chinese,Engilsh,math,avg;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    student s[N],t;<span class="comment">//s[N]:student类数组，输入如下：</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;s[i].name&gt;&gt;s[i].Chinese&gt;&gt;s[i].English&gt;&gt;s[i].math;<span class="comment">//逐元素逐成分输入</span></span><br><span class="line">        s[i].avg=(s[i].Chinese+s[i].English+s[i].math)/<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//冒泡法排序</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N<span class="number">-1</span>-i;j++)</span><br><span class="line">            <span class="keyword">if</span>(s[j].avg&gt;s[j<span class="number">+1</span>].avg) <span class="comment">//结构变量允许整体赋值</span></span><br><span class="line">            &#123;</span><br><span class="line">                t=s[j];</span><br><span class="line">                s[j]=s[j<span class="number">+1</span>];</span><br><span class="line">                s[j<span class="number">+1</span>]=t;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;s[i].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;s[i].no&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;s[i].Chinese&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout&lt;&lt;s[i].English&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;s[i].math&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;s[i].avg&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>附：如果对学号（字符串）排序，则需要使用strcmp()：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(s[i].no,s[i<span class="number">+1</span>].no)&gt;<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="结构变量在函数中的应用"><a href="#结构变量在函数中的应用" class="headerlink" title="结构变量在函数中的应用"></a>结构变量在函数中的应用</h3><p>例：定义包含小时、分钟、秒三个成员的时间结构类型，写一转换函数 ，将24小时制的时间转换成12小时制。</p><p><strong>分析：</strong></p><ul><li>函数参数：接受时间，参数为结构类型变量</li><li>函数返回值：同为结构类型。</li><li>为方便输出，将是否转换的判断放在主函数。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">time</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> hour;</span><br><span class="line">    <span class="type">int</span> minute;</span><br><span class="line">    <span class="type">int</span> second;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">time</span> <span class="built_in">change</span>(<span class="keyword">struct</span> time t)  <span class="comment">//允许结构变量整体做参数//注意此函数的特征</span></span><br><span class="line">&#123;</span><br><span class="line">    t.hour=t.hour%<span class="number">12</span>;</span><br><span class="line">    <span class="keyword">return</span> t;<span class="comment">//返回结构类型</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">time</span> t;</span><br><span class="line">    cin&gt;&gt;t.hour&gt;&gt;t.minute&gt;&gt;t.second;</span><br><span class="line">    <span class="keyword">if</span>(t.hour&gt;<span class="number">12</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t=<span class="built_in">change</span>(t);</span><br><span class="line">        cout&lt;&lt;t.hour&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;t.minute&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;t.second&lt;&lt;<span class="string">&quot;pm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout&lt;&lt;t.hour&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;t.minute&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;t.second&lt;&lt;<span class="string">&quot;am&quot;</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>结构数组是元素为结构类型变量的数组，对该数组操作时需遵循数组的使用原则，对每个元素操作时要符合结构变量的引用原则；</li><li>结构变量在输入输出时必须引用到最低级成员；</li><li>结构变量做函数参数及赋值运算时可整体引用。</li></ul><h3 id="附"><a href="#附" class="headerlink" title="附"></a>附</h3><p>指针：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span>* name;</span><br><span class="line">    <span class="type">int</span> grade;</span><br><span class="line">&#125;p[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s;</span><br><span class="line">    <span class="built_in">gets</span>(s);</span><br><span class="line">    <span class="type">char</span>* p=s;</span><br><span class="line">    <span class="comment">//或者</span></span><br><span class="line">    p=<span class="keyword">new</span> <span class="type">char</span>[<span class="number">20</span>];</span><br><span class="line">    s[i].name=<span class="keyword">new</span> <span class="type">char</span>[<span class="number">10</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><h3 id="测试：各类型变量所占内存字节"><a href="#测试：各类型变量所占内存字节" class="headerlink" title="测试：各类型变量所占内存字节"></a>测试：各类型变量所占内存字节</h3><p>sizeof(char) &#x3D; 1;</p><p>sizeof(int) &#x3D; 4;</p><p>sizeof(long) &#x3D; 4;</p><p>sizeof(float) &#x3D; 4;</p><p>sizeof(double) &#x3D; 8.</p><p><strong>指针类型的sizeof</strong></p><p>指针用于存放地址，它等于计算机内部地址总线的宽度，所以32位计算机中，一个[指针变量]的返回值是4字节(与指针变量的类型无关)。可以预计，在64位系统中指针变量的sizeof等于8。</p><p>sizeof(p) &#x3D; 4;</p><p><strong>数组的sizeof</strong></p><p>数组的sizeof值等于数组所占用的内存字节数，如：</p><p>char a1[] &#x3D; “abc”;</p><p>int a2[3];</p><p>sizeof( a1 ); &#x2F;&#x2F; 结果为4，字符串末尾还存在一个NULL终止符</p><p>sizeof( a2 ); &#x2F;&#x2F; 结果为3_4&#x3D;12（3_sizeof(int)）</p><p>数组元素个数的求法：</p><p>sizeof(a1)&#x2F;sizeof(*a1);</p><h3 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h3><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>有一组关于学生成绩的信息，编写函数max，该函数返回值为分数最高的学生的信息（包括学号和分数）。再编写主函数对其进行调用并输出最高分者的信息。假设结构类型定义为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *num;</span><br><span class="line">    <span class="type">int</span>  score;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>提示：num定义为指针类型，注意向其复制内容之前要先为其申请空间。</p><p>‏</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span>* num;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span> <span class="built_in">max</span>(<span class="keyword">struct</span> student s[N],<span class="type">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> t = &#123;<span class="number">0</span>,s[<span class="number">0</span>].score &#125;;</span><br><span class="line">    t.num = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i].score &gt; t.score)</span><br><span class="line">        &#123;</span><br><span class="line">            t.score = s[i].score;</span><br><span class="line"></span><br><span class="line">            t.num = s[i].num;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">student</span> s[N] = &#123;&#125;, t = &#123;&#125;;</span><br><span class="line">    <span class="type">int</span> n,i;</span><br><span class="line">    t.num = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入学生数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">/*char a[N];</span></span><br><span class="line"><span class="comment">    s-&gt;num = a;*/</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入各学生序号及成绩：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i].num = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">        cin &gt;&gt; s[i].num &gt;&gt; s[i].score;</span><br><span class="line">    &#125;</span><br><span class="line">    t=<span class="built_in">max</span>(s,n);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;最高分者序号为&quot;</span> &lt;&lt; *t.num &lt;&lt;<span class="string">&quot;，分值为：&quot;</span> &lt;&lt; t.score &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标答：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *num;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">student <span class="title">max</span><span class="params">(student s[],<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    student t=s[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i].score&gt;t.score)</span><br><span class="line">            t=s[i];</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    student s[N],maxs;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i].num=<span class="keyword">new</span> <span class="type">char</span>[<span class="number">10</span>];<span class="comment">//假设学号不超过9位</span></span><br><span class="line">        cin&gt;&gt;s[i].num&gt;&gt;s[i].score;</span><br><span class="line">    &#125;</span><br><span class="line">    maxs=<span class="built_in">max</span>(s,N);      </span><br><span class="line">    cout&lt;&lt;maxs.num&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;maxs.score&lt;&lt;endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>编写程序，定义一个日期结构变量，计算某日期是本年度的第几天。提示：为简单起见，可定义一个存放12个月中每个月总天数的数组。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">time</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> date;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">change</span><span class="params">(<span class="keyword">struct</span> time t,<span class="type">bool</span> run)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,num=<span class="number">0</span>, a[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;, b[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line">    <span class="keyword">if</span> (run == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t.month<span class="number">-1</span>; i++)</span><br><span class="line">            num += b[i];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t.month<span class="number">-1</span>; i++)</span><br><span class="line">            num += a[i];</span><br><span class="line">    num += t.date;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">time</span> t;</span><br><span class="line">    <span class="type">bool</span> run;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;今年是不是闰年？（是：1；否：0）&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; run;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入一日期（月/日）&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; t.month &gt;&gt; t.date;</span><br><span class="line">    num = <span class="built_in">change</span>(t, run);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;这是今年的第&quot;</span> &lt;&lt; num &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><p>‏使用结构数组输入10本书的名称和单价，调用函数按照书名的字母顺序序进行排序，在主函数输出排序结果</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">book</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*int *sort(struct book b[])</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int i, j, *m[N],a;</span></span><br><span class="line"><span class="comment">    for(i=0;i&lt;N-1;i++)</span></span><br><span class="line"><span class="comment">        for (j = 0; j &lt; N - 1 - i; j++)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            if (b[j].name &gt; b[j + 1].name)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                a = b[j].num;</span></span><br><span class="line"><span class="comment">                b[j].num = b[j + 1].num;</span></span><br><span class="line"><span class="comment">                b[j + 1].num = a;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    for (i = 0; i &lt; N; i++)</span></span><br><span class="line"><span class="comment">        *m[i] = b[i].num;</span></span><br><span class="line"><span class="comment">    return *m;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">book</span> *<span class="built_in">sort</span>(<span class="keyword">struct</span> book b[])</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">book</span> a;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N - <span class="number">1</span> - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//for(int z=0; b[j].name[z] != &#x27;\0&#x27; &amp;&amp; b[j + 1].name[z] != &#x27;\0&#x27;;z++)</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(b[j].name, b[j<span class="number">+1</span>].name) &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a = b[j];</span><br><span class="line">                b[j] = b[j + <span class="number">1</span>];</span><br><span class="line">                b[j + <span class="number">1</span>] = a;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">book</span>* p = b;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">book</span> b[N],*p;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        cin &gt;&gt; b[i].name &gt;&gt; b[i].price;</span><br><span class="line">    p = <span class="built_in">sort</span>(b);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;排序后结果：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        cout &lt;&lt; p[i].name &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; p[i].price &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第九讲 函数（续）</title>
      <link href="/2024/02/05/%E7%AC%AC%E4%B9%9D%E8%AE%B2-%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%AD%EF%BC%89/"/>
      <url>/2024/02/05/%E7%AC%AC%E4%B9%9D%E8%AE%B2-%E5%87%BD%E6%95%B0%EF%BC%88%E7%BB%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="9-1-返回指针值的函数"><a href="#9-1-返回指针值的函数" class="headerlink" title="9.1 返回指针值的函数"></a>9.1 返回指针值的函数</h2><ul><li><p>函数的返回值可为变量地址、数组名或指针变量。</p></li><li><p>在说明&#x2F;定义返回值为指针值的函数时，只需在函数前加一指针类型说明符。</p><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">float</span> *<span class="title">fun</span><span class="params">(<span class="type">float</span> x[],<span class="type">float</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="type">char</span> *<span class="title">strcat1</span><span class="params">(<span class="type">char</span> *strDest,<span class="type">const</span> <span class="type">char</span> *strSource)</span></span></span><br></pre></td></tr></table></figure></li></ul><p>例：编一函数，将这字符串中ASCII码最大的字符的地址返回，主程序中输出最大数之后的所有数。</p><p>分析：</p><ol><li>如何定义函数的类型？</li></ol><p>“将这字符串中ASCII码最大的字符的地址返回”，函数应为指针类型。</p><p><code>char *getmax(char s[])</code></p><ol start="2"><li>如何表示字符串中ASCII码最大的字符的地址？</li></ol><p>用该数组元素地址 <code>&amp;s[imax]</code>或<code>s+imax</code>表示，imax：该字符在数组中的位置。</p><p>e.g:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">char</span> *<span class="title">getmax</span><span class="params">(<span class="type">char</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">1</span>,imax=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(s[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;s[imax])</span><br><span class="line">            imax=i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s+imax; <span class="comment">//return &amp;s[imax];</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *max; <span class="comment">//赋给指针类型的变量。</span></span><br><span class="line">max=<span class="built_in">getmax</span>(s);</span><br><span class="line"><span class="built_in">puts</span>(max); <span class="comment">//puts()里面是地址，所以可以”puts(i+imax)“</span></span><br></pre></td></tr></table></figure><ul><li>返回值为指针的函数，要注意返回值的指向。</li></ul><h2 id="9-2-作用域与存储类别"><a href="#9-2-作用域与存储类别" class="headerlink" title="9.2 作用域与存储类别"></a>9.2 作用域与存储类别</h2><h3 id="作用域与生存期的概念"><a href="#作用域与生存期的概念" class="headerlink" title="作用域与生存期的概念"></a>作用域与生存期的概念</h3><ul><li>作用域（可见性）：在何范围内可被访问；</li><li>生存期：在什么 时间内存在。</li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">digit</span><span class="params">(<span class="type">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x!=<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> k;  <span class="comment">//digit函数中x的作用域</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> x;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">digit</span>(x)&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//main函数中x的作用域</span></span><br><span class="line">&#125;<span class="comment">//整个程序：x的生存期</span></span><br></pre></td></tr></table></figure><p>根据作用域和生存期，变量可分为：</p><ul><li>全局变量（外部变量）：<ul><li>在函数外部定义的变量</li></ul></li><li>周期变量（内部变量）：<ul><li>在函数内部定义的变量，包括形式参数</li></ul></li></ul><p>存储类型：</p><ul><li><p>auto</p><ul><li>局部，生存期：定义它的分程序内</li></ul></li><li><p>static</p><ul><li>局部，生存期</li></ul></li><li><p>外部变量</p></li></ul><h3 id="自动局部变量"><a href="#自动局部变量" class="headerlink" title="自动局部变量"></a>自动局部变量</h3><ul><li>存储类型auto，可缺省</li><li>作用域：定义点开始到所在的分程序结束。</li><li>生存期：<strong>所在分程序执行期间。</strong></li><li>开始执行分程序就生成，执行结束就消亡。</li><li>初始化：<strong>缺省值为随机值。</strong></li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x!=<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> k;  <span class="comment">//digit函数中x的作用域</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> x;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">digit</span>(x)&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//main函数中x的作用域</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>自动局部变量示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x++;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">5</span>;  <span class="comment">//auto int k=5;</span></span><br><span class="line">    k++;</span><br><span class="line">    <span class="keyword">return</span> x+k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">2</span>; <span class="comment">//auto int k=2;</span></span><br><span class="line">    cout&lt;&lt;<span class="built_in">f</span>(k)&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">f</span>(k)&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：</p><ul><li>f函数中的k和main函数中的k会冲突吗？</li></ul><p>答：不会冲突。不同的函数内可使用相同名称的自动局部变量，它们<strong>占用不同的存储单元</strong>，只能在各自的函数内被使用，<strong>彼此互不干扰。</strong></p><ul><li>main函数中两次调用f函数，第二次调用时，f函数中的x,k和第一次调用时使用相同的内存单元吗？</li></ul><p>答：若一个函数被多次调用，每一次函数调用时，系统都会为自动局部变量重新分配存储单元，并重新初始化。函数调用结束后，释放为自动局部变量分配的存储单元，<strong>函数中自动局部变量的值不会带到下一次调用中</strong>。</p><h3 id="静态局部变量"><a href="#静态局部变量" class="headerlink" title="静态局部变量"></a>静态局部变量</h3><ul><li>存储类别static</li><li>作用域：定义点开始到所在的分程序结束。</li><li>生存期：<strong>程序的整个执行周期。</strong></li><li>初始化：可初始化，<strong>缺省值为0或’\0’</strong></li></ul><p><strong>静态局部变量VS自动局部变量</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    i++;j++;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;i=&quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;j=&quot;</span>&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">        <span class="built_in">test</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自动局部变量i，每次调用函数都重新为他分配存储单元并初始化。</li><li>静态局部变量j，只在第一次调用函数时分配存储单元并初始化。</li></ul><p>静态局部变量特点：</p><ul><li>只在第一次调用函数时为静态局部变量分配存储空间，函数调用结束不会释放为静态局部变量分配新的存储空间。</li><li>静态局部变量只初始化一次</li><li>若一个函数被调用多次，对静态局部变量而言，前一次调用的结果会带到下一次去。</li></ul><p>问：</p><p>第一次调用test结束，返回main函数后，j的存储空间没有释放，在main函数能访问j吗？</p><p>答：在一个分程序中定义的静态局部变量，在其他分程序中，<strong>是生存期，不是作用域，不可访问。</strong></p><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><ul><li>作用域：定义点开始到所在的文件结束。</li><li>生存期：<strong>程序的整个执行周期。</strong></li><li>初始化：可初始化，<strong>缺省值为0或’\0’</strong></li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m=<span class="number">10</span>;<span class="comment">//全局变量m</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f1</span><span class="params">(<span class="type">int</span> n)</span>  <span class="comment">//形参n（局部变量），传值参数，在f1中的变化并不改变真正的n</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=<span class="number">2</span>*n;m=m/<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;  <span class="comment">//全局变量n</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;n=<span class="number">5</span>;m++;++;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">2</span>;   <span class="comment">//局部变量n</span></span><br><span class="line">    <span class="built_in">f1</span>(n);<span class="built_in">f2</span>();</span><br><span class="line">    cout&lt;&lt;m&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/image-20231102103809883.png" alt="image-20231102103809883"></p><p>注意：</p><ul><li>当全局变量与局部变量同名且作用域有重叠时，<strong>在局部变量的作用域内， 起作用的是局部变量</strong>，而全局变量被“屏蔽”掉。</li></ul><p><img src="/img/image-20231102104244452.png" alt="image-20231102104244452"></p><p>全局变量可在多个函数内使用，前一次的计算结果会带到下一次使用中。</p><h4 id="扩展全局变量的作用域"><a href="#扩展全局变量的作用域" class="headerlink" title="扩展全局变量的作用域"></a>扩展全局变量的作用域</h4><ul><li>全局变量的作用域：定义点开始到所在的文件结束。</li><li>可用<strong>extern关键字</strong>扩展全局变量作用域。</li></ul><p><strong>扩展到定义点以前</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//extern int i</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//extern int i</span></span><br><span class="line">    cout&lt;&lt;i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> i=<span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="type">int</span> j=<span class="number">20</span>;</span><br><span class="line">    cout&lt;&lt;j;</span><br><span class="line">    <span class="built_in">fun</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用域横向扩展</strong></p><ul><li>1个C&#x2F;C++项目可包含多个源文件</li><li>在一个源文件中要引用另一个源文件中定义的全局变量，使用前须用<strong>extern声明符</strong>对其进行扩展</li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file1.cpp</span></span><br><span class="line"><span class="type">int</span> max1,min1;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">maxmin</span><span class="params">(<span class="type">int</span> x[],<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    max1=x[<span class="number">0</span>];min1=x[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x[i]&gt;max1)max1=x[i];</span><br><span class="line">        <span class="keyword">if</span>(x[i]&lt;min1)min1=x[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file2.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> ……</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> max1,min1;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>]=&#123;<span class="number">11</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">-4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">20</span>&#125;;</span><br><span class="line">    <span class="built_in">maxmin</span>(a,<span class="number">10</span>);</span><br><span class="line">    cout&lt;&lt;max1&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;min1&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-3-递归函数-（考试只考概念，不考编程）"><a href="#9-3-递归函数-（考试只考概念，不考编程）" class="headerlink" title="9.3 递归函数 （考试只考概念，不考编程）"></a>9.3 递归函数 （考试只考概念，不考编程）</h2><h3 id="递归的概念"><a href="#递归的概念" class="headerlink" title="递归的概念"></a>递归的概念</h3><p>用自身的结构描述自身</p><p>例：递归的阶乘定义</p><p><code>n!=n*(n-1)!1</code> (n&gt;0)</p><p>递归反映问题分解的思维。</p><h3 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h3><p>函数在函数体内直接或间接地调用自身，称递归函数。</p><ul><li>直接递归</li><li>间接递归：函数通过其他函数间接调用自身</li></ul><p><strong>例1：求<code>n!</code></strong></p><p>思路：达到终结条件，直接求解；未达终结条件，递归调用。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">long</span> <span class="title">fac</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (n*<span class="built_in">fac</span>(n<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">fac</span>(<span class="number">3</span>)&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>); <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例2：计算斐波那契数列</strong></p><p>f(n)&#x3D;f(n-1)+f(n-2)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">fib</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>n==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span> (<span class="built_in">fib</span>(n<span class="number">-1</span>)+<span class="built_in">fib</span>(n<span class="number">-2</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意递归函数一定要有<strong>终结条件</strong></p><h3 id="递归与迭代"><a href="#递归与迭代" class="headerlink" title="递归与迭代"></a>递归与迭代</h3><p>任何用递归解决的问题都可以用迭代非递归解决。</p><p><strong>例1：求<code>n!</code></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    s=s*i;</span><br></pre></td></tr></table></figure><p>迭代算法效率高。</p><p>根据问题特征决定用迭代还是递归</p><h3 id="递归使用"><a href="#递归使用" class="headerlink" title="递归使用"></a>递归使用</h3><h4 id="例：二分法查找"><a href="#例：二分法查找" class="headerlink" title="例：二分法查找"></a>例：二分法查找</h4><p>终结条件：</p><ul><li>key&#x3D;&#x3D;a[mid]</li><li>low&gt;high</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Binary_Search</span><span class="params">(<span class="type">int</span> low,<span class="type">int</span> high,<span class="type">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(low&gt;high)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(key==a[mid])</span><br><span class="line">        <span class="keyword">return</span> mid;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(key&lt;a[mid])</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Binary_Search</span>(low,mid<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">return</span> <span class="built_in">Binary_Search</span>(mid<span class="number">+1</span>,high); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="例：进制转换"><a href="#例：进制转换" class="headerlink" title="例：进制转换"></a>例：进制转换</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">convert</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> b[<span class="number">17</span>]=<span class="string">&quot;0123456789ABCDEF&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(m!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">convert</span>(m/r,r);</span><br><span class="line">        cout&lt;&lt;b[m%r];  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>编写递归函数int sum(int a[],int n)，其功能是求长度为n的数组的累加和，在主函数中随机产生10个两位数，调用sum函数，求这10个数的和。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//sum1:迭代</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum1</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> sos=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        sos += a[i];</span><br><span class="line">    <span class="keyword">return</span> sos;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sum2:递归</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum2</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">sos</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">0</span>)</span><br><span class="line">        sos = a[n - <span class="number">1</span>] + <span class="built_in">sum2</span>(a, n - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> sos;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i,s[N],sos1,sos2;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;   </span><br><span class="line">        s[i] = <span class="number">10</span> + <span class="built_in">rand</span>() % <span class="number">89</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; s[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    sos1 = <span class="built_in">sum1</span>(s, <span class="number">10</span>);</span><br><span class="line">    sos2 = <span class="built_in">sum2</span>(s, <span class="number">10</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;10个数迭代求得之和为：&quot;</span> &lt;&lt; sos1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;10个数递归求得之和为：&quot;</span> &lt;&lt; sos2 &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>编写函数get_max，其功能是将字符串s中最大字符的地址返回，再编写一个主函数，调用该函数，将字符串s中从最大字符开始的子串中小写字母转换成大写字母，然后输出新字符串s。例如，假设s的内容为“qwertyou”，则从最大字符’y’开始的子串为“you”，处理后的s为“qwertYOU”。</p><p>函数形式为：char *get_max(char s[])</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">char</span>* <span class="title">get_max</span><span class="params">(<span class="type">char</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> imax=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;s[i]!=<span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt; s[imax])</span><br><span class="line">            imax = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &amp;s[imax];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i;</span><br><span class="line">    <span class="type">char</span>* imax;</span><br><span class="line">    <span class="type">char</span> a[N];</span><br><span class="line">    <span class="built_in">gets_s</span>(a);</span><br><span class="line">    imax = <span class="built_in">get_max</span>(a);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;*(imax+i)!=<span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">        *(imax + i) -= <span class="number">32</span>;</span><br><span class="line">    <span class="built_in">puts</span>(imax);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似的课上例：</p><p><strong>【例5.9】search函数的功能是在一字符串中查找某一指定的字符,若找到，则返回字符串中这个字符的地址，否则返回NULL，主函数调用search函数，并输出查找到的那个字符后的子串。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">char</span> *<span class="title">search</span><span class="params">(<span class="type">char</span> s[],<span class="type">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>(                        )</span><br><span class="line">       <span class="keyword">if</span>(s[i]!=ch) </span><br><span class="line">            i++;</span><br><span class="line">       <span class="keyword">else</span>              </span><br><span class="line">                                   ;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="type">char</span> s[<span class="number">100</span>],ch,*p;</span><br><span class="line">     <span class="built_in">gets</span>(s);</span><br><span class="line">     cin&gt;&gt;ch;</span><br><span class="line">                                  ;</span><br><span class="line">     <span class="keyword">if</span>(p!=<span class="literal">NULL</span>) </span><br><span class="line">          cout&lt;&lt;p&lt;&lt;endl;</span><br><span class="line">     <span class="keyword">else</span>  </span><br><span class="line">          cout&lt;&lt;<span class="string">&quot;not found\n&quot;</span>;</span><br><span class="line">     <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第八讲 函数</title>
      <link href="/2024/02/05/%E7%AC%AC%E5%85%AB%E8%AE%B2-%E5%87%BD%E6%95%B0/"/>
      <url>/2024/02/05/%E7%AC%AC%E5%85%AB%E8%AE%B2-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="8-1-代码重用和模块化思想"><a href="#8-1-代码重用和模块化思想" class="headerlink" title="8.1 代码重用和模块化思想"></a>8.1 代码重用和模块化思想</h2><p>大量代码重复，降低开发效率</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> a,b,c,d,e,f,g,h,i;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;e&gt;&gt;f&gt;&gt;g&gt;&gt;h&gt;&gt;i;</span><br><span class="line">    <span class="function"><span class="type">float</span> <span class="title">area</span><span class="params">(<span class="type">float</span> x,<span class="type">float</span> y,<span class="type">float</span> z)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">float</span> c,s;</span><br><span class="line">        c=(x+y+z)/<span class="number">2</span>;</span><br><span class="line">        s=<span class="built_in">sqrt</span>((c-x)*(c-y)*(c-z));</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    s=<span class="built_in">area</span>(a,b,c)+<span class="built_in">area</span>(d,e,f)+<span class="built_in">area</span>(g,h,i);</span><br><span class="line">    cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数研究的3要素：功能、输入值、输出值。</p><h2 id="8-2-函数的定义、调用与说明"><a href="#8-2-函数的定义、调用与说明" class="headerlink" title="8.2 函数的定义、调用与说明"></a>8.2 函数的定义、调用与说明</h2><h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">函数类型 函数名(形式参数类型表)</span><br><span class="line">&#123;</span><br><span class="line">    函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><p>函数名需符合标识符的命名规则</p></li><li><p>形参（形式参数）是函数接受调用者向函数传值的主要途径。</p><ul><li>形参类型表形式为：</li></ul><p>类型 形参名1,类型 形参名2,…,类型 形参名n</p><ul><li>定义时应分别给出每一个形参的类型</li></ul><p><code>float area(float x,floaty,float z)</code></p><p>不能写成：</p><p><code>float area(float x,y,z)</code></p><ul><li>多个形参用逗号分隔；没有形参圆括号不能省略。</li></ul></li><li><p>函数体由语句、分程序组成，用来完成函数的功能。</p><ul><li>函数体中不允许再嵌套定义函数。</li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">f2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>函数的类型就是函数返回值的类型</p><ul><li><p>函数通过return语句返回一个值给调用它的函数</p></li><li><p>函数返回值和函数类型最好一致。若不一致，该值转换为函数的类型。</p></li></ul><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(intx)</span>:</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    <span class="type">float</span> b=x<span class="number">+3.5</span>;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;</span><br></pre></td></tr></table></figure></li></ul><pre><code>### 例：打印多个三角塔*   使用函数pic*   `pic()`无参数；没有返回值（void型，无类型或空类型）<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">pic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">setw</span>(<span class="number">10</span>-i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>*i<span class="number">-1</span>;j++)</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;*&quot;</span>;</span><br><span class="line">        cout&lt;&lt;endl;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//return;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">pic</span>();</span><br><span class="line">    <span class="built_in">pic</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>### 函数调用形式：`函数名(实在参数表)`例：求max<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmax</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> z;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;y)</span><br><span class="line">        z=x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        z=y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c,m,n;</span><br><span class="line">    cin&gt;&gt;a,b,c;</span><br><span class="line">    m=<span class="built_in">getmax</span>(a,b);</span><br><span class="line">    n=<span class="built_in">getmax</span>(c,m);</span><br><span class="line">    cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>说明：*   实参（实在参数）与函数定义时形参的个数、类型、次序要一一对应。    *   函数调用形式：        *   出线在表达式中：        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m=<span class="built_in">getmax</span>(a,b);</span><br><span class="line"><span class="comment">//有返回值；</span></span><br></pre></td></tr></table></figure>        *   语句：        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pic</span>();</span><br><span class="line"><span class="comment">//无返回值</span></span><br></pre></td></tr></table></figure>    #### **函数调用与返回过程**<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">getmax</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> z;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;y)</span><br><span class="line">        z=x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        z=y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    m=<span class="built_in">getmax</span>(a,b);</span><br><span class="line">    <span class="comment">//实参a,b传入形参x,y</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>#### **函数的嵌套调用**例：求正整数m,n的最大公约数和最小公倍数。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最大公约数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="type">int</span> r=m%n)</span><br><span class="line">    &#123;m=n;n=r;&#125;</span><br><span class="line">    <span class="keyword">return</span>(n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最小公倍数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sct</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>(m*n/<span class="built_in">gcd</span>(m,n);)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>注：在函数调用过程中，如果函数funA调用了函数funB，函数funB又调用了函数funA，这称为函数的间接递归调用。#### 函数说明函数的调用在前，定义在后时，则必须对函数进行说明，形式：`函数类型 函数名(形式参数类型表);`注意：*   函数说明和所定义函数的函数在**返回类型**、**函数名**、**参数类型**和**个数**必须完全一致；    *   函数说明中的参数名可以缺省（只给出形参的个数和类型），也可以与函数定义中的参数名不同。        如：        `int max(int, int)`        ==可能考改错题！==    ### 例1.  若有以下函数调用语句：`fun(a+b,(x,y),fun(n+k,d,(a,b)));`在此函数调用语句中实参的个数是：3个## 8.3 函数间参数传递参数传递方式：*   传值参数*   传址参数*   引用参数### 先导：实参和形参实参（主调）、形参（被调）实参有存储空间，形参的的空间在函数被调时分配，可能是传数据过来（得到值，对实参无影响），也可能是传地址（到地址里干活，实参就变了）。### 传值参数*   形参是基本数据类型的变量#### 实参与形参结合过程*   函数调用时，系统为形参分配新存储单元，并将实参的值赋给相应的形参；*   通过对形参的操作完成函数体，被调函数的操作都在形参的存储单元中进行，与实参无关；*   释放形参所占用的存储单元，返回主调函数。例：交换两个整数的值<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    temp=a;a=b;b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入x,y&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="built_in">swap</span>(x,y); <span class="comment">//实参可以是常量、变量、表达式</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;换后x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;y=&quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出的x,y并没有交换，怎么会是呢？</span></span><br></pre></td></tr></table></figure>**分析：**`swap()`对形参`a,b`操作，对实参`x,y`无影响。#### 传值参数传递特点参数值从实参向形参单向传递，函数中形参值的改变，对实参值无影响。### 引用参数#### 引用的概念*   引用：一种特殊类型的变量，可认为是另一变量的别名。        *   例：`int x=3,&amp;a=x;`        a是x的引用    *   若a是x的引用，**a和x使用同一内存单元，是同一变量的两个名字**，a变则x变，x变则a变。    #### 引用参数作函数参数*   形参是引用，形参和实参使用相同的内容单元例：（修改前例）<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> &amp;a,<span class="type">int</span> &amp;b)</span><span class="comment">//形参定义为引用参数(引用变量)</span></span></span><br><span class="line"><span class="function">    <span class="comment">//&amp;是引用声明符</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    temp=a;a=b;b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入x,y&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="built_in">swap</span>(x,y); <span class="comment">//形参引用时，实参只能为变量名，不能为常量或表达式</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;换后x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;y=&quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成功力！</span></span><br></pre></td></tr></table></figure>**分析：**`swap()`对**形参**`a,b`操作，等价于对**实参**`x,y`操作。#### 例1编一函数，判别一个自然数是否是降序数，同时求出该数各位数之和并加以调用，若是降序数输出“ yes”，否则输出“ no”。例如： 3、 441、 531 是降序数，而 412 不是降序数。**分析：***   函数如何返回两个值给主函数？        *   是否为降序数return返回；    *   各位数上的和借助引用参数。*   如何判断自然数n是否为降序数？        *   取该数相邻两位比较        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> flag=<span class="number">1</span>;<span class="comment">//假定x是降序数</span></span><br><span class="line"><span class="keyword">while</span>(n&gt;=<span class="number">10</span>&amp;&amp;flag)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(n/<span class="number">10</span>%<span class="number">10</span></span><br></pre></td></tr></table></figure>        ``        函数：（修改前例）        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">drop</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> &amp;sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> x=n;</span><br><span class="line">  <span class="type">bool</span> flag=<span class="number">1</span>;<span class="comment">//判断是否为降序数</span></span><br><span class="line">  <span class="keyword">while</span>(n&gt;=<span class="number">10</span>&amp;&amp;flag)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">if</span>(n/<span class="number">10</span>%<span class="number">10</span></span><br></pre></td></tr></table></figure>        `        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> m,sum1=<span class="number">0</span>;  <span class="comment">//实参</span></span><br><span class="line">  cin&gt;&gt;m;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">drop</span>(m,sum1)) <span class="comment">//flag==1</span></span><br><span class="line">      cout&lt;</span><br></pre></td></tr></table></figure>        ` ``````` ```` ``### 形参是指针变量修改前例<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    temp=a;a=b;b=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;请输入x,y&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">    <span class="built_in">swap</span>(&amp;x,&amp;y); <span class="comment">//这里传的都是地址</span></span><br><span class="line">    <span class="comment">//形参是指针变量时，实参可以为变量地址、指针变量或数组名</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;换后x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;y=&quot;</span>&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>#### 指针参数传递特点*   形参中存放实参内存单元的地址*   改变形参指向的内存单元的内容就是改变实参的值*   不能在函数内对指针变量`*x++`等，需要令`p++`，再令`*x=p`。对比：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span>*b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    temp=*a;*a=*b;*b=temp;</span><br><span class="line">&#125;   <span class="comment">//将形参a,b内存的地址内的东西交换，实参也交换。</span></span><br><span class="line"><span class="comment">//or:</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> *temp;</span><br><span class="line">    temp=a;a=b;b=temp;</span><br><span class="line">&#125;  <span class="comment">//交换的是形参a,b（指针）内的值，从a里存x的值b里存y的值，变成a里存y的值b里存x的值</span></span><br></pre></td></tr></table></figure>第一段ok:把实参 a 和 b 变量的地址传递给形参指针 x 和 y， 在被调函数内通过交换 x 和 y 所指向的内存单元的内容间接交换了 a 和b 的值 。第二段no:只有对形参指针变量所指的内容进行修改，对应的实参值才会随之改变。&gt; 要看交换的是什么，是形参的值（实参值跟着变）还是形参本身（地址换一换）？#### 例2随机生成10个1~100数放在一维数组中，求其平均值及最大元素值，并在主函数中显示结果。**分析：***   如何把数组传递给函数用于计算    *   传递数组的首地址，对应的形参为指针变量*   如何传回二值    *   指针参数/引用参数<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">float</span> *p,<span class="type">float</span> *p1,<span class="type">float</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> sum,max;</span><br><span class="line">    sum=max=*p++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max&gt;*p)</span><br><span class="line">            max=*p;</span><br><span class="line">        sum+=*p;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    *p1=sum/N;</span><br><span class="line">    *p2=max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//main调用</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> a[<span class="number">10</span>],aver,max1,x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">        x=<span class="built_in">rand</span>()%<span class="number">100</span><span class="number">+1</span>;</span><br><span class="line">        a[i]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fun</span>(a,&amp;aver,&amp;max1);</span><br><span class="line">    cout&lt;&lt;aver&lt;&lt;max1&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>*   无法传回多个值的解决方法：如上例，用void函数带指针变量&amp;aver等，在函数内修改形参指向的内容。### 指针参数作实参e.g.<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> *a,*b;</span><br><span class="line">    b=<span class="keyword">new</span> <span class="type">char</span>[<span class="number">20</span>]; </span><br><span class="line">    a=<span class="keyword">new</span> <span class="type">char</span>[<span class="number">20</span>];</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="built_in">copy_string</span>(a,b);</span><br><span class="line">    cout&lt;&lt;a&lt;&lt; b&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">delete</span> []a; </span><br><span class="line">    <span class="keyword">delete</span> []b;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>### 例：打印万年历**自顶向下逐步求精**的设计思想*   年历分解为月历*   月历=月头+1日打印位置+月总天数+周六换行    *   1日打印位置    *   闰年判别    *   月总天数    *   计算每月1日与1900.1.1间差距天数。`d%7=0~6`，分别代表周一~周日![image-20231026105258695](img/image-20231026105258695.png)方法：从问题的总体目标开始，忽略底层细节，构造底层结构，再不断分解、细化。## 8.4 数组名作函数参数形参为数组名，实参可以是**数组名**或指针变量。数组作为函数的参数时，系统为形参数组和实参数组分配相同的存储单元。&gt; 一维数组作参数传递时，只用数组名。&gt; &gt; 数组长度用#define N 10或者const N=10解决### 例#### 1编写函数 sort，对包含 n 个元素的整型数组 x 进行递减排序。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> n)</span><span class="comment">//元素个数n需要手动输入</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,k,w;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k=i;</span><br><span class="line">        <span class="keyword">for</span>(j=i<span class="number">+1</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(a[k]&lt;a[j])</span><br><span class="line">                k=j;</span><br><span class="line">        <span class="keyword">if</span>(i!=k)</span><br><span class="line">        &#123;</span><br><span class="line">            w=a[i];</span><br><span class="line">            a[i]=a[k];</span><br><span class="line">            a[k]=w;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>注：*   形参写法：        *   `类型 形参数组名[]`        `void sort(int a[])`    *   数值型数组，数组中元素数n一般作参数，传给形参    **调用***   实参写法：        *   `实参数组名`        `sort(a,10)`    #### 2数字：4bytes，256~65536字符串：n+1个字节## 8.5 参数缺省默认值参数必须从最右边开始，不能跳过最后一个让倒二取默认值。**1、**要求赋予默认值的参数必须放在形参表列中的最右端。如：​ void fun(int i, int j, int k, int m=3,int n=4);**2**、若参数在函数说明中已设置缺省值，则在函数定义中不能重复设置**3**、实参个数至少要等于没有提供默认值的形参个数**假设函数调用语句为：**​ **fun(1,2);** //错误，至少应有三个实参​ **fun(10,20,30);** //正确，m、n取默认值​ **fun(10,20,30,40);** //正确，m取40、n取默认值4​ **fun(10,20,30, ,50);** //错误，只能从左至右匹配## 8.6 函数重载允许函数同名。*   **参数类型不同的重载函数**e.g. int, long, float类型各自的abs()*   **参数个数不同的重载函数**e.g. 2，3，4个数的min()## 作业题### 1编一判断m是否为素数的函数，并在主函数中利用它输出十对最小的孪生素数。所谓孪生素数是指两个相差为2的素数，如3和5，11和13。程序运行结果见下图。函数形式为：`bool isprime(int m)`<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; ; i++)</span><br><span class="line">        <span class="keyword">if</span> (m % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> (i == m)</span><br><span class="line">        flag= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m=<span class="number">2</span>, s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (s &lt; <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isprime</span>(m) &amp;&amp; <span class="built_in">isprime</span>(m + <span class="number">2</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;&lt;&quot;</span> &lt;&lt; m &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m + <span class="number">2</span> &lt;&lt; <span class="string">&quot;&gt;&quot;</span> &lt;&lt; endl;</span><br><span class="line">            s++;</span><br><span class="line">        &#125;</span><br><span class="line">        m++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>### 2编一函数，功能为判断一字符串是否为回文，如果是回文则返回1，否则返回0。回文是指顺读和倒读都一样的字符串，如“deed”和“level”是回文。在主函数中对输入的字符串加以调用。函数形式为：`int huiwen(char s[])`<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">huiwen</span><span class="params">(<span class="type">char</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,m;</span><br><span class="line">    m = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="type">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] != s[m - <span class="number">1</span> - i])</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[N];</span><br><span class="line">    <span class="built_in">gets_s</span>(s);</span><br><span class="line">    <span class="type">int</span> flag;</span><br><span class="line">    flag = <span class="built_in">huiwen</span>(s);</span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>### 3函数的功能是将学生成绩从高分到低分排序，并统计优秀与不及格的人数。用下面两种方法实现：（1）函数形式为：int fun1(int s[],int n,int *x)要求优秀人数通过return返回，不及格人数通过指针参数返回结果。（2）函数形式为：void fun2(int s[],int n,int &amp;x,int &amp;y)要求优秀与不及格的人数通过引用参数返回结果。分别编二个函数，学生人数从键盘输入。函数一：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun1</span><span class="params">(<span class="type">int</span> s[], <span class="type">int</span> n, <span class="type">int</span> *x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,k,t,r=<span class="number">0</span>,p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n<span class="number">-1</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (s[k] &lt; s[j])</span><br><span class="line">                k = j;</span><br><span class="line">        <span class="keyword">if</span> (i != k)</span><br><span class="line">        &#123;</span><br><span class="line">            t = s[i];</span><br><span class="line">            s[i] = s[k];</span><br><span class="line">            s[k] = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt;= <span class="number">90</span>)</span><br><span class="line">            r++;</span><br><span class="line">        <span class="keyword">if</span> (s[i] &lt; <span class="number">60</span>)</span><br><span class="line">            p++;</span><br><span class="line">    &#125;</span><br><span class="line">    *x = p;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> s[N];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入学生人数：&quot;</span>;</span><br><span class="line">    <span class="type">int</span> n,i, num=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入学生成绩（满分100）：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fun1</span>(s, n, &amp;num);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;优秀人数为&quot;</span> &lt;&lt; <span class="built_in">fun1</span>(s, n, &amp;num) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;不及格人数为&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;从高到低排序成绩：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; s[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>函数二：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun2</span><span class="params">(<span class="type">int</span> s[], <span class="type">int</span> n, <span class="type">int</span>&amp; x, <span class="type">int</span>&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j, k, t, r = <span class="number">0</span>, p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (s[k] &lt; s[j])</span><br><span class="line">                k = j;</span><br><span class="line">        <span class="keyword">if</span> (i != k)</span><br><span class="line">        &#123;</span><br><span class="line">            t = s[i];</span><br><span class="line">            s[i] = s[k];</span><br><span class="line">            s[k] = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt;= <span class="number">90</span>)</span><br><span class="line">            r++;</span><br><span class="line">        <span class="keyword">if</span> (s[i] &lt; <span class="number">60</span>)</span><br><span class="line">            p++;</span><br><span class="line">    &#125;</span><br><span class="line">    x = r; y = p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> s[N];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入学生人数：&quot;</span>;</span><br><span class="line">    <span class="type">int</span> n,i, x, y;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入学生成绩（满分100）：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fun2</span>(s, n, x,y);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;优秀人数为&quot;</span> &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;不及格人数为&quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;从高到低排序成绩：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; s[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>### 4编一函数，功能为统计字符串中各个字母（不区分大、小写）出现的频率，同时找出频率出现最高的字母及次数，假设出现次数最多的字母只有一个。函数形式为：void freq(char s[],int p[],char &amp;chmax,int &amp;max)程序运行结果如下：![image-20231027162507116](img/image-20231027162507116.png)<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">freq</span><span class="params">(<span class="type">char</span> s[], <span class="type">int</span> p[], <span class="type">char</span>&amp; chmax, <span class="type">int</span>&amp; max)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> *a = s;</span><br><span class="line">    <span class="keyword">while</span>(*a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*a &gt; <span class="string">&#x27;a&#x27;</span> &amp;&amp; *a &lt; <span class="string">&#x27;z&#x27;</span>  *a&gt;<span class="string">&#x27;A&#x27;</span> &amp;&amp; *a &lt; <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (*a &lt; <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">                p[*a + <span class="number">32</span>]++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p[*a]++;</span><br><span class="line">            <span class="keyword">if</span> (p[*a] &gt; max)</span><br><span class="line">            &#123;</span><br><span class="line">                max = p[*a];</span><br><span class="line">                chmax = *a;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        a++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[N] = <span class="string">&quot;&quot;</span> ;</span><br><span class="line">    <span class="type">char</span> chmax ;</span><br><span class="line">    <span class="type">int</span> p[N]=&#123;&#125;, max=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">gets_s</span>(s);</span><br><span class="line">    <span class="built_in">freq</span>(s, p, chmax, max);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i])</span><br><span class="line">            cout &lt;&lt; <span class="built_in">char</span>(i) &lt;&lt; <span class="string">&quot;----&quot;</span> &lt;&lt; p[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;出现频率最高的字母：&quot;</span> &lt;&lt; chmax &lt;&lt; <span class="string">&quot;----&quot;</span> &lt;&lt; max &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>`` ```` ````` ``````</code></pre>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第七讲 指针和数组</title>
      <link href="/2024/02/05/%E7%AC%AC%E4%B8%83%E8%AE%B2-%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84/"/>
      <url>/2024/02/05/%E7%AC%AC%E4%B8%83%E8%AE%B2-%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h2 id="7-1-指针的基本概念"><a href="#7-1-指针的基本概念" class="headerlink" title="7.1 指针的基本概念"></a>7.1 指针的基本概念</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>每个变量在内存中存放都对应一段地址，其中首字节即为变量的地址，将<strong>存放地址的变量</strong>称为指针变量。</p><p><code>&amp;</code>--取地址运算</p><p><code>&amp;x</code>--变量x的地址</p><p>如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> x=<span class="number">4</span>;</span><br><span class="line">x的地址为<span class="number">1001</span></span><br><span class="line">&amp;x的值为<span class="number">1001</span></span><br><span class="line">*(&amp;x)的值为<span class="number">4</span></span><br></pre></td></tr></table></figure><p><code>*</code>--取内容运算</p><p><code>*(&amp;x)</code>代表到x存放的地址中取内容</p><p><code>b</code>和<code>&amp;b[0]</code>同义。</p><h3 id="指针变量的定义"><a href="#指针变量的定义" class="headerlink" title="指针变量的定义"></a>指针变量的定义</h3><p><code>数据类型 * 标识符;</code></p><ul><li>“数据类型”代表<strong>指针所指向数据</strong>的类型</li><li><code>*</code>不是变量名的一部分，仅仅是指针变量的一个标志。</li></ul><p>例如：</p><p><code>int *p;</code>，p指向可存放一个int型变量的地址</p><p><code>float *q;</code>，q指向可存放一个float型变量的地址。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在定义指针变量的同时为其赋一个地址值。</p><p><code>int a=5, *p=&amp;a</code> 等价于 <code>int a=5, *p; p=&amp;a;</code></p><ul><li>注意：此处被赋值的是<code>p</code>，不是<code>*p</code></li><li>p是指向变量a的指针变量，它会到a 的地址中取数据。</li><li><code>*(&amp;a), *p</code>皆代表a的值。（数据的间接访问）</li></ul><h3 id="常用运算"><a href="#常用运算" class="headerlink" title="常用运算"></a>常用运算</h3><h4 id="赋值运算"><a href="#赋值运算" class="headerlink" title="赋值运算"></a>赋值运算</h4><p>其他运算的前提。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a, *p,*p1,*p2;</span><br><span class="line">p=<span class="literal">NULL</span>;<span class="comment">//指针被赋值为NULL(0)，表示不指向任何对象</span></span><br><span class="line">p=&amp;a;<span class="comment">//p指向变量a</span></span><br><span class="line">p1=&amp;a;</span><br><span class="line">p2=p1;<span class="comment">//同类型的指针变量相互赋值</span></span><br><span class="line">p=<span class="keyword">new</span> <span class="type">int</span>;<span class="comment">//动态为p分配存放一个整数的空间</span></span><br><span class="line">p=<span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>];<span class="comment">//动态为p分配存放10个整数的空间</span></span><br></pre></td></tr></table></figure><p>假设有定义：</p><p><code>int a,*p;</code></p><p><code>float f;</code></p><p>需避免以下错误：</p><ul><li>随意将一个整数值赋值给指针变量；<code>p=100</code></li><li>为指针变量赋数据类型不一致的变量的地址；<code>p=&amp;f</code></li></ul><h4 id="加减整数的运算"><a href="#加减整数的运算" class="headerlink" title="加减整数的运算"></a>加减整数的运算</h4><p>假设p为指针变量，n为整数，</p><p><code>p+n</code>(<code>p-n</code>) ：指向p后面（前面）的第n个元素。</p><h4 id="自加自减运算"><a href="#自加自减运算" class="headerlink" title="自加自减运算"></a>自加自减运算</h4><p><code>p++</code>或<code>p--</code> ：指向p后面（前面）的一个元素。</p><h4 id="指针相减运算"><a href="#指针相减运算" class="headerlink" title="指针相减运算"></a>指针相减运算</h4><p>两个同类型指针变量相减的结果为这两个地址差之间能存放的数据个数。</p><p>如：</p><p><code>int *p1, *p2;</code></p><p>假设p1指向1000，p2指向1008，则<code>p2-p1</code>的值为：</p><p><code>(1008-1000)/sizeof(int)=2</code></p><ul><li>sizeof() ：求字节数运算<ul><li><code>sizeof(int)=4</code></li><li><code>sizeof(char)=1</code></li><li><code>sizeof(float)=4</code></li><li><code>sizeof(double)=8</code></li></ul></li></ul><h2 id="7-2-指针与一维数组的关系"><a href="#7-2-指针与一维数组的关系" class="headerlink" title="7.2 指针与一维数组的关系"></a>7.2 指针与一维数组的关系</h2><p>设有定义：</p><p><code>int a[10], *p=a;</code></p><p>根据指针运算有如下等价关系：</p><ul><li><code>p&lt;=&gt;a&lt;=&gt;&amp;a[0]</code></li><li><code>p+i&lt;=&gt;a+i&lt;=&gt;&amp;a[i]</code></li><li><code>*(p+i)&lt;=&gt;*(a+i)&lt;=&gt;a[i]</code></li></ul><h3 id="数组元素的表示"><a href="#数组元素的表示" class="headerlink" title="数组元素的表示"></a>数组元素的表示</h3><ol><li>下标表示：<code>数组名[下标]</code></li><li>地址方式：<code>*(地址)</code></li><li>指针方式：<code>*指针变量名</code></li></ol><ul><li>指针与一维数组的关系</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],i,*p=a;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cin&gt;&gt;*p++;    <span class="comment">//顺序从右向左；等价于cin&gt;&gt;*p; p++;</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><p>p与a的区别：</p><ul><li>p是地址变量，a是地址常量</li></ul></li><li><pre><code>*p++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">与</span><br><span class="line"></span><br></pre></td></tr></table></figure>(*p)++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    的区别</span><br><span class="line">    </span><br><span class="line">    *   `*p++`的`++`运算符作用于指针变量，该运算的作用相当于先取出\*p的内容作为表达式的值，然后p再指向下一个元素。</span><br><span class="line">    *   `(*p)++`的`++`运算符作用于指针变量所指内容，运算等价于先取出_p的内容作为表达式的值，然后_p的值再+1</span><br><span class="line"></span><br><span class="line">对比如下：</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;*p++&lt;&lt;endl; //先取p,再地址增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时p地址已增加</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;(*p)++&lt;&lt;endl; //先取p,再对p指向的数据增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时10已增加为11</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>指针和字符串</p></li></ul><p>字符指针也可以处理字符串，其与字符数组处理的区别如下：</p><p>字符数组</p><p>字符指针</p><p>定义</p><p>char s[6];</p><p><code>char *p</code></p><p>初始化</p><p>chars[]&#x3D;”china”;</p><p>char p&#x3D;”china”; char *p&#x3D;s;</p><p>赋值</p><p>s[0]&#x3D;’c’; s[1]&#x3D;’h’; cin&gt;&gt;s; gets(s);</p><p>p&#x3D;”china”; 先p&#x3D;new char[6];或p&#x3D;s;之后再cin&gt;&gt;p;或gets(p);</p><p>运算</p><p>字符数组名s不能进行自增、自减运算</p><p>指针变量p可以进行自增、自减运算</p><p>例：输入一字符串，用指针方式逐一显示字符，并求其长度</p><p>要点：</p><ul><li><p>用字符指针处理字符串，在输入前要先为其申请存储空间；</p></li><li><p>利用指针移动逐一访问数组元素时该指针最终指向’\0’;</p></li><li><p>利用指向字符串尾部和头部的两个指针相减运算可以求得字符串长度。</p></li><li><p>指针与一维数组的关系</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],i,*p=a;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cin&gt;&gt;*p++;    <span class="comment">//顺序从右向左；等价于cin&gt;&gt;*p; p++;</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><p>p与a的区别：</p><ul><li>p是地址变量，a是地址常量</li></ul></li><li><pre><code>*p++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">与</span><br><span class="line"></span><br></pre></td></tr></table></figure>(*p)++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    的区别</span><br><span class="line">    </span><br><span class="line">    *   `*p++`的`++`运算符作用于指针变量，该运算的作用相当于先取出\*p的内容作为表达式的值，然后p再指向下一个元素。</span><br><span class="line">    *   `(*p)++`的`++`运算符作用于指针变量所指内容，运算等价于先取出_p的内容作为表达式的值，然后_p的值再+1</span><br><span class="line"></span><br><span class="line">对比如下：</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;*p++&lt;&lt;endl; //先取p,再地址增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时p地址已增加</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;(*p)++&lt;&lt;endl; //先取p,再对p指向的数据增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时10已增加为11</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>指针和字符串</p></li></ul><p>字符指针也可以处理字符串，其与字符数组处理的区别如下：</p><p>字符数组</p><p>字符指针</p><p>定义</p><p>char s[6];</p><p><code>char *p</code></p><p>初始化</p><p>chars[]&#x3D;”china”;</p><p>char p&#x3D;”china”; char *p&#x3D;s;</p><p>赋值</p><p>s[0]&#x3D;’c’; s[1]&#x3D;’h’; cin&gt;&gt;s; gets(s);</p><p>p&#x3D;”china”; 先p&#x3D;new char[6];或p&#x3D;s;之后再cin&gt;&gt;p;或gets(p);</p><p>运算</p><p>字符数组名s不能进行自增、自减运算</p><p>指针变量p可以进行自增、自减运算</p><p>例：输入一字符串，用指针方式逐一显示字符，并求其长度</p><p>要点：</p><ul><li>用字符指针处理字符串，在输入前要先为其申请存储空间；</li><li>利用指针移动逐一访问数组元素时该指针最终指向’\0’;</li><li>利用指向字符串尾部和头部的两个指针相减运算可以求得字符串长度。</li><li>指针与一维数组的关系</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],i,*p=a;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cin&gt;&gt;*p++;    <span class="comment">//顺序从右向左；等价于cin&gt;&gt;*p; p++;</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><p>p与a的区别：</p><ul><li>p是地址变量，a是地址常量</li></ul></li><li><pre><code>*p++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">与</span><br><span class="line"></span><br></pre></td></tr></table></figure>(*p)++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    的区别</span><br><span class="line">    </span><br><span class="line">    *   `*p++`的`++`运算符作用于指针变量，该运算的作用相当于先取出\*p的内容作为表达式的值，然后p再指向下一个元素。</span><br><span class="line">    *   `(*p)++`的`++`运算符作用于指针变量所指内容，运算等价于先取出_p的内容作为表达式的值，然后_p的值再+1</span><br><span class="line"></span><br><span class="line">对比如下：</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;*p++&lt;&lt;endl; //先取p,再地址增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时p地址已增加</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;(*p)++&lt;&lt;endl; //先取p,再对p指向的数据增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时10已增加为11</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>指针和字符串</p></li></ul><p>字符指针也可以处理字符串，其与字符数组处理的区别如下：</p><p>字符数组</p><p>字符指针</p><p>定义</p><p>char s[6];</p><p><code>char *p</code></p><p>初始化</p><p>chars[]&#x3D;”china”;</p><p>char p&#x3D;”china”; char *p&#x3D;s;</p><p>赋值</p><p>s[0]&#x3D;’c’; s[1]&#x3D;’h’; cin&gt;&gt;s; gets(s);</p><p>p&#x3D;”china”; 先p&#x3D;new char[6];或p&#x3D;s;之后再cin&gt;&gt;p;或gets(p);</p><p>运算</p><p>字符数组名s不能进行自增、自减运算</p><p>指针变量p可以进行自增、自减运算</p><p>例：输入一字符串，用指针方式逐一显示字符，并求其长度</p><p>要点：</p><ul><li><p>用字符指针处理字符串，在输入前要先为其申请存储空间；</p></li><li><p>利用指针移动逐一访问数组元素时该指针最终指向’\0’;</p></li><li><p>利用指向字符串尾部和头部的两个指针相减运算可以求得字符串长度。</p></li><li><p>指针与一维数组的关系</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],i,*p=a;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cin&gt;&gt;*p++;    <span class="comment">//顺序从右向左；等价于cin&gt;&gt;*p; p++;</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><p>p与a的区别：</p><ul><li>p是地址变量，a是地址常量</li></ul></li><li><pre><code>*p++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">与</span><br><span class="line"></span><br></pre></td></tr></table></figure>(*p)++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    的区别</span><br><span class="line">    </span><br><span class="line">    *   `*p++`的`++`运算符作用于指针变量，该运算的作用相当于先取出\*p的内容作为表达式的值，然后p再指向下一个元素。</span><br><span class="line">    *   `(*p)++`的`++`运算符作用于指针变量所指内容，运算等价于先取出_p的内容作为表达式的值，然后_p的值再+1</span><br><span class="line"></span><br><span class="line">对比如下：</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;*p++&lt;&lt;endl; //先取p,再地址增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时p地址已增加</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;(*p)++&lt;&lt;endl; //先取p,再对p指向的数据增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时10已增加为11</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>指针和字符串</p></li></ul><p>字符指针也可以处理字符串，其与字符数组处理的区别如下：</p><p>字符数组</p><p>字符指针</p><p>定义</p><p>char s[6];</p><p><code>char *p</code></p><p>初始化</p><p>chars[]&#x3D;”china”;</p><p>char p&#x3D;”china”; char *p&#x3D;s;</p><p>赋值</p><p>s[0]&#x3D;’c’; s[1]&#x3D;’h’; cin&gt;&gt;s; gets(s);</p><p>p&#x3D;”china”; 先p&#x3D;new char[6];或p&#x3D;s;之后再cin&gt;&gt;p;或gets(p);</p><p>运算</p><p>字符数组名s不能进行自增、自减运算</p><p>指针变量p可以进行自增、自减运算</p><p>例：输入一字符串，用指针方式逐一显示字符，并求其长度</p><p>要点：</p><ul><li><p>用字符指针处理字符串，在输入前要先为其申请存储空间；</p></li><li><p>利用指针移动逐一访问数组元素时该指针最终指向’\0’;</p></li><li><p>利用指向字符串尾部和头部的两个指针相减运算可以求得字符串长度。</p></li><li><p>指针与一维数组的关系</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],i,*p=a;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cin&gt;&gt;*p++;    <span class="comment">//顺序从右向左；等价于cin&gt;&gt;*p; p++;</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><p>p与a的区别：</p><ul><li>p是地址变量，a是地址常量</li></ul></li><li><pre><code>*p++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">与</span><br><span class="line"></span><br></pre></td></tr></table></figure>(*p)++<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    的区别</span><br><span class="line">    </span><br><span class="line">    *   `*p++`的`++`运算符作用于指针变量，该运算的作用相当于先取出\*p的内容作为表达式的值，然后p再指向下一个元素。</span><br><span class="line">    *   `(*p)++`的`++`运算符作用于指针变量所指内容，运算等价于先取出_p的内容作为表达式的值，然后_p的值再+1</span><br><span class="line"></span><br><span class="line">对比如下：</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;*p++&lt;&lt;endl; //先取p,再地址增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时p地址已增加</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[3]=&#123;10,20,30&#125;,*p;</span><br><span class="line">    p=a;</span><br><span class="line">    cout&lt;&lt;(*p)++&lt;&lt;endl; //先取p,再对p指向的数据增加</span><br><span class="line">    cout&lt;&lt;*p&lt;&lt;endl;  //这时10已增加为11</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>指针和字符串</p></li></ul><p>字符指针也可以处理字符串，其与字符数组处理的区别如下：</p><p>字符数组</p><p>字符指针</p><p>定义</p><p>char s[6];</p><p><code>char *p</code></p><p>初始化</p><p>chars[]&#x3D;”china”;</p><p>char p&#x3D;”china”; char *p&#x3D;s;</p><p>赋值</p><p>s[0]&#x3D;’c’; s[1]&#x3D;’h’; cin&gt;&gt;s; gets(s);</p><p>p&#x3D;”china”; 先p&#x3D;new char[6];或p&#x3D;s;之后再cin&gt;&gt;p;或gets(p);</p><p>运算</p><p>字符数组名s不能进行自增、自减运算</p><p>指针变量p可以进行自增、自减运算</p><p>例：输入一字符串，用指针方式逐一显示字符，并求其长度</p><p>要点：</p><ul><li>用字符指针处理字符串，在输入前要先为其申请存储空间；</li><li>利用指针移动逐一访问数组元素时该指针最终指向’\0’;</li><li>利用指向字符串尾部和头部的两个指针相减运算可以求得字符串长度。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> *p,*q;</span><br><span class="line">    p=<span class="keyword">new</span> <span class="type">char</span>[<span class="number">100</span>];  <span class="comment">//为p申请能存放100个字符的空间</span></span><br><span class="line">    <span class="built_in">gets</span>(p);</span><br><span class="line">    q=p;  <span class="comment">//q记录字符串的首地址</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输出每个字符：&quot;</span>;</span><br><span class="line">    <span class="keyword">while</span>(*p!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        cout&lt;&lt;*p++&lt;&lt;<span class="string">&#x27; &#x27;</span>;   <span class="comment">//退出循环后p指向串尾</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\n字符串长度：&quot;</span>&lt;&lt;p-q&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-3-字符指针数组"><a href="#7-3-字符指针数组" class="headerlink" title="7.3 字符指针数组"></a>7.3 字符指针数组</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *book[]=&#123;<span class="string">&quot;Fortran&quot;</span>,<span class="string">&quot;C++&quot;</span>,<span class="string">&quot;Pascal&quot;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> *book[]=&#123;<span class="string">&quot;Fortran&quot;</span>,<span class="string">&quot;C++&quot;</span>,<span class="string">&quot;Pascal&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-4-子串统计"><a href="#7-4-子串统计" class="headerlink" title="7.4 子串统计"></a>7.4 子串统计</h2><p>例：统计字符串s中子串sub出现的次数。</p><blockquote><p>从s首个字符起取和sub子串等长的子串，与sub比较</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> </span></span><br><span class="line"><span class="meta">#deefine N 100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[N],sub[N],s2[N];</span><br><span class="line">    <span class="type">int</span> i,j,<span class="built_in">count</span>(<span class="number">0</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输入字符串&quot;</span>&lt;</span><br></pre></td></tr></table></figure><p>&#96;</p><h2 id="例"><a href="#例" class="headerlink" title="例"></a>例</h2><p>数制转换</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;cin&gt;&gt;m&gt;&gt;r;&#125; <span class="keyword">while</span>&#123;(r&gt;=<span class="number">2</span>)(r&lt;=<span class="number">16</span>)m&lt;<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h2><p>输入仅由数字和字母组成的字符串，利用指针对其再排列（字符在前，数字在后，内序不变）。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 256</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[N],t[N],m[N],* p=s, *p1=t,*p2=m;</span><br><span class="line">    <span class="built_in">gets_s</span>(s);</span><br><span class="line">    <span class="keyword">while</span> (*p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((*p &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; *p &lt;= <span class="string">&#x27;z&#x27;</span>)  (*p &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; *p &lt;= <span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            *p1 = *p;</span><br><span class="line">            p1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            *p2 = *p;</span><br><span class="line">            p2++;</span><br><span class="line">        &#125;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    *p1 = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    *p2 = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">strcat_s</span>(t, m);</span><br><span class="line">    <span class="built_in">puts</span>(t);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#96;</p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六讲 二维数组、字符数组</title>
      <link href="/2024/02/05/%E7%AC%AC%E5%85%AD%E8%AE%B2-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E3%80%81%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84/"/>
      <url>/2024/02/05/%E7%AC%AC%E5%85%AD%E8%AE%B2-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E3%80%81%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h2 id="6-1-二维数组的定义和初始化"><a href="#6-1-二维数组的定义和初始化" class="headerlink" title="6.1 二维数组的定义和初始化"></a>6.1 二维数组的定义和初始化</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量名 数组名[常量表达式1][常量表达式2];</span><br></pre></td></tr></table></figure><ul><li>表达式1代表行，表达式2代表列；元素个数为行、列长度的乘积。</li><li>行、列下标均由0始。</li><li>二维数组<strong>按行存放</strong>（一行存满再下一行）</li></ul><p>序号&#x3D;当前行号*每行列数+当前列号</p><p>（二维数组作参数时可用）</p><h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> a[<span class="number">2</span>][<span class="number">3</span>];</span><br></pre></td></tr></table></figure><p>若系统分配的首地址为1000，则：</p><p><code>a[0][0]:1000; a[0][1]:1004; a[0][2]:1008</code></p><p><code>a[1][0]:100C; a[1][1]:1010; a[1][2]:1014</code></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><ol><li>按存放顺序对所有元素赋初值。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="type">int</span> a[][<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br></pre></td></tr></table></figure><ul><li>全部元素初始化<strong>能省略且只能省略第一维</strong>长度。（三维、四维etc）</li></ul><ol start="2"><li>按行给元素赋初值，每行元素组织在一对花括号内。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>按行给部分元素赋初值，未赋值元素自动为0.</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>&#125;&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>按行赋初值也可省略第一维长度：</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>&#125;,&#123;&#125;,&#123;<span class="number">3</span>&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c[][<span class="number">3</span>] = &#123; &#123;<span class="number">1</span>&#125;,&#123;&#125;,&#123;<span class="number">2</span>&#125; &#125;,i,j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">            cout &lt;&lt; c[i][j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1 0 0 0 0 0 2 0 0</span></span><br></pre></td></tr></table></figure><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ul><li>对于数值型数组，程序中只能使用其元素。</li></ul><p><code>数组名 [行下标][列下标]</code></p><ul><li>输入、输出、批量处理时需使用<strong>双循环</strong>，外循环控制行变化，内循环控制列变化。例如：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">        cin&gt;&gt;a[i][j];</span><br></pre></td></tr></table></figure><h3 id="例"><a href="#例" class="headerlink" title="例"></a>例</h3><ul><li>求3*3方阵的最大元素集下标</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">max=a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">imax=jmax=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>s;i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">      <span class="keyword">if</span>(a[i][j]&gt;max)</span><br><span class="line">      &#123;</span><br><span class="line">          max=a[i][j];</span><br><span class="line">          imax=i;</span><br><span class="line">          jmax=j;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="6-2-二维数组应用–矩阵转置、杨辉三角"><a href="#6-2-二维数组应用–矩阵转置、杨辉三角" class="headerlink" title="6.2 二维数组应用–矩阵转置、杨辉三角"></a>6.2 二维数组应用–矩阵转置、杨辉三角</h2><h3 id="矩阵转置"><a href="#矩阵转置" class="headerlink" title="矩阵转置"></a>矩阵转置</h3><p>注意：</p><ul><li>方阵转置就是以主对角线对称；</li><li>一次对调<code>a[i][j]</code>和<code>a[j][i]</code>两个元素，故只能以下三角&#x2F;上三角元素做参照，去和上三角&#x2F;下三角元素对调。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        t=a[i][j];</span><br><span class="line">        a[i][j]=a[j][i];</span><br><span class="line">        a[j][i]=t;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h3><p>输出n(n&lt;10)行的杨辉三角形</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一列和主对角线</span></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    a[i][<span class="number">0</span>]=a[i][i]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//其余元素</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">        a[i][j]=a[i<span class="number">-1</span>]a[j<span class="number">-1</span>]+a[i<span class="number">-1</span>]a[j];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line">        cout&lt;&lt;a[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;  <span class="comment">//一行完毕，换行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> n 10</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j, a[n][n];</span><br><span class="line">    <span class="comment">//第一列和主对角线</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        a[i][<span class="number">0</span>] = a[i][i] = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//其余元素</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; i; j++)</span><br><span class="line">            a[i][j] = a[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i - <span class="number">1</span>][j];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">            cout &lt;&lt; a[i][j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组应用–最短路径"><a href="#二维数组应用–最短路径" class="headerlink" title="二维数组应用–最短路径"></a>二维数组应用–最短路径</h3><p>A, B, C, D四个城市相互之间有8条单向公路，编程求任意两个城市间的最短距离。</p><p><img src="/img/image-20231012102211663.png" alt="image-20231012102211663"></p><ul><li><p>数据存储：4行4列二维数组<code>e[4][4]</code></p></li><li><p>数据表示：</p><ul><li>与自己的距离为0，不连通城市间距离为∞；</li><li>行下标代表起点，列下标代表终点，元素值代表距离。</li></ul></li><li><p>数据处理：弗洛伊德算法求</p></li><li><p>算法核心：对每一对I和j，检查是否存在顶点k，使得i–&gt;k–&gt;j的距离比原有路径短。如存在，则更新原有路径。</p></li></ul><p>以A作中转点为例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;ie[i][<span class="number">0</span>]+e[<span class="number">0</span>][j])</span><br><span class="line">            e[i][j]=e[i][<span class="number">0</span>]+e[<span class="number">0</span>][j]</span><br></pre></td></tr></table></figure><p>Floyd算法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;N;k++)</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">            <span class="keyword">if</span>(e[i][j]&gt;e[i][k]+e[k][j])</span><br><span class="line">                e[i][j]=e[i][k]+e[K][J]</span><br></pre></td></tr></table></figure><p>完整代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 4  <span class="comment">//顶点数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 8  <span class="comment">//路径数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 1000000 <span class="comment">//无穷远</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> e[N][N], i, j, k, st, en, d;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)  <span class="comment">//初始化路径距离</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; i &lt; N; j++)</span><br><span class="line">            <span class="keyword">if</span> (i = j)</span><br><span class="line">                e[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                e[i][j] = MAX;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= M; i++)<span class="comment">//输入起终点及路径距离</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cin &gt;&gt; st &gt;&gt; en &gt;&gt; d; <span class="comment">//依次输入起终点</span></span><br><span class="line">                    e[st][en] = d;</span><br><span class="line">                &#125;</span><br><span class="line">    <span class="comment">//FLOYD算法</span></span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; N; k++)</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">                <span class="keyword">if</span> (e[i][j] &gt; e[i][k] + e[k][j])</span><br><span class="line">                    e[i][j] = e[i][k] + e[k][j];</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">            cout &lt;&lt; (<span class="type">char</span>)(<span class="string">&#x27;A&#x27;</span> + i) &lt;&lt; <span class="string">&quot;-&gt;&quot;</span> &lt;&lt; (<span class="type">char</span>)(<span class="string">&#x27;A&#x27;</span> + i) &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; e[i][j];</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入有问题，暂不知为何</p><h2 id="6-3-字符数组"><a href="#6-3-字符数组" class="headerlink" title="6.3 字符数组"></a>6.3 字符数组</h2><p>例：如何将任意长度的英文句子中的所有小写字母转换成大写字母？</p><p>实际操作将整个句子以字符串形式处理</p><h3 id="字符串概念"><a href="#字符串概念" class="headerlink" title="字符串概念"></a>字符串概念</h3><ul><li>双引号引起的一串字符，如<code>&quot;ab123&quot;</code></li><li>若有定义char s[20]，通过特殊的初始化、输入、处理、输出可用来处理可变的字符串。</li></ul><p><strong>特点：</strong></p><p>系统自动在有效字符末尾加<code>&#39;\0&#39;</code>（字符串结束符）</p><h3 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3><ol><li>用字符串为字符数组初始化</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> s[<span class="number">10</span>]=&#123;<span class="string">&quot;I am fine&quot;</span>&#125;;</span><br><span class="line"><span class="type">char</span> s[<span class="number">10</span>]=<span class="string">&quot;I am fine&quot;</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>字符串数组初始化</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">3</span>][<span class="number">8</span>]=&#123;<span class="string">&quot;COBOL&quot;</span>,<span class="string">&quot;FORTRAN&quot;</span>,<span class="string">&quot;PASCAL&quot;</span>&#125;;</span><br></pre></td></tr></table></figure><h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><p>char s[100]</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串的整体输入</span></span><br><span class="line">cin&gt;&gt;s;<span class="comment">//不能提取空格符</span></span><br><span class="line"><span class="built_in">gets</span>(s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串的整体输入</span></span><br><span class="line">cout&lt;&lt;s;</span><br><span class="line"><span class="built_in">puts</span>(s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//gets(),puts()在&lt;stdio.h&gt;</span></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line">    cin&gt;&gt;s;  <span class="comment">//直接使用数组名</span></span><br><span class="line">    cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>cin()</code>不能提取空格符.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">gets</span>(s); <span class="comment">//可以</span></span><br><span class="line">    <span class="built_in">puts</span>(s);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>附：</p><p>在VS2015中，stdio.h头文件中已经不存在<code>gets()</code>函数定义，而被更安全的<code>get_s()</code>函数和<code>fgets()</code>函数所替代。故直接用gets()会出现未定义的错误。</p><ul><li><code>cin</code>以三大分隔符分隔</li><li><code>gets()</code>以回车键为分隔</li></ul><h3 id="字符串处理原则"><a href="#字符串处理原则" class="headerlink" title="字符串处理原则"></a>字符串处理原则</h3><ul><li>整体输入、整体输出</li><li>不用数组长度控制循环，而是通过当前字符**是否达到<code>&#39;\0&#39;</code>**判断循环结束与否</li><li>构造字符串时需保证结尾有<code>&#39;\0&#39;</code></li></ul><p><strong>例：如何将任意长度的英文句子中的所有小写字母转换成大写字母？</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[N];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">gets</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;s[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">            s[i]=s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="built_in">puts</span>(s);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-4-字符数组的应用：字符串处理"><a href="#6-4-字符数组的应用：字符串处理" class="headerlink" title="6.4 字符数组的应用：字符串处理"></a>6.4 字符数组的应用：字符串处理</h2><h3 id="例1-重要"><a href="#例1-重要" class="headerlink" title="例1 **重要"></a>例1 **重要</h3><p>例：将字符串s的内容复制到字符串t中</p><ul><li>数组名是地址常量，不能被复制</li><li>逐元素复制</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">char</span> s[N],t[N];</span><br><span class="line"><span class="built_in">gets</span>(s);</span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(s[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    t[i]=s[i];</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line">t[i]=<span class="string">&#x27;\0&#x27;</span>;  <span class="comment">//在t末尾加\0，成为数组</span></span><br><span class="line"><span class="built_in">puts</span>(t);</span><br></pre></td></tr></table></figure><p>注意：</p><p>字符数组需要逐个元素处理</p><h3 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h3><p>例：逐个比较两个字符串对应位置的字符大小，输出“两字符完全相等”的提示或第一个不相等字符的ASCII码差。</p><p>关键：</p><ul><li>找出持续比较的条件：<ul><li>对应位置的字符相等且串还未结束。</li></ul></li><li>退出循环后的再判断：如何退出的？</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[N],t[N];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">gets</span>(s);</span><br><span class="line">    <span class="built_in">gets</span>(t);</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(s[i]!=<span class="string">&#x27;\0&#x27;</span>&amp;&amp;t[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span>(s[i]==t[i])</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span>(s[i]==<span class="string">&#x27;\0&#x27;</span>&amp;&amp;t[i]==<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;两字符串相等&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;两串相差&quot;</span>&lt;&lt;s[i]-t[i];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常用字符串处理函数"><a href="#常用字符串处理函数" class="headerlink" title="常用字符串处理函数"></a>常用字符串处理函数</h3><h4 id="strlen-str"><a href="#strlen-str" class="headerlink" title="strlen(str)"></a>strlen(str)</h4><p>求字符串str的长度，不包含’\0’在内。</p><h4 id="strlwr"><a href="#strlwr" class="headerlink" title="strlwr"></a>strlwr</h4><p>将str中的大写字母转换为小写字母。</p><h4 id="strupr-str"><a href="#strupr-str" class="headerlink" title="strupr(str)"></a>strupr(str)</h4><p>将str中的小写字母转换为大写字母。</p><h4 id="strcpy-str1-str2"><a href="#strcpy-str1-str2" class="headerlink" title="strcpy(str1,str2)"></a>strcpy(str1,str2)</h4><p>将str2所指的字符串复制到str1中。</p><p>str1只能是字符数组名字或字符指针代表的字符串；</p><p>str2可以是字符数组名字、字符指针变量、字符串常量。</p><h4 id="strcat-str1-str2-–-strcat-s"><a href="#strcat-str1-str2-–-strcat-s" class="headerlink" title="strcat(str1,str2)–&gt;strcat_s()"></a>strcat(str1,str2)–&gt;strcat_s()</h4><p>将字符串str2的内容连接到str1内容的后面。</p><h4 id="strcmp-str1-str2"><a href="#strcmp-str1-str2" class="headerlink" title="strcmp(str1,str2)"></a>strcmp(str1,str2)</h4><p>比较字符串str1和str2的大小。</p><p>从左至右逐字符比较ASCII码的大小，直到出现不相同字符或遇到<code>&#39;\0&#39;</code>为止。</p><p>str1 小于 str2 返回-1</p><p>str1 等于 str2 返回0</p><p>str1 大于 str2 返回1</p><p>例：<code>strcmp(&quot;ABCD&quot;, &quot;BD&quot;)</code>:</p><p>B大于A，∴返回-1</p><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ul><li>上述函数原型在中</li><li>除strcpy和strcat两个函数的第一个参数不能取字符串常量外，其他参数都可以为字符数组、字符指针变量或字符串常量。</li></ul><h4 id="例：字符串处理函数示例"><a href="#例：字符串处理函数示例" class="headerlink" title="例：字符串处理函数示例"></a>例：字符串处理函数示例</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sring.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">80</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">gets</span>(s);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(s,<span class="string">&quot;pass&quot;</span>)) <span class="comment">//s和&quot;pass&quot;不相等的时候输出非0值，执行</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;Invalid password.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;pass\n&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组应用-古诗接龙程序分析"><a href="#数组应用-古诗接龙程序分析" class="headerlink" title="数组应用-古诗接龙程序分析"></a>数组应用-古诗接龙程序分析</h3><p><strong>程序功能及要求</strong></p><ul><li>可通过菜单选择五言诗和七言诗并进行连句测试</li><li>机器给出诗的上句，要求用户给出下句。正确提示“答对了，你真棒！”，答错提示“很遗憾，继续努力！”</li><li>若五言诗或七言诗库中的诗句全都测试完毕，则做出相应提示。</li></ul><p><strong>数据结构</strong></p><p>二位字符数组（N：已定义过的符号常量）或字符指针数组。</p><p><code>char s5[N][30]</code> &#x2F;&#x2F;存放N个五言诗的上下句(实21)</p><p><code>char s7[N][30]</code> &#x2F;&#x2F;存放N个七言诗的上下句（实29）</p><p><strong>获取数据</strong></p><ul><li><p>可在字符数组初始化时将诗的上下句存放在一个字符数组中</p></li><li><p>改进：读文件的方式将诗句读入字符数组</p></li></ul><p><strong>程序流程</strong></p><ul><li>菜单选择：五言、七言、退出；</li><li>随机产生一个五言诗或七言诗库中现有诗句个数内的不重复随机数；</li><li>以该随机数为下标取出相应字符串的前半段显示，后半段复制到一个代表答案的字符串中；（上下句在一个字符串里）</li><li>从键盘输入用户的接龙字符串并比较，根据结果做相应提示</li><li>重复直到退出</li></ul><p><strong>代码组织</strong></p><p>目前：所有代码组织在一个主函数中；</p><p>改进：模块化管理，将代码组织在多个自定义函数中</p><p><strong>程序功能完善</strong></p><ul><li>下接上</li><li>加入分数系统</li><li>记录打错诗句，今后重点训练</li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第五讲 一维数组</title>
      <link href="/2024/02/05/%E7%AC%AC%E4%BA%94%E8%AE%B2-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
      <url>/2024/02/05/%E7%AC%AC%E4%BA%94%E8%AE%B2-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h2 id="5-1-数组的定义"><a href="#5-1-数组的定义" class="headerlink" title="5.1 数组的定义"></a>5.1 数组的定义</h2><p>问题：给定N个学生成绩，求高于平均分者</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简单变量逐一处理(N=5)</span></span><br><span class="line"><span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> ave,sum=<span class="number">0</span>,s1,s2,s3,s4,s5;</span><br><span class="line">cin&gt;&gt;s1&gt;&gt;s2&gt;&gt;s3&gt;&gt;s4&gt;&gt;s5;</span><br><span class="line">sum=s1+s2+s3+s4+s5;</span><br><span class="line">ave=sum/N;</span><br><span class="line"><span class="keyword">if</span>(s1&gt;ave)</span><br><span class="line">    k++</span><br><span class="line">.....<span class="comment">//效率太低</span></span><br><span class="line"><span class="comment">//引入新数据类型批量处理（N=5)</span></span><br><span class="line"><span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> s[N], ave, sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum+=s[i];</span><br><span class="line">&#125;</span><br><span class="line">ave=sum/N;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    <span class="keyword">if</span>(s[i]&gt;ave)</span><br><span class="line">        k++;</span><br><span class="line"><span class="comment">//数组：对一组数据的重复操作进行批量处理</span></span><br></pre></td></tr></table></figure><h3 id="数组的概念、特点"><a href="#数组的概念、特点" class="headerlink" title="数组的概念、特点"></a>数组的概念、特点</h3><ul><li>是同类型同性质的一组元素顺序存放构成的数据集合；</li><li>所有数据共用同一名字，通过下标区分；</li><li>循环控制下标来批量处理数据。</li></ul><h3 id="数组的定义"><a href="#数组的定义" class="headerlink" title="数组的定义"></a>数组的定义</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型 数组名[整型常量表达式]</span><br></pre></td></tr></table></figure><ul><li>数组名代表数组在内存中的首地址，由系统自动分配；</li><li><strong>整型常量表达式</strong>代表数组<strong>长度</strong>，此处<strong>不可用变量</strong>说明长度；</li><li><strong>下标范围0~长度-1</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正确例：</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="type">float</span> s[N];</span><br><span class="line"><span class="comment">//或者：</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n=<span class="number">5</span>;</span><br><span class="line"><span class="type">float</span> s[n];</span><br><span class="line"></span><br><span class="line"><span class="comment">//错误例：</span></span><br><span class="line"><span class="type">int</span> n=<span class="number">5</span>, s[n];<span class="comment">//长度不允许用变量</span></span><br><span class="line"><span class="type">double</span> d[];<span class="comment">//长度不允许为空</span></span><br><span class="line"><span class="type">float</span> b[<span class="number">3.4</span>]<span class="comment">//长度不允许非整形</span></span><br></pre></td></tr></table></figure><h3 id="数组的存储"><a href="#数组的存储" class="headerlink" title="数组的存储"></a>数组的存储</h3><h3 id="元素的访问"><a href="#元素的访问" class="headerlink" title="元素的访问"></a>元素的访问</h3><p><code>数组名[下标]</code></p><ul><li>数组元素相当于同类型的普通变量，可参与该类型变量允许的一切操作</li><li>对于数值型数组，只能操作数组元素，不能操作数组名</li></ul><h2 id="5-2-一维数组的初始化"><a href="#5-2-一维数组的初始化" class="headerlink" title="5.2 一维数组的初始化"></a>5.2 一维数组的初始化</h2><p>问题：将十进制整数n转换成r(2~16)进制</p><p>例：</p><p>转换方法：</p><ol><li>n%r得到最低位存放进a[0];</li><li>n&#x3D;n&#x2F;r，再进行n%r，得到倒数第二位a[1];</li><li>以此类推，直到n&#x3D;0.</li></ol><p>输出方法：</p><ul><li>从数组最末元素向前输出。</li><li>制作对照表，将10-15转换为A~F。16进制所需数字的字母放在长度16的字符数组中</li></ul><h3 id="数组初始化"><a href="#数组初始化" class="headerlink" title="数组初始化"></a>数组初始化</h3><ul><li>定义的同时允许对数组的部分或全部元素赋初值；</li><li>初值应被组织在<code>&#123;&#125;</code>内<ul><li>字符数组表示的字符串例外</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全部元素赋初值:</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>&#125;</span><br><span class="line"><span class="comment">//可省略数组长度</span></span><br><span class="line"><span class="type">int</span> a[]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>&#125;</span><br><span class="line"><span class="comment">//相当于：</span></span><br><span class="line">a[<span class="number">0</span>]=<span class="number">0</span>; a[<span class="number">1</span>]=<span class="number">2</span>; a[<span class="number">2</span>]=<span class="number">4</span>; a[<span class="number">3</span>]=<span class="number">6</span>; a[<span class="number">4</span>]=<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//部分元素赋初值</span></span><br><span class="line"><span class="comment">//未赋值元素默认为0</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;</span><br><span class="line"><span class="comment">//a[5]~a[9]皆为0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//常见错误：</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">a=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;<span class="comment">//数组名不能被赋值</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">a[<span class="number">10</span>]=&#123;...&#125;<span class="comment">//a[10]不是合法元素，也不能被赋集合值</span></span><br><span class="line"><span class="type">int</span> c[<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;<span class="comment">//初值个数超过数组长度</span></span><br></pre></td></tr></table></figure><p>数制转换：（10进制–&gt;r进制）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,r,n,a[<span class="number">10</span>];</span><br><span class="line">    <span class="type">char</span> b[<span class="number">16</span>]=&#123;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,...,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>&#125;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;r;</span><br><span class="line">    <span class="keyword">do</span> </span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=n%r;</span><br><span class="line">        n=n/r;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(n!=<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(--i;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">    &#123;</span><br><span class="line">        n=a[i];</span><br><span class="line">        cout&lt;&lt;b[n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-常用算法-选择法排序"><a href="#5-3-常用算法-选择法排序" class="headerlink" title="5.3 常用算法-选择法排序"></a>5.3 常用算法-选择法排序</h2><p>例：N个成绩从大到小排序</p><p>选择法排序：</p><ol><li>N个数中选出MAX与第一个数交换位置；</li><li>N-1数中选出MAX与第二个数交换位置；</li><li>以此类推，重复N-1遍。</li></ol><ul><li>rand()函数<ul><li>随机数范围：0~32767</li><li>原型在头文件stdlib.h</li><li>范围随机数：<code>rand()%(a+1)+b</code> (b~b+a)</li></ul></li></ul><ol><li>求最高分</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[N],i ,max;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=<span class="built_in">rand</span>()%<span class="number">101</span>;</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    max=a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;max)</span><br><span class="line">            max=a[i];</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;max=&quot;</span>&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>求最高分位置</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">imax=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;N;j++)</span><br><span class="line">    <span class="keyword">if</span> (a[j]&gt;a[imax])</span><br><span class="line">        imax=j;</span><br></pre></td></tr></table></figure><ol start="3"><li>最高分放在首位</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> t=a[<span class="number">0</span>];</span><br><span class="line">a[<span class="number">0</span>]=a[imax];</span><br><span class="line">a[imax]=t;</span><br></pre></td></tr></table></figure><ol start="4"><li>次高分，次次高分……循环。（N-1遍）</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">imax=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;N;j++)</span><br><span class="line">    <span class="keyword">if</span> (a[j]&gt;a[imax])</span><br><span class="line">        imax=j;</span><br><span class="line"><span class="type">int</span> t=a[<span class="number">1</span>];</span><br><span class="line">a[<span class="number">1</span>]=a[imax];</span><br><span class="line">a[imax]=t;</span><br><span class="line"><span class="comment">//循环重复:</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    imax=i;  <span class="comment">//注意i需变</span></span><br><span class="line">    <span class="keyword">for</span>(j=i<span class="number">+1</span>;j&lt;N;j++)</span><br><span class="line">        <span class="keyword">if</span> (a[j]&gt;a[imax])</span><br><span class="line">            imax=j;</span><br><span class="line">    <span class="keyword">if</span> (i!=imax)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t=a[i]; </span><br><span class="line">        a[i]=a[imax];</span><br><span class="line">        a[imax]=t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4-冒泡法排序"><a href="#5-4-冒泡法排序" class="headerlink" title="5.4 冒泡法排序"></a>5.4 冒泡法排序</h2><p>例：对含N个元素的数组用冒泡法由小到大排序。</p><p>思想：</p><ol><li>自a[0]始，两两相邻元素进行N-1次比较，若前&gt;后则交换这对元素。一次遍历后最大的元素存在a[N-1]中；</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)</span><br><span class="line">    <span class="keyword">if</span> (a[i]&gt;a[i<span class="number">+1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        t=a[i];</span><br><span class="line">        a[i<span class="number">+1</span>]=a[i];</span><br><span class="line">        a[i]=t;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>对a[0]~a[N-2]的N-1个数进行此操作，次大数存入a[N-2]；</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>-j;i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;a[i<span class="number">+1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            t=a[i];</span><br><span class="line">            a[i<span class="number">+1</span>]=a[i];</span><br><span class="line">            a[i]=t;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>以此类推N-1次。</li></ol><p>完整程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[N],i ,j,t;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>,i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=<span class="built_in">rand</span>()%<span class="number">101</span>;</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;N<span class="number">-1</span>-i;j++)</span><br><span class="line">        <span class="keyword">if</span> (a[j]&gt;a[j<span class="number">+1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            t=a[j];</span><br><span class="line">            a[j]=a[j<span class="number">+1</span>];</span><br><span class="line">            a[j<span class="number">+1</span>]=t;</span><br><span class="line">        &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\n after sort: \n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>; </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-5-常用算法-插入与删除"><a href="#5-5-常用算法-插入与删除" class="headerlink" title="5.5 常用算法-插入与删除"></a>5.5 常用算法-插入与删除</h2><h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><p>例：在递增数组a内插入数x，使插入后数组仍保持有序。</p><ol><li>查找x应插入的位置k；</li><li>下标k的元素到最后的元素依次<strong>后移</strong>；</li><li>x插入位置k。</li></ol><ul><li>移动：从最后元素移起</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=k;i--)</span><br><span class="line">    a[i<span class="number">+1</span>]=[i];</span><br></pre></td></tr></table></figure><p>完整程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[N],i,k,x,n;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;递增输入数组中现有元素个数：&quot;</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;输入待插入数据：&quot;</span>;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    <span class="comment">//输入完成，开始处理：</span></span><br><span class="line">    <span class="comment">//找位置：</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span> (x&lt;a[i])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    k=i;</span><br><span class="line">    <span class="comment">//移动，挪出位置</span></span><br><span class="line">    <span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=k;i--)</span><br><span class="line">        a[i<span class="number">+1</span>]=[i];</span><br><span class="line">    <span class="comment">//插入新数据</span></span><br><span class="line">    a[k]=x;</span><br><span class="line">    <span class="comment">//输出新数组</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">+1</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p>例：查找数据x是否是数组a中元素，若是，删除第一次出现的该元素；否则提示“没找到”。</p><p>思想：</p><ol><li>查找待删除元素的位置k；</li><li>若找到，下标k+1的元素到最后的元素依次<strong>后移</strong>；</li><li>x插入位置k。</li></ol><ul><li>移动：前移（覆盖）</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=k;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    a[i]=a[i<span class="number">+1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">if</span>(x==a[i])</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">k=i;</span><br><span class="line"><span class="keyword">if</span>(i==n)<span class="comment">//注意这里是n</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;未找到\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//前移删除后的数据</span></span><br><span class="line">    <span class="keyword">for</span>(i=k;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">        a[i]=a[i<span class="number">+1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-6-常用算法-二分法查找"><a href="#5-6-常用算法-二分法查找" class="headerlink" title="5.6 常用算法-二分法查找"></a>5.6 常用算法-二分法查找</h2><p>数据量大，顺序查找效率低</p><p>例：在长度为N按递增顺序排列的数组a中用二分法查找数key，找到、输出其位置；否则输出“没找到”。</p><p>思想：</p><ol><li><p>low和high是查找区间的起终点下标，则初始状态：low&#x3D;0, high&#x3D;N-1;</p></li><li><p>求待查区间中间元素的下标mid&#x3D;(low+high)&#x2F;2，然后比较a[mid]和x决定后续查找范围；</p></li><li><p>当x&#x3D;&#x3D;a[mid]，查找完毕</p><p>当x&gt;a[mid]，修改low&#x3D;mid+1</p><p>当x&lt;a[mid]，修改high&#x3D;mid-1</p></li><li><p>重复2、3；若low&gt;high则null</p></li></ol><p>注：</p><ul><li>二分法只适用于<strong>有序数组</strong>；</li><li>终止循环查找的两种情况：<ul><li>x&#x3D;&#x3D;a[mid]</li><li>low&gt;high</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">low=<span class="number">0</span>;</span><br><span class="line">high=N<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(low&lt;=high)</span><br><span class="line">&#123;</span><br><span class="line">    mid=(low+high)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> (x==a[mid])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x&gt;a[mid])</span><br><span class="line">            low=mid<span class="number">+1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            high=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(low&gt;high)</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;没找到&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    cout&lt;&lt;mid&lt;&lt;endl;</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><ol><li>N个学生，围成一圈，1-5报数，报到5的同学出圈。问最后剩下的一名同学起初序号为几？</li></ol><p><code>a[i][j]</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[N],k=<span class="number">0</span>,i;  <span class="comment">//i:序号；k:报数次数</span></span><br><span class="line"><span class="type">int</span> s=<span class="number">0</span>;  <span class="comment">//报的数</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    a[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k!=N<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s=s+a[i];</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s=<span class="number">0</span>;</span><br><span class="line">            k++;</span><br><span class="line">            a[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;i&lt;&lt;endl;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四讲 循环结构</title>
      <link href="/2024/02/05/%E7%AC%AC%E5%9B%9B%E8%AE%B2-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
      <url>/2024/02/05/%E7%AC%AC%E5%9B%9B%E8%AE%B2-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="4-1-循环语句的基本形式"><a href="#4-1-循环语句的基本形式" class="headerlink" title="4.1 循环语句的基本形式"></a>4.1 循环语句的基本形式</h2><p>while和for: 当型循环，先判断再循环</p><p>do while: 直到型循环，先执行再判断</p><h3 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (表达式)</span><br><span class="line">    语句</span><br></pre></td></tr></table></figure><ul><li>表达式真（非0）则执行再回来</li><li>语句只能一条，但可以为复合语句</li><li>表达式的括号后无<code>;</code></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例：求1~99的奇数和</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">i</span><span class="params">(<span class="number">1</span>)</span>, <span class="title">s</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s=s+i;</span><br><span class="line">        i=i<span class="number">+2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s=&quot;</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (表达式<span class="number">1</span>;表达式<span class="number">2</span>;表达式<span class="number">3</span>)</span><br><span class="line">    循环体语句</span><br></pre></td></tr></table></figure><ul><li><p>表达式1：循环变量赋初值</p></li><li><p>表达式2：循环条件</p></li><li><p>表达式3：循环变量变化情况</p></li><li><p>表达式结束处无<code>;</code></p></li><li><p>表达式都可省，两个<code>;</code>不可省</p></li></ul><p><img src="/img/image-20230928084455572.png" alt="image-20230928084455572"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1~99奇数和</span></span><br><span class="line"><span class="type">int</span> i, <span class="built_in">s</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;<span class="number">100</span>;i=i<span class="number">+2</span>)</span><br><span class="line">    s=s+i</span><br><span class="line"></span><br><span class="line"><span class="comment">//省略表达式的版本</span></span><br><span class="line"><span class="type">int</span> <span class="built_in">i</span>(<span class="number">1</span>), <span class="built_in">s</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> ( ; ; ) <span class="comment">//表达式2空：无条件循环(死循环)，用break破解。</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i&gt;=<span class="number">100</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    s=s+i;</span><br><span class="line">    i=i<span class="number">+2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while语句"><a href="#do-while语句" class="headerlink" title="do while语句"></a>do while语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句</span><br><span class="line"><span class="keyword">while</span> (表达式);</span><br></pre></td></tr></table></figure><ul><li>先执行循环体，再判断条件</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">i</span><span class="params">(<span class="number">1</span>)</span>, <span class="title">s</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        s=s+i;</span><br><span class="line">        i=i<span class="number">+2</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span>(i&lt;<span class="number">100</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;s=&quot;</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>末尾有<code>;</code></li></ul><h2 id="4-2-循环结构的应用"><a href="#4-2-循环结构的应用" class="headerlink" title="4.2 循环结构的应用"></a>4.2 循环结构的应用</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//辗转相除法求二自然数的最大公约数</span></span><br><span class="line"><span class="comment">//大数除小数，余为零则小数为最大公约数；不为零则小数除余数继续。</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//确保输入2自然数</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;输入两自然数m,n:&quot;</span></span><br><span class="line">        cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    &#125; <span class="keyword">while</span>(m&lt;=<span class="number">0</span>n&lt;=<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//不需要m&gt;n</span></span><br><span class="line">    <span class="keyword">while</span>(r=m%n!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m=n;n=r</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;最大公约数为：&quot;</span>&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否为素数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k,m;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">2</span>;k&lt;m;k++)</span><br><span class="line">        <span class="keyword">if</span> (m%k==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span>(k==m) <span class="comment">//一直循环到最后，没break</span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;是素数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;不是素数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-循环嵌套"><a href="#4-3-循环嵌套" class="headerlink" title="4.3 循环嵌套"></a>4.3 循环嵌套</h2><ul><li>外循环和内循环必须采用不同的循环控制变量</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出九九乘法表</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\t 九九乘法表&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\t ----------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++)</span><br><span class="line">            cout&lt;&lt;i&lt;&lt;<span class="string">&quot;*&quot;</span>&lt;&lt;j&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;i*j&lt;&lt;<span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出上三角</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\t 九九乘法表&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\t ----------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">            cout&lt;&lt;<span class="string">&#x27;\t&#x27;</span>;         <span class="comment">//细化j的范围，下三角部分用空格替代</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=<span class="number">9</span>;j++)</span><br><span class="line">            cout&lt;&lt;i&lt;&lt;<span class="string">&quot;*&quot;</span>&lt;&lt;j&lt;&lt;<span class="string">&quot;=&quot;</span>&lt;&lt;i*j&lt;&lt;<span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出2~100的所有素数，要求每行输出5个</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,m,<span class="built_in">countm</span>(<span class="number">0</span>);</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\t 2~100素数&quot;</span>&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\t ----------&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span> (m=<span class="number">2</span>;m&lt;=<span class="number">100</span>;m++)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;m;i++)</span><br><span class="line">            <span class="keyword">if</span> (m%i==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (i==m) <span class="comment">//此if在for循环外</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;m&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">            countm++;</span><br><span class="line">            <span class="keyword">if</span> (countm%<span class="number">5</span>==<span class="number">0</span>)</span><br><span class="line">                cout&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意区分内循环和外循环</p><h2 id="4-4-辅助控制语句"><a href="#4-4-辅助控制语句" class="headerlink" title="4.4 辅助控制语句"></a>4.4 辅助控制语句</h2><p>注意对比区分break和continue</p><h3 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h3><p>作用：</p><ul><li>用于跳出switch语句，保证多分支的正确执行</li><li>用于循环语句，强制跳出循环体（终止本层循环）</li></ul><p>notice:</p><ul><li>只能跳出&#x2F;终止最近一层结构</li><li>不能用于switch和循环以外的结构</li><li>用于循环语句时，一般与if一起使用</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(m=<span class="number">10</span>;m&gt;<span class="number">0</span>;m--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (m%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    cout&lt;&lt;m&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h3><p>作用</p><ul><li>(绕过本次循环）结束本次循环，跳过循环体中未执行的语句，进行下一次是否执行循环体的判断</li></ul><p>notice:</p><p>只能用于循环语句时，一般与if一起使用</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(m=<span class="number">10</span>;m&gt;<span class="number">0</span>;m--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (m%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    cout&lt;&lt;m&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k, m,n;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>, m = <span class="number">1</span>; m &lt; <span class="number">4</span>; m++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (n = <span class="number">1</span>; n &lt; <span class="number">5</span>; n++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt;m&lt;&lt;<span class="string">&quot;*&quot;</span>&lt;&lt;n&lt;&lt;<span class="string">&quot;%3=&quot;</span>&lt;&lt; m * n % <span class="number">3</span> &lt;&lt;<span class="string">&quot;  ,k=&quot;</span>&lt;&lt;k&lt;&lt; endl;</span><br><span class="line">            <span class="keyword">if</span> (m * n % <span class="number">3</span> == <span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; k &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>k&#x3D;3</p><h3 id="goto语句"><a href="#goto语句" class="headerlink" title="goto语句"></a>goto语句</h3><p>慎用，会使结构化设计风格遭到破坏。</p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><ol><li>辗转相除求最大公约数<ol><li>普通方法</li></ol></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m, n, r, t;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="comment">/*if(m&lt;n)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        t=m;m=n;n=t;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="comment">//以上提高循环效率</span></span><br><span class="line">    <span class="keyword">for</span>(r=n;r&gt;<span class="number">1</span>;r--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m%r==<span class="number">0</span>&amp;&amp;n%r==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;r=&quot;</span>&lt;&lt;r&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​ 2. 辗转相除法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m, n, r, t;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="comment">/*if(m&lt;n)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        t=m;m=n;n=t;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    r=m%n;*/</span></span><br><span class="line">    <span class="comment">//少做一次而已</span></span><br><span class="line">    <span class="keyword">while</span>(r!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m=n;n=r;</span><br><span class="line">        r=m%n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//while((r=m%n)!=0)</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;r=&quot;</span>&lt;&lt; n&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>附：辗转相减法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n; </span><br><span class="line">    <span class="keyword">while</span>(m-n!=<span class="number">0</span>) </span><br><span class="line">        <span class="keyword">if</span>(m&gt;n)</span><br><span class="line">            m=m-n; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            n=n-m; </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;gcd(m,n)=&quot;</span>&lt;&lt;m&lt;&lt;endl; </span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>质数判别–&gt;2~100输出，逢8换行</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m, k, <span class="built_in">num</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(m=<span class="number">2</span>;m&lt;<span class="number">100</span>;m++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">2</span>;k&lt;=<span class="built_in">sqrt</span>(m);k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m%k==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k&gt;<span class="built_in">sqrt</span>(m))</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;m&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num%<span class="number">8</span>==<span class="number">0</span>)</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">i=<span class="number">0</span>;</span><br><span class="line">sinx=<span class="number">0</span>;</span><br><span class="line">t-x;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">fabs</span>(t)&gt;=<span class="number">1</span>e=<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">    sinx+=t;</span><br><span class="line">    t=t*x*x/((i<span class="number">+1</span>)*(i<span class="number">+2</span>);</span><br><span class="line">    i=i<span class="number">+2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>输入一串字符，分类统计其中单词个数、字母个数、数字个数、其他字符个数。单词之间以一个空白符分开（空格符<code>&#39; &#39;</code>、水平制表符<code>&#39;&#39;\t&#39;</code>、换行符<code>&#39;\n&#39;</code>），以^z表示输入结束。</li></ol><p>getchar()函数，逐一读取字符,<code>#include &lt;studio.h&gt;</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">alpha</span><span class="params">(<span class="number">0</span>)</span>, <span class="title">num</span><span class="params">(<span class="number">0</span>)</span>,<span class="title">ch</span><span class="params">(<span class="number">0</span>)</span>,<span class="title">word</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span>(c=<span class="built_in">getchar</span>()!=EOF)   <span class="comment">//EOF:文本结束符，对应^z</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (c==<span class="string">&#x27; &#x27;</span>c==<span class="string">&#x27;\t&#x27;</span>c==<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            word++;</span><br><span class="line">        <span class="keyword">if</span> (c&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;z&#x27;</span>c&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">            alpha++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c&gt;=<span class="number">0</span>&amp;&amp;c&lt;=<span class="number">9</span>)</span><br><span class="line">            num++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ch++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;word=&quot;</span>&lt;&lt;word&lt;&lt;...</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">i</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="type">double</span> x, a,xp;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    x = a;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>;; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        xp = <span class="number">2</span> * x / <span class="number">3</span> + a / (<span class="number">3</span> * x * x);</span><br><span class="line">        <span class="keyword">if</span> (((xp - x &gt; <span class="number">0</span>) ? xp - x : x - xp) &lt; <span class="number">0.00001</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        x = xp;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; xp &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> k,i,<span class="built_in">s</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>;; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k = <span class="number">1.0</span> / (<span class="number">1.0</span> + ((i * i - i) / <span class="number">2.0</span>));</span><br><span class="line">        s += k;</span><br><span class="line">        <span class="keyword">if</span> (k &lt; <span class="number">0.0001</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,i,<span class="built_in">s</span>(<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输入一个十进制整数&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">m</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (m != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m=m / <span class="number">10</span>;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = count; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        s = s + (n /<span class="built_in">int</span>( <span class="built_in">pow</span>(<span class="number">10</span>, i - <span class="number">1</span>)) * <span class="built_in">int</span>(<span class="built_in">pow</span>(<span class="number">10</span>, count - i)));</span><br><span class="line">        n = n % (n / <span class="built_in">int</span>(<span class="built_in">pow</span>(<span class="number">10</span>, i - <span class="number">1</span>)) * <span class="built_in">int</span>(<span class="built_in">pow</span>(<span class="number">10</span>, i - <span class="number">1</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,m,n,p,q;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">100</span>; i &lt; <span class="number">1000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        m = i / <span class="number">100</span>; n = (i % <span class="number">100</span>) / <span class="number">10</span>; p = i % <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">        q = <span class="built_in">pow</span>(m, <span class="number">3</span>) + <span class="built_in">pow</span>(n, <span class="number">3</span>) + <span class="built_in">pow</span>(p, <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">if</span> (q == i)</span><br><span class="line">            cout &lt;&lt; i&lt;&lt;<span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,n,k,<span class="built_in">s</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//void srand(unsigned int seed);</span></span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    a = <span class="built_in">rand</span>()%<span class="number">9</span><span class="number">+1</span>;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    n = <span class="number">5</span> + <span class="built_in">rand</span>() % <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = temp * <span class="number">10</span> + a;</span><br><span class="line">        s+=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;with a= &quot;</span> &lt;&lt;a&lt;&lt;<span class="string">&quot; and n= &quot;</span>&lt;&lt; n&lt;&lt;<span class="string">&quot;, s= &quot;</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="习题经验总结：随机数生成（重要）"><a href="#习题经验总结：随机数生成（重要）" class="headerlink" title="习题经验总结：随机数生成（重要）"></a>习题经验总结：随机数生成（重要）</h2><ul><li>随机数生成：</li></ul><p>a + rand() % n</p><p>其中的a是起始值，n是整数的范围。 　　</p><p>记得生成随机数种子:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br></pre></td></tr></table></figure><p>rand()的实际机理：</p><p><code>（S*M+N)%32768</code></p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三讲 选择结构</title>
      <link href="/2024/02/05/%E7%AC%AC%E4%B8%89%E8%AE%B2-%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
      <url>/2024/02/05/%E7%AC%AC%E4%B8%89%E8%AE%B2-%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="3-1-三种控制结构"><a href="#3-1-三种控制结构" class="headerlink" title="3.1 三种控制结构"></a>3.1 三种控制结构</h2><h3 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h3><p>eg. 计算三角形面积</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a,b,c,p,s;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    p=(a+b+c)/<span class="number">2</span>;</span><br><span class="line">    s=<span class="built_in">aqrt</span>(p*(p-a)*(p-b)*(p-c));</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;三角形面积为&quot;</span>&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语句类型：</p><ul><li><p>表达式语句</p></li><li><p>空语句：没有执行代码，只由分号构成的语句</p><ul><li><pre><code class="c++">for (m=0;m&lt;10000;m++) ;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">        </span><br><span class="line">    *   此分号代表循环体为空语句，主要作用为延时（遍历）或给新功能扩充留地。</span><br><span class="line">        </span><br><span class="line">*   复合语句：&#123;&#125;整合语句</span><br><span class="line">    </span><br><span class="line">    *   语法结构上是一条语句，功能上需要多条语句</span><br><span class="line">        </span><br><span class="line">    *   内部可定义仅在复合语句内使用的变量</span><br><span class="line">        </span><br><span class="line">    *   ```c++</span><br><span class="line">        &#123;</span><br><span class="line">        [变量定义]</span><br><span class="line">        语句组</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h3 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    double a,b,c,p,s;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    if (a+b&gt;c&amp;&amp;a+c&gt;b&amp;&amp;b+c&gt;a)</span><br><span class="line">    &#123;</span><br><span class="line">     p=(a+b+c)/2;</span><br><span class="line">    s=aqrt(p*(p-a)*(p-b)*(p-c));</span><br><span class="line">    cout&lt;&lt;&quot;三角形面积为&quot;&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    cout&lt;&lt;“输入有误”&lt;&lt;endl;</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    double a,b,c,p,s;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    while (!(a+b&gt;c&amp;&amp;a+c&gt;b&amp;&amp;b+c&gt;a))</span><br><span class="line">    &#123;</span><br><span class="line">     cout&lt;&lt;“输入有误”&lt;&lt;endl;</span><br><span class="line">     cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">    &#125;</span><br><span class="line">    p=(a+b+c)/2;</span><br><span class="line">    s=aqrt(p*(p-a)*(p-b)*(p-c));</span><br><span class="line">    cout&lt;&lt;&quot;三角形面积为&quot;&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    system(&quot;pause&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="辅助控制结构"><a href="#辅助控制结构" class="headerlink" title="辅助控制结构"></a>辅助控制结构</h3><h2 id="3-2-if语句及应用"><a href="#3-2-if语句及应用" class="headerlink" title="3.2 if语句及应用"></a>3.2 if语句及应用</h2><h3 id="单分支形式"><a href="#单分支形式" class="headerlink" title="单分支形式"></a>单分支形式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (表达式) 语句</span><br></pre></td></tr></table></figure><ul><li>表达式真，执行语句；假则跳过</li><li>语句只有一条，但可复合</li><li>PS：一来就假直接输出</li></ul><h3 id="双分支形式"><a href="#双分支形式" class="headerlink" title="双分支形式"></a>双分支形式</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (表达式)</span><br><span class="line">    语句<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句<span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="多分支形式"><a href="#多分支形式" class="headerlink" title="多分支形式"></a>多分支形式</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (表达式)</span><br><span class="line">    语句<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (表达式<span class="number">2</span>)</span><br><span class="line">    语句<span class="number">2</span></span><br><span class="line">    ……</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (表达式n)</span><br><span class="line">    语句n</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句n<span class="number">+1</span></span><br></pre></td></tr></table></figure><ul><li><p>表达问题</p><ul><li>例如<code>char sex</code>那么<code>char</code>只能用于存放<code>&#39;m&#39;</code>等单字节</li></ul></li><li><p>嵌套形式</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (表达式)</span><br><span class="line">    <span class="keyword">if</span> (表达式<span class="number">11</span>)</span><br><span class="line">        语句<span class="number">11</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        语句<span class="number">12</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> (表达式<span class="number">11</span>)</span><br><span class="line">        语句<span class="number">21</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        语句<span class="number">22</span></span><br></pre></td></tr></table></figure><p>eg. 分组</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> sex, group;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;input sex(&#x27;f&#x27; or &#x27;m&#x27;) and age&quot;</span> &lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;sex&gt;&gt;age;</span><br><span class="line">    <span class="keyword">if</span> (sex==<span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">40</span>)</span><br><span class="line">            group=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            group=<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">40</span>)</span><br><span class="line">            group=<span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            group=<span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;group=&quot;</span>&lt;&lt;group&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>问答</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> sex, group;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;input sex(&#x27;f&#x27; or &#x27;m&#x27;) and age&quot;</span> &lt;&lt;endl;</span><br><span class="line">    cin&gt;&gt;sex&gt;&gt;age;</span><br><span class="line">    <span class="keyword">if</span> (sex==<span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">40</span>)</span><br><span class="line">            group=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            group=<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">40</span>)</span><br><span class="line">            group=<span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            group=<span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;group=&quot;</span>&lt;&lt;group&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-switch语句及应用"><a href="#3-3-switch语句及应用" class="headerlink" title="3.3 switch语句及应用"></a>3.3 switch语句及应用</h2><p>多分支</p><p><strong>形式：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> 常量表达式<span class="number">1</span>: 语句组<span class="number">1</span>; [<span class="keyword">break</span>;]</span><br><span class="line">    <span class="keyword">case</span> 常量表达式<span class="number">2</span>: 语句组<span class="number">2</span>; [<span class="keyword">break</span>;] </span><br><span class="line">    ......</span><br><span class="line">    <span class="keyword">case</span> 常量表达式n: 语句组n; [<span class="keyword">break</span>;]</span><br><span class="line">    [<span class="keyword">default</span>: 语句组n<span class="number">+1</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>switch后的表达式类型必须为<strong>整型或字符型</strong>；</li><li>case后的常量表达式必须为可<strong>一一列举</strong>的具体取值，不能是取值范围；</li><li>多个常量表达式可共用一组语句。</li><li><strong>如果没有<code>break</code>，一直继续执行后续语句。</strong></li></ul><p>没有break的例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">switch</span> (a % <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:cout &lt;&lt; a++;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:cout &lt;&lt; ++a;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:cout &lt;&lt; a--;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:cout &lt;&lt; --a;</span><br><span class="line">    <span class="keyword">default</span>: cout &lt;&lt; <span class="string">&quot;其他值&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时一直向后执行，输出“75其他值”</p><p>如果加上break，输出7</p><p><strong>例：分制转换：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(mark/<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:  #两个取值共用一组语句</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:grade=<span class="string">&#x27;A&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:grade=<span class="string">&#x27;B&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:grade=<span class="string">&#x27;C&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:grade=<span class="string">&#x27;D&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:grade=<span class="string">&#x27;E&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>break</code>不能省</li><li>switch后语句需巧妙构造</li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二讲 数据类型、运算符和表达式</title>
      <link href="/2024/02/05/%E7%AC%AC%E4%BA%8C%E8%AE%B2-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2024/02/05/%E7%AC%AC%E4%BA%8C%E8%AE%B2-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="2-1-数据类型"><a href="#2-1-数据类型" class="headerlink" title="2.1 数据类型"></a>2.1 数据类型</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>先定义再使用；先赋值再计算</p><p><code>int a, b, c ;</code></p><p>初始化：定义同时赋值</p><ul><li><code>数据类型 变量名=表达式;</code><ul><li><code>int k=3, m=3, n(3);</code></li><li>不能连写(int k&#x3D;m&#x3D;n&#x3D;3)，需逐个进行初始化。</li></ul></li><li><code>数据类型 变量名(表达式);</code> （C++)</li></ul><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p><strong>种类：</strong></p><ul><li>值常量<ul><li>5、3.14</li><li>‘a’ 字符常量</li><li>“abcd” 字符串常量</li></ul></li><li>符号常量<ul><li>定义方式：</li><li><code>const 数据类型 标识符 = 常量;</code><ul><li><code>const double PI = 3.14;</code></li></ul></li><li><code>#define 标识符 常量值</code><ul><li><code>#define N 100</code></li><li>注意用<code>define</code>时名与值之间用空隔分开；末尾不带分号。</li></ul></li></ul></li></ul><h4 id="值常量再分："><a href="#值常量再分：" class="headerlink" title="值常量再分："></a><strong>值常量再分：</strong></h4><ul><li><p>整型常量</p><ul><li>十进制</li><li>以<code>1~9</code>开始，由<code>0~9</code>组成</li><li>八进制</li><li>以数字0开始，由<code>0~7</code>组成</li><li>十六进制</li><li>以0x或0X开始，由<code>0~9</code>及<code>A~F</code>组成</li></ul></li><li><p>实型常量</p><ul><li>十进制小数形式</li><li>指数形式</li><li>由尾数、指数符号（e或E）、指数构成<ul><li>如<code>1.25e-5</code></li></ul></li><li>要求：<ul><li>e前<strong>尾数不能省</strong>，e后<strong>指数必须为整数</strong></li><li>指数不能加圆括号</li></ul></li></ul></li></ul><h4 id="符号常量再分："><a href="#符号常量再分：" class="headerlink" title="符号常量再分："></a><strong>符号常量再分：</strong></h4><ul><li>普通字符常量<ul><li><strong>单引号</strong>引起来的<strong>单个</strong>字符，可在屏幕上直接显示</li></ul></li><li>转义字符常量<ul><li>以<code>\</code>开头用单引号括起的<strong>字符序列</strong>，如<code>&#39;\n&#39;</code>（换行符）,<code>&#39;\t&#39;</code>（横向制表符）,<code>&#39;\0&#39;</code>（字符串结束）</li></ul></li><li>字符串常量<ul><li>用<strong>双引号</strong>括起的<strong>字符序列</strong>，系统在该常量尾自动加字符串结束符<code>&#39;\0&#39;</code></li></ul></li></ul><blockquote><p>说明：</p><ul><li>字符型数据在系统内存以ASCII码存储<ul><li>‘A’-65, ‘a’-97, ‘0’-48</li></ul></li><li>大小写互换<ul><li><code>char ch = ch+&#39;A&#39;-&#39;a&#39;</code>（小变大）</li></ul></li><li>一定范围内的整型与字符型数据可相互转换<ul><li>char ch &#x3D; ‘a’ - 32</li><li>char x; x&#x3D;rand()%26+65;</li></ul></li><li>‘\0’与’0’不同，前者是字符串结束符，ASCII码0；后者是数字字符，ASCII码48.</li><li>字符常量‘a’与字符串常量”a”不同，前者占1个字节，后者占2个字节，末尾隐含’\0’</li><li>“abcd”长度4，占字节5（\0）</li></ul></blockquote><p>similarly:</p><p>若输入字符串“ABC”，下面程序段的输出为（C）。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c；</span><br><span class="line"><span class="keyword">while</span>（cin&gt;&gt;c,c!=’\n’）</span><br><span class="line">cout&lt;&lt;c<span class="number">+2</span>;</span><br></pre></td></tr></table></figure><p>A.222 B.CDE C.676869 D.333</p><h3 id="标识符-考点"><a href="#标识符-考点" class="headerlink" title="标识符 考点"></a>标识符 考点</h3><p><strong>标识符：</strong></p><p>由<strong>字母、数字和下划线</strong>三种字符组成,且必须<strong>以字母或下划线开头</strong>。</p><p><strong>关键字不能作为用户定义的标识符。</strong></p><p><strong>用户定义标识符：</strong></p><p>合法： <code>char2</code> <code>_abc</code> <code>a3</code> <code>P1</code></p><p>不合法： <code>int</code> <code>p[i]</code> <code>break</code> <code>3a</code> <code>a+b</code> <code>class</code> <code>public</code></p><p><strong>常量：</strong></p><p>合法： <code>&#39;\n&#39;</code> <code>&#39;\102 &#39;</code> <code>&#39;\t &#39;</code> <code>&#39;\72&#39;</code></p><p>不合法： <code>‘ABC’</code> （不是单引号引起来的单个字符） <code>1.2e0.5</code>（指数必须为整数） <code>M</code> <code>&#39;[]&#39;</code></p><h2 id="2-2-运算符和表达式的基本概念"><a href="#2-2-运算符和表达式的基本概念" class="headerlink" title="2.2 运算符和表达式的基本概念"></a>2.2 运算符和表达式的基本概念</h2><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li>优先级（15）</li><li>结合性（优先级相同时的运算符连续运算顺序）<ul><li>自左向右</li><li>自右向左</li></ul></li><li>目数（运算符所需操作数，通常目数少优先级高）<ul><li>单目</li><li>双目（+-*&#x2F;）</li><li>三目</li></ul></li></ul><h4 id="常用运算符种类"><a href="#常用运算符种类" class="headerlink" title="常用运算符种类"></a>常用运算符种类</h4><p>相同目数的各运算符优先顺序：</p><p><strong>算术&gt;关系&gt;逻辑&gt;条件（三目）&gt;赋值（双目）&gt;逗号</strong></p><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>常量、变量、函数调用、运算符构成</p><h4 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h4><ul><li>与数学表达式的区别<ul><li><code>(a-b*c)/(x-y*z)</code>乘号不能省</li><li>只能加圆括号</li></ul></li></ul><h2 id="2-3-算术运算符"><a href="#2-3-算术运算符" class="headerlink" title="2.3 算术运算符"></a>2.3 算术运算符</h2><h3 id="算术运算种类："><a href="#算术运算种类：" class="headerlink" title="算术运算种类："></a>算术运算种类：</h3><p><code>+ - * /（整除） %（求余） ++ --（自增、自减）</code></p><h3 id="优先级："><a href="#优先级：" class="headerlink" title="优先级："></a>优先级：</h3><ul><li><code>++``--``+``-</code>（取正、负）</li><li><code>*``/``%</code></li><li><code>+``-</code></li></ul><h5 id="整数相除："><a href="#整数相除：" class="headerlink" title="整数相除："></a>整数相除：</h5><ul><li>两个操作数都是整数时，商也为整数，小数部分舍去。</li><li>如果要求精确结果，<strong>需将其中一个变为实数</strong>，如：<code>a*1.0/b</code></li></ul><h5 id="求余运算（-）："><a href="#求余运算（-）：" class="headerlink" title="求余运算（%）："></a>求余运算（%）：</h5><ul><li><p>两操作数必须皆为<strong>整型</strong></p></li><li><p>结果的符号与被除数一致</p><ul><li>a%b &#x3D; a - a&#x2F;b*b</li></ul><p>应用：</p><p>判断</p></li></ul><h5 id="自增、自减运算符（-、–）："><a href="#自增、自减运算符（-、–）：" class="headerlink" title="自增、自减运算符（++、–）："></a>自增、自减运算符（++、–）：</h5><ul><li><p>只能作用于（整型）<strong>变量</strong>；</p></li><li><p>前置或后置运算 (a++;–a)</p><ul><li>前置、后置区别：</li><li>对自增、自减变量本身值无区别；</li><li>对<strong>参与的表达式</strong>贡献不同<ul><li><strong>前置</strong>运算以<strong>变化后</strong>的值参与运算</li><li><strong>后置</strong>运算以<strong>原值</strong>参与运算</li></ul></li></ul></li></ul><p><strong>典例：</strong></p><p>假设有： a&#x3D;0,b&#x3D;6,c&#x3D;7，则表达式 a++&amp;&amp;b++&amp;&amp;c++运算完成后，整个表达式的值为 false（ 0）， a 的值为 1， b 和 c 保持原值不变。</p><p>这是因为“ a++” 作为后置自增运算， 以原值 0 参与“ &amp;&amp;”运算，使得整个表达式的值为 0，<strong>后续的“ b++” 和“ c++”没有被执行。</strong></p><p><code>--a&amp;&amp;++b;</code>和<code>++a--b;</code>也是同理。</p><h2 id="2-4-关系运算符和逻辑运算符"><a href="#2-4-关系运算符和逻辑运算符" class="headerlink" title="2.4 关系运算符和逻辑运算符"></a>2.4 关系运算符和逻辑运算符</h2><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p>“判断关系”</p><h4 id="种类："><a href="#种类：" class="headerlink" title="种类："></a>种类：</h4><p>=&#x3D;（等于）、!&#x3D;（不等于）</p><p>&lt;（小于）、&lt;&#x3D;（小于等于）、&gt;（大于）、&gt;&#x3D;（大于等于）</p><ul><li>运算结果为“真”（1）和“假”（0）</li></ul><p>关系运算符的优先级低于算术运算符，共有 6 种，分别为：</p><p>优先级为 6 的：&gt;（大于） &gt;&#x3D;（大于等于） &lt;（小于） &lt;&#x3D;（小于等于）</p><p>优先级为 7 的：&#x3D;&#x3D;（等于） !&#x3D;（不等于）</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ul><li>逻辑非（！）</li><li>逻辑与（&amp;&amp;）（取交集）</li><li>逻辑或（）（取并集）</li></ul><blockquote><p>说明：</p><ul><li>运算数可为任意类型，如关系表达式；</li><li>所有非0数均做“真”处理（当作1）</li></ul></blockquote><p>如：<code>x&gt;=0 &amp;&amp; x&lt;=100</code></p><ul><li>只要可唯一确定值，逻辑运算即不再进行<ul><li><code>--a&amp;&amp;b++&amp;&amp;c--</code>只会做–a，已经为0，可唯一确定运算值为0</li></ul></li></ul><h2 id="2-5-赋值运算符、条件运算符、逗号运算符"><a href="#2-5-赋值运算符、条件运算符、逗号运算符" class="headerlink" title="2.5 赋值运算符、条件运算符、逗号运算符"></a>2.5 赋值运算符、条件运算符、逗号运算符</h2><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><h4 id="种类：-1"><a href="#种类：-1" class="headerlink" title="种类："></a>种类：</h4><ul><li><p>简单赋值运算符（&#x3D;）：</p><ul><li>将右边表达式的值送入左边变量</li></ul></li><li><p>复合赋值运算符：</p><ul><li>将左边变量与右边表达式的值的和（差、积、商、余数）送入左边变量</li><li>+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;、……</li></ul></li></ul><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><ul><li>左端只能为变量或数组元素，不能为表达式或常量。<ul><li>反例：<code>a=b+2=c+5</code></li></ul></li><li>两端类型不同时系统自动将右端类型转换为左端类型。<ul><li>例：<code>int a=3.78</code>，则a&#x3D;3</li><li>结合性自右向左</li><li><code>a=(b=(c=1)))</code></li></ul></li></ul><h3 id="条件运算符（？-：）"><a href="#条件运算符（？-：）" class="headerlink" title="条件运算符（？ ：）"></a>条件运算符（？ ：）</h3><h4 id="形式："><a href="#形式：" class="headerlink" title="形式："></a>形式：</h4><p><code>e1? e2: e3</code></p><blockquote><p>e1, e2, e3代表三个表达式</p></blockquote><h4 id="执行过程："><a href="#执行过程：" class="headerlink" title="执行过程："></a>执行过程：</h4><p>e1的值若非0，结果取e2；</p><p>e1的值若为0，结果取e3。</p><p>例1：</p><p><code>max = (x&gt;y) ? x:y</code></p><p>例2：n人分班，每班k人</p><p><code>numclass = (n%k==0)? n/k: n/k+1</code></p><h3 id="逗号运算符（-）"><a href="#逗号运算符（-）" class="headerlink" title="逗号运算符（,）"></a>逗号运算符（,）</h3><h4 id="形式：-1"><a href="#形式：-1" class="headerlink" title="形式："></a>形式：</h4><p><code>e1, e2, e3</code></p><blockquote><p>e1, e2, e3代表三个表达式</p></blockquote><h4 id="执行过程：-1"><a href="#执行过程：-1" class="headerlink" title="执行过程："></a>执行过程：</h4><p>从左向右依次计算每个表达式的值；<strong>整个表达式的值为最右边表达式的值。</strong></p><p>例：</p><p><code>c=(a=10, b=20, a+b)</code>，则c&#x3D;30</p><h4 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h4><p>for语句中，用于连接多个表达式</p><p><code>for(i=0, j=n; i&lt;j; i++, j--)</code></p><h2 id="2-6-类型转换运算"><a href="#2-6-类型转换运算" class="headerlink" title="2.6 类型转换运算"></a>2.6 类型转换运算</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><ul><li>允许值从一种类型转换为另一种类型</li><li>赋值运算右端类型转换为左端类型</li><li>其他运算从低到高转换成同一种类型后再运算<ul><li>char（字符型）, short（短整型）–&gt;int（整型）–&gt;unsigned（无符号整型）–&gt;long（长整型）–&gt;float（单精度实型）–&gt;double（双精度实型）</li><li>其中char–&gt;int, float–&gt;double是必然的</li></ul></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> c1, <span class="type">int</span> k;</span><br><span class="line">c1=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">k=c1<span class="number">+2</span>; <span class="comment">//这里c1已经char变int了,=65</span></span><br><span class="line">c1=c1<span class="number">+2</span>;</span><br><span class="line">cout&lt;&lt;c1&lt;&lt;ends&lt;&lt;k;</span><br><span class="line"><span class="comment">//c=67, k=67</span></span><br></pre></td></tr></table></figure><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><h4 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h4><p><code>（类型标识符） 表达式</code>或<code>类型标识符 （表达式）</code></p><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>得到一个新类型的数据，但原变量类型不变。</p><p>例1：</p><p><code>in i; float d=3.5; i=(int)d</code></p><p>则i&#x3D;4, d&#x3D;3.5</p><p>例2：将三位小数x四舍五入到百分位</p><p><code>x = (int)(x*100+0.5)/100.0</code></p><blockquote><p>100.0：得到小数部分</p></blockquote><ul><li>强制类型转换符是单目运算符，<strong>优先级高于所有双目运算符：</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> a=<span class="number">3.5</span>, b=<span class="number">2</span>;</span><br><span class="line">c=(<span class="type">int</span>)a*b</span><br><span class="line">    <span class="comment">//c=6.0</span></span><br></pre></td></tr></table></figure><h2 id="2-7-指针"><a href="#2-7-指针" class="headerlink" title="2.7 指针"></a>2.7 指针</h2><h2 id="2-8-typedef语句"><a href="#2-8-typedef语句" class="headerlink" title="2.8 typedef语句"></a>2.8 typedef语句</h2><h2 id="2-9-应用"><a href="#2-9-应用" class="headerlink" title="2.9 应用"></a>2.9 应用</h2><ul><li><code>setw()</code>用于斜输出，需要<code>#include &lt;iomanip&gt;</code></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setfill</span>(<span class="string">&quot;*&quot;</span>)  <span class="comment">//设置填充字符</span></span><br><span class="line"><span class="built_in">setw</span>(<span class="number">6</span>)  <span class="comment">//只对后面第一个对象起效</span></span><br></pre></td></tr></table></figure><p>eg.输出三位整数的正负号、百位数、十位数、个位数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c1,c2,c3;</span><br><span class="line">    <span class="type">char</span> c4;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    c4=x&gt;=<span class="number">0</span>?<span class="string">&#x27;+&#x27;</span>:<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    x=<span class="built_in">abs</span>(x);</span><br><span class="line">    c1=x/<span class="number">100</span>;</span><br><span class="line">    c3=x%<span class="number">10</span>;</span><br><span class="line">    c2=x/<span class="number">10</span>;     <span class="comment">//x==0停止</span></span><br><span class="line">    cout&lt;&lt;“数符 百位数 十位数 个位数”&lt;&lt;endl;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">setw</span>(<span class="number">2</span>)&lt;&lt;c4&lt;&lt;<span class="built_in">setw</span>(<span class="number">8</span>)&lt;&lt;c1&lt;&lt;<span class="built_in">setw</span>(<span class="number">8</span>)&lt;&lt;c2&lt;&lt;<span class="built_in">setw</span>(<span class="number">8</span>)&lt;&lt;c3&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一讲 C/C++程序设计入门</title>
      <link href="/2024/02/05/%E7%AC%AC%E4%B8%80%E8%AE%B2-c-c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8/"/>
      <url>/2024/02/05/%E7%AC%AC%E4%B8%80%E8%AE%B2-c-c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-C-C-简介"><a href="#1-1-C-C-简介" class="headerlink" title="1.1 C&#x2F;C++简介"></a>1.1 C&#x2F;C++简介</h2><ul><li>C：结构化语言，如何从输入得到输出；</li><li>C++：面向对象的，构造与问题对应的对象模型</li><li>都属高级语言</li></ul><h2 id="1-2-程序框架及基本语法要素"><a href="#1-2-程序框架及基本语法要素" class="headerlink" title="1.2 程序框架及基本语法要素"></a>1.2 程序框架及基本语法要素</h2><p>语法错误、逻辑错误、运行错误</p><p>main()唯一</p><h2 id="1-3-VS-C-开发环境简介"><a href="#1-3-VS-C-开发环境简介" class="headerlink" title="1.3 VS C++开发环境简介"></a>1.3 VS C++开发环境简介</h2><ul><li>.sln：解决方案文件，双击可打开整个项目</li><li>.cpp：源文件，只能打开本身，想修改也得开sln</li><li>.exe：可执行文件，但win32控制台应用程序需在控制台执行，双击exe没用</li></ul><h2 id="1-4-标准输入输出"><a href="#1-4-标准输入输出" class="headerlink" title="1.4 标准输入输出"></a>1.4 标准输入输出</h2><p>标准输入输出：键盘输入，显示器输出</p><ul><li>C: scanf, printf</li><li>C++: cin, cout</li></ul><h4 id="数据输出"><a href="#数据输出" class="headerlink" title="数据输出"></a>数据输出</h4><h5 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h5><p><code>cout&lt;&lt;表达式1&lt;&lt;表达式2&lt;&lt;表达式3&lt;&lt;......&lt;&lt;表达式n;</code></p><blockquote><p>cout, cin的定义信息存放在C++的输入输出流库中，故使用cout, cin必须使用如下文件包含预处理命令和名字空间说明语句：</p><p><code>#include &lt;iostream&gt;</code></p><p><code>using namespace std;</code></p></blockquote><ul><li><code>cout&lt;&lt;a&lt;&lt;&#39;\n&#39;&lt;&lt;b&lt;&lt;endl;</code></li><li><code>\t</code>：分输出区</li></ul><h4 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h4><ul><li>变量可为任意类型，变量间必须以“&gt;&gt;”分隔，而不能用逗号；</li><li>输入数据时，各数据间用空格、回车、制表符分隔</li><li>“&gt;&gt;”后必须为变量，不能加endI</li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c/c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB的interp3函数转为python代码</title>
      <link href="/2024/02/05/matlab%E7%9A%84interp3%E5%87%BD%E6%95%B0%E8%BD%AC%E4%B8%BApython%E4%BB%A3%E7%A0%81/"/>
      <url>/2024/02/05/matlab%E7%9A%84interp3%E5%87%BD%E6%95%B0%E8%BD%AC%E4%B8%BApython%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>google过现成的解决方案，建议用<code>scipy.interpolate.interpn</code>和<code>scipy.interpolate.griddata</code>的都有，但是检出的结果和matlab不一样。所以只好去找matlab的源码转写。</p><ul><li>matlab查看源码方式：命令行 open&#x2F;type <code>函数名</code></li></ul><p>查得interp3源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line">function Vq = interp3(varargin)</span><br><span class="line">%INTERP3 3-D interpolation (table lookup).</span><br><span class="line">%</span><br><span class="line">%   Vq = INTERP3(X,Y,Z,V,Xq,Yq,Zq) interpolates to find Vq, the values</span><br><span class="line">%   of the underlying 3-D function V at the query points in arrays Xq,Yq</span><br><span class="line">%   and Zq. Xq,Yq,Zq must be arrays of the same size or vectors.</span><br><span class="line">%   Vector arguments that are not the same size, and have mixed</span><br><span class="line">%   orientations (i.e. with both row and column vectors) are passed</span><br><span class="line">%   through MESHGRID to create the arrays. Arrays X,Y and Z specify the</span><br><span class="line">%   points at which the data V is given.</span><br><span class="line">%</span><br><span class="line">%   Vq = INTERP3(V,Xq,Yq,Zq) assumes X=1:N, Y=1:M, Z=1:P </span><br><span class="line">%   where [M,N,P]=SIZE(V).</span><br><span class="line">%</span><br><span class="line">%   Vq = INTERP3(V,K) returns the interpolated values on a refined grid</span><br><span class="line">%   formed by repeatedly halving the intervals K times in each dimension.</span><br><span class="line">%   This results in 2^K-1 interpolated points between sample values.</span><br><span class="line">%</span><br><span class="line">%   Vq = INTERP3(V) is the same as INTERP3(V,1).</span><br><span class="line">%</span><br><span class="line">%   Vq = INTERP3(...,METHOD) specifies alternate methods.  The default</span><br><span class="line">%   is linear interpolation.  Available methods are:</span><br><span class="line">%</span><br><span class="line">%     &#x27;nearest&#x27; - nearest neighbor interpolation</span><br><span class="line">%     &#x27;linear&#x27;  - linear interpolation</span><br><span class="line">%     &#x27;spline&#x27;  - spline interpolation</span><br><span class="line">%     &#x27;cubic&#x27;   - cubic convolution interpolation for uniformly-spaced</span><br><span class="line">%                 data. This method does not extrapolate and falls back to</span><br><span class="line">%                 &#x27;spline&#x27; interpolation for irregularly-spaced data.</span><br><span class="line">%     &#x27;makima&#x27;  - modified Akima cubic interpolation</span><br><span class="line">%</span><br><span class="line">%   Vq = INTERP3(...,METHOD,EXTRAPVAL) specifies a method and a value for</span><br><span class="line">%   Vq outside of the domain created by X,Y and Z.  Thus, Vq will equal</span><br><span class="line">%   EXTRAPVAL for any value of Xq,Yq or Zq that is not spanned by X,Y and Z</span><br><span class="line">%   respectively.  A method must be specified for EXTRAPVAL to be used, the</span><br><span class="line">%   default method is &#x27;linear&#x27;.</span><br><span class="line">%</span><br><span class="line">%   All the interpolation methods require that X,Y and Z be monotonic and</span><br><span class="line">%   plaid (as if they were created using MESHGRID). X,Y, and Z can be</span><br><span class="line">%   non-uniformly spaced.</span><br><span class="line">%</span><br><span class="line">%   For example, to generate a course approximation of FLOW and</span><br><span class="line">%   interpolate over a finer mesh:</span><br><span class="line">%       [X,Y,Z,V] = flow(10);</span><br><span class="line">%       [Xq,Yq,Zq] = meshgrid(.1:.25:10,-3:.25:3,-3:.25:3);</span><br><span class="line">%       Vq = interp3(X,Y,Z,V,Xq,Yq,Zq); % Vq is 25-by-40-by-25</span><br><span class="line">%       slice(Xq,Yq,Zq,Vq,[6 9.5],2,[-2 .2]), shading flat</span><br><span class="line">%</span><br><span class="line">%   See also INTERP1, INTERP2, INTERPN, MESHGRID,</span><br><span class="line">%            griddedInterpolant, scatteredInterpolant.</span><br><span class="line"></span><br><span class="line">%   Copyright 1984-2020 The MathWorks, Inc.</span><br><span class="line"></span><br><span class="line">narginchk(1,9); % allowing for an ExtrapVal</span><br><span class="line"></span><br><span class="line">if nargin == 9 &amp;&amp; (isnumeric(varargin&#123;end&#125;)==false  isscalar(varargin&#123;end&#125;) ==false)</span><br><span class="line">    error(message(&#x27;MATLAB:interp3:InvalidExtrapval&#x27;))</span><br><span class="line">elseif nargin == 6 &amp;&amp; (ischar(varargin&#123;end-1&#125;)  (isstring(varargin&#123;end-1&#125;) &amp;&amp; isscalar(varargin&#123;end-1&#125;))) &amp;&amp; ...</span><br><span class="line">        (isnumeric(varargin&#123;end&#125;)==false  isscalar(varargin&#123;end&#125;) ==false)</span><br><span class="line">    error(message(&#x27;MATLAB:interp3:InvalidExtrapval&#x27;))</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">% Parse the method and extrap val</span><br><span class="line">[narg, method, ExtrapVal] = methodandextrapval(varargin&#123;:&#125;);</span><br><span class="line">stripNaNsForCubics = strcmpi(method,&#x27;spline&#x27;)  strcmpi(method,&#x27;makima&#x27;);</span><br><span class="line">if stripNaNsForCubics </span><br><span class="line">    extrap = method;</span><br><span class="line">else</span><br><span class="line">    extrap = &#x27;none&#x27;;</span><br><span class="line">end</span><br><span class="line">% Construct the interpolant, narg should be 2,4 or 7 at this point.</span><br><span class="line"></span><br><span class="line">if narg ~= 1 &amp;&amp; narg ~= 2 &amp;&amp; narg ~= 4 &amp;&amp; narg ~= 7</span><br><span class="line">    error(message(&#x27;MATLAB:interp3:nargin&#x27;));</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">p = [2 1 3];</span><br><span class="line">if narg == 1  narg == 2</span><br><span class="line">    %  interp3(V,NTIMES)</span><br><span class="line">    V = varargin&#123;1&#125;;</span><br><span class="line">    [nrows,ncols,npages] = size(V);</span><br><span class="line">    if narg == 1</span><br><span class="line">        ntimes = 1;</span><br><span class="line">    else</span><br><span class="line">        ntimes = floor(varargin&#123;2&#125;(1));</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    if ~isscalar(ntimes)  ~isreal(ntimes)</span><br><span class="line">        error(message(&#x27;MATLAB:interp3:NtimesInvalid&#x27;));</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    Xq = 1:1/(2^ntimes):ncols;</span><br><span class="line">    Yq = (1:1/(2^ntimes):nrows)&#x27;;</span><br><span class="line">    Zq = (1:1/(2^ntimes):npages);</span><br><span class="line">    [X, Y, Z] = meshgridvectors(V);</span><br><span class="line">    V = permute(V,p);</span><br><span class="line">    if stripNaNsForCubics</span><br><span class="line">        [X,Y,Z, V] = stripnanwrapper(X,Y,Z,V);</span><br><span class="line">    end</span><br><span class="line">    [V, origvtype] = convertv(V,method, Xq, Yq,Zq);</span><br><span class="line">    F = griddedInterpolant(&#123;X,Y,Z&#125;,V,method,extrap);</span><br><span class="line">elseif narg == 4</span><br><span class="line">    %  interp3(V,Xq,Yq,Zq)</span><br><span class="line">    V =  varargin&#123;1&#125;;</span><br><span class="line">    Xq = varargin&#123;2&#125;;</span><br><span class="line">    Yq = varargin&#123;3&#125;;</span><br><span class="line">    Zq = varargin&#123;4&#125;;</span><br><span class="line">    [X, Y, Z] = meshgridvectors(V);</span><br><span class="line">    V = permute(V,p);</span><br><span class="line">    if stripNaNsForCubics</span><br><span class="line">        [X,Y,Z, V] = stripnanwrapper(X,Y,Z,V);</span><br><span class="line">    end</span><br><span class="line">    [V, origvtype] = convertv(V,method, Xq, Yq,Zq);</span><br><span class="line">    F = griddedInterpolant(&#123;X,Y,Z&#125;,V,method,extrap);</span><br><span class="line">elseif narg == 7</span><br><span class="line">    %  interp3(X,Y,Z,V,Xq,Yq,Zq)</span><br><span class="line">    X = varargin&#123;1&#125;;</span><br><span class="line">    Y = varargin&#123;2&#125;;</span><br><span class="line">    Z = varargin&#123;3&#125;;</span><br><span class="line">    V = varargin&#123;4&#125;;</span><br><span class="line"></span><br><span class="line">    Xq = varargin&#123;5&#125;;</span><br><span class="line">    Yq = varargin&#123;6&#125;;</span><br><span class="line">    Zq = varargin&#123;7&#125;;</span><br><span class="line">    if isvector(X) &amp;&amp; isvector(Y) &amp;&amp; isvector(Z)</span><br><span class="line">        V = permute(V,p);</span><br><span class="line">        [X, Y, Z, V] = checkmonotonic(X,Y,Z,V);</span><br><span class="line">        [V, origvtype] = convertv(V,method, Xq, Yq,Zq);</span><br><span class="line">        if stripNaNsForCubics</span><br><span class="line">            [X,Y,Z,V] = stripnanwrapper(X,Y,Z,V);</span><br><span class="line">        end</span><br><span class="line">        F = griddedInterpolant(&#123;X, Y, Z&#125;, V, method,extrap);</span><br><span class="line">    else</span><br><span class="line">        X = permute(X,p);</span><br><span class="line">        Y = permute(Y,p);</span><br><span class="line">        Z = permute(Z,p);</span><br><span class="line">        V = permute(V,p);</span><br><span class="line">        [X, Y, Z, V] = checkmonotonic(X,Y,Z,V);</span><br><span class="line">        [V, origvtype] = convertv(V,method, Xq, Yq,Zq);</span><br><span class="line">        if stripNaNsForCubics</span><br><span class="line">            [X,Y,Z,V] = stripnanwrapper(X,Y,Z,V);</span><br><span class="line">        end</span><br><span class="line">        try</span><br><span class="line">            F = griddedInterpolant(X, Y, Z, V, method,extrap);</span><br><span class="line">        catch gime</span><br><span class="line">            if any(strcmp(gime.identifier,&#123;&#x27;MATLAB:griddedInterpolant:NotNdGridErrId&#x27;, ...</span><br><span class="line">                &#x27;MATLAB:griddedInterpolant:NdgridNotMeshgrid3DErrId&#x27;&#125;))</span><br><span class="line">                error(message(&#x27;MATLAB:interp3:InvalidMeshgrid&#x27;));</span><br><span class="line">            else</span><br><span class="line">                rethrow(gime);</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if strcmpi(method,&#x27;cubic&#x27;) &amp;&amp; strcmpi(F.Method,&#x27;spline&#x27;)</span><br><span class="line">    % Uniformity condition not met</span><br><span class="line">    gv = F.GridVectors;</span><br><span class="line">    FV = F.Values;</span><br><span class="line">    [X, Y, Z, V] = stripnanwrapper(gv&#123;:&#125;,FV);</span><br><span class="line">    F = griddedInterpolant(&#123;X,Y,Z&#125;,V,&#x27;spline&#x27;);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">% Now interpolate</span><br><span class="line">scopedWarnOff = warning(&#x27;off&#x27;, &#x27;MATLAB:griddedInterpolant:MeshgridEval3DWarnId&#x27;);</span><br><span class="line">restoreWarnOff = onCleanup(@()warning(scopedWarnOff));</span><br><span class="line"></span><br><span class="line">transposedquery = false;</span><br><span class="line">iscompact = compactgridformat(Xq, Yq, Zq);</span><br><span class="line">if iscompact  (strcmpi(F.Method,&#x27;spline&#x27;) &amp;&amp; isscalar(Xq) &amp;&amp; isscalar(Yq) &amp;&amp; isscalar(Zq))</span><br><span class="line">    Vq = F(&#123;Xq,Yq,Zq&#125;);</span><br><span class="line">elseif isvector(Xq)==false &amp;&amp; isvector(Yq)==false &amp;&amp; isvector(Zq)==false &amp;&amp; ...</span><br><span class="line">        ndims(Xq) == 3 &amp;&amp; ndims(Yq) == 3 &amp;&amp; ndims(Zq) == 3</span><br><span class="line">    Xq = permute(Xq,p);</span><br><span class="line">    Yq = permute(Yq,p);</span><br><span class="line">    Zq = permute(Zq,p);</span><br><span class="line">    Vq = F(Xq,Yq,Zq);  % NDGRID format gives better performance.</span><br><span class="line">    transposedquery = true;</span><br><span class="line">else</span><br><span class="line">    Vq = F(Xq,Yq,Zq);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if ~isempty(ExtrapVal)</span><br><span class="line">    % If ExtrapVal is provided, impose the extrapolation value to the queries</span><br><span class="line">    % that lie outside the domain.</span><br><span class="line">    Vq = imposeextrapval(&#123;Xq, Yq, Zq&#125;, F.GridVectors, Vq, ExtrapVal,iscompact);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if iscompact   transposedquery</span><br><span class="line">    % Compact grid evaluation produces a NDGRID</span><br><span class="line">    % Convert to MESHGRID</span><br><span class="line">    Vq = permute(Vq,p);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if ~strcmp(origvtype,&#x27;double&#x27;) &amp;&amp; ~strcmp(origvtype,&#x27;single&#x27;)</span><br><span class="line">    Vq = cast(Vq,origvtype);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">    function [X, Y, Z, V] = stripnanwrapper(X,Y,Z,V)</span><br><span class="line">        numvbefore = numel(V);</span><br><span class="line">        [X, Y, Z, V] = stripnansforspline(X,Y,Z,V);</span><br><span class="line">        if numvbefore &gt; numel(V)</span><br><span class="line">            warning(message(&#x27;MATLAB:interp3:NaNstrip&#x27;));</span><br><span class="line">        end</span><br><span class="line">        if ismatrix(V)  isempty(V)</span><br><span class="line">            error(message(&#x27;MATLAB:interp3:NotEnoughPointsNanStrip&#x27;));</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line"></span><br><span class="line">    function [V, origvtype] = convertv(V,method, Xq, Yq,Zq)</span><br><span class="line">        origvtype = class(V);</span><br><span class="line">        if ~isfloat(V) &amp;&amp; (strcmpi(method,&#x27;nearest&#x27;)  (isscalar(Xq) &amp;&amp; isscalar(Yq) &amp;&amp; isscalar(Zq)))</span><br><span class="line">            V = double(V);</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> matlab </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站目标及进度</title>
      <link href="/2024/02/04/%E5%BB%BA%E7%AB%99%E7%9B%AE%E6%A0%87%E5%8F%8A%E8%BF%9B%E5%BA%A6/"/>
      <url>/2024/02/04/%E5%BB%BA%E7%AB%99%E7%9B%AE%E6%A0%87%E5%8F%8A%E8%BF%9B%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<ol><li>背景图片及整体美化；ok</li><li>链接大放送；</li><li>音乐播放器功能；ok</li><li>目录导航优化；ok</li><li>缪缪图案的猫标。</li><li>优化加载速度（*）；</li><li>https协议。</li></ol><ul><li>审核标准：</li></ul><p>刚写就的文章非必要不可立即发表，需要经过2~3天的审核和更正期。 博客文章以短而精的风格为主。冗余部分会放到附录以优化阅读体验。</p><hr><p>圣经（hhh）： <a href="https://www.liveout.cn/25/">https://www.liveout.cn/25/</a></p><p>准备参考的项目：</p><ul><li>AI摘要： <a href="https://blog.2broear.com/notes/24-04-2023_wordpress-chatgpt-summary">https://blog.2broear.com/notes/24-04-2023_wordpress-chatgpt-summary</a></li><li>天气API，字体 <a href="https://www.corrain.top/add-weather/">https://www.corrain.top/add-weather/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈往录</title>
      <link href="/2024/02/04/%E8%B0%88%E5%BE%80%E5%BD%95/"/>
      <url>/2024/02/04/%E8%B0%88%E5%BE%80%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>2023.11.24</p><p>禅钟声声催我往，痴伫却反顾；故谣无音也催思，追想亦无痕。故人竟作故影来。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wordpress建站始末</title>
      <link href="/2024/02/04/wordpress%E5%BB%BA%E7%AB%99%E5%A7%8B%E6%9C%AB/"/>
      <url>/2024/02/04/wordpress%E5%BB%BA%E7%AB%99%E5%A7%8B%E6%9C%AB/</url>
      
        <content type="html"><![CDATA[<p>简要介绍：<a href="https://www.wpdaxue.com/wordpress-hosting.html">https://www.wpdaxue.com/wordpress-hosting.html</a></p><p>简而言之，搭建WordPress站点，要求一个能够运行PHP语言的主机空间和一个MySQL数据库。</p><p>由于博主本人持“能用就行”的非专业态度，所以本文仅详细记述博主搭建博客的过程，不给出建议。</p><p>具体步骤：</p><ol><li>购买域名和服务器；</li><li>安装宝塔面板；</li><li>安装wordpress；</li><li>优化。</li></ol><h1 id="域名和服务器"><a href="#域名和服务器" class="headerlink" title="域名和服务器"></a>域名和服务器</h1><p>博主在阿里云解决了这两个问题。</p><p>随便选了个域名，服务器购买的是轻量应用服务器，系统镜像centos7.9。</p><ul><li>注意：国内域名需要备案。</li></ul><h1 id="宝塔面板安装"><a href="#宝塔面板安装" class="headerlink" title="宝塔面板安装"></a>宝塔面板安装</h1><p>参考了： <a href="https://loyseo.com/tutorial/bt-panel-tutorials/">https://loyseo.com/tutorial/bt-panel-tutorials/</a></p><p>比较完整的参考教程： <a href="https://www.wpdaxue.com/install-baota-panel-and-lnmp.html">https://www.wpdaxue.com/install-baota-panel-and-lnmp.html</a> （安装宝塔面板和配置服务器LNMP环境，属《宝塔面板下运维WordPress网站（共8篇）》系列之首，可连续跟随此教程操作）</p><h2 id="可能遇到的问题："><a href="#可能遇到的问题：" class="headerlink" title="可能遇到的问题："></a>可能遇到的问题：</h2><p><strong>域名无法访问？</strong></p><p><a href="https://help.aliyun.com/zh/dws/support/how-do-i-troubleshoot-the-failures-to-access-a-website-by-using-its-domain-name">https://help.aliyun.com/zh/dws/support/how-do-i-troubleshoot-the-failures-to-access-a-website-by-using-its-domain-name</a></p><p><strong>域名状态查询</strong></p><p><a href="https://whois.aliyun.com/?spm=a2c4g.11186623.0.0.40d678c7qyAS9R">https://whois.aliyun.com/?spm=a2c4g.11186623.0.0.40d678c7qyAS9R</a></p><p><strong>解析生效检测方法</strong></p><p><a href="https://help.aliyun.com/document_detail/39834.html">https://help.aliyun.com/document_detail&#x2F;39834.html</a></p><h1 id="wordpress安装"><a href="#wordpress安装" class="headerlink" title="wordpress安装"></a>wordpress安装</h1><p>不用管教程里面说的“宝塔面板添加网站并安装WordPress”，直接在宝塔面板的软件商店一键配置wordpress即可。</p><p>之后弹出的数据库名、用户、密码可直接用于登入域名、初始化wordpress。</p><p>至于SSL证书，我这里Let’s Encrypt不行了，暂时没去找替代。</p><h1 id="wordpress优化"><a href="#wordpress优化" class="headerlink" title="wordpress优化"></a>wordpress优化</h1><ul><li><p>首先选个主题。Argon, Sakura都是常见好用的选择。</p></li><li><p>然后个性化设置外观。</p></li></ul><p>我参考了这位： <a href="https://crowya.com/681">https://crowya.com/681</a></p><p>电子宠物问题： <a href="https://crowya.com/1092">https://crowya.com/1092</a></p><p>git: <a href="https://github.com/stevenjoezhang/live2d-widget">https://github.com/stevenjoezhang/live2d-widget</a></p>]]></content>
      
      
      <categories>
          
          <category> notebook </category>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群山之声响彻寰宇</title>
      <link href="/2024/02/04/%E7%BE%A4%E5%B1%B1%E4%B9%8B%E5%A3%B0%E5%93%8D%E5%BD%BB%E5%AF%B0%E5%AE%87/"/>
      <url>/2024/02/04/%E7%BE%A4%E5%B1%B1%E4%B9%8B%E5%A3%B0%E5%93%8D%E5%BD%BB%E5%AF%B0%E5%AE%87/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Notion日记中印象最深刻的一篇，写作过程相当浪漫，搬过来作为镇站之作（笑）</p></blockquote><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><blockquote><p>作于2024.2.4</p></blockquote><p>许多时候，灵感奇妙地迸发出来，毫不顾及它的创造者无谓的挽留。正如我于另一篇Zine当中表述的，“我是个挖星星的人……不断把这些思想从地底挖出，为它的光辉痴迷刹那，它便飞往星空……此后我鲜少有喘息窥天之机，星星也在未来的我眼中模糊暗淡……是否能挖到星星也取决于偶然。” 故而《群山之声响彻寰宇》于我价值非凡。柔和、迷茫、持续一晚的畅想，是一场难得的思维盛宴（即便它的内容偏向于缺少逻辑的空想，且包含令当事人尴尬的抒情）。 此版本经过了微小的修改。</p><p><strong>warning：</strong></p><p>个人性质极强。意识流。不建议带着脑子阅读。</p><h2 id="群山之声响彻寰宇"><a href="#群山之声响彻寰宇" class="headerlink" title="群山之声响彻寰宇"></a>群山之声响彻寰宇</h2><blockquote><p>作于2023.7.13</p></blockquote><p>标致的外表，雷同的填充，简单的核心。</p><p>我为什么思考这些问题：人的欲望或目标？初中的尤智：在追求快乐；如今的我：生物趋利避害。</p><p>真想与那时的尤智谈话。倘若你将他极端化，他会成神，你会膜拜，你会模糊化，你会宁静。</p><p>人，基础是相识者的摹本集合的胶质化？经由不同的处理得到的独特溶液。与摹本共鸣？寻找母本？</p><p>我想让狭隘的自己遍布整个大地。我让他活跃，让他模糊，让他失去尖锐的锋芒甚至偏离问题的本质，让他形而上，再让他扩散，只为了他能够走得更远……可是这样我难以复盘，我经历的是一场光怪陆离却无人知晓甚至被自身忘记的永恒旅途，我不会让他停止，正因如此，我难以回头。或许我走了重复的路，或许我偏离了初心，但我并不认为这是完全坏的，因为我只是想走更远的路，无论他在那里，无论我怎样去。</p><p>思想的隔阂如此可悲。我希望能有一种媒介，能以箭头之类方式记录我这样的洗浴哲学家的思绪，让它不致淹没在雾气中消散。打字不能表明几何，写字的速度不能超越神经元，直接读取的内容太晦涩而复杂。脑科学是否能够帮助我做到这一点？我丧失最好的方式得知了，但是我可以继续，我的状态自降世起不断下滑，但我还能珍惜这一段难得的思考，我还能够抓住风的一丝一缕。</p><p>不可以放过你自己。回忆，记忆，永恒。</p><p>我不愿意融入进去，或许是因我知道我是静默的水，有进无出，难以复原。我的颜色太容易沾染，我的转向太容易倾斜，我认为这是好事，我不必拘泥于一处；我认为这是悲哀，因为我做不成顽石。我不追求认可，我希冀独立，我渴望被未来的自己否定，因为我知道，那会证明我仍是缓缓流动的，我不会停滞，我在生命的脉动中永恒。</p><p>哈哈，看那，我的心如此地容易被触动，正如此时他正因一首激昂悲怆的音乐疯狂跳动。看啊，我的文字也曾经是碎片，你能在我读过的任何书籍中找到其原型。</p><p>写下这些字句的时候，我或谦卑，或悲悯，或傲然。我从镜中窥见了自己的百面，我是我自己的英雄。看那！听那！世界之声响彻寰宇！</p><p>现在我便要否定一个往前的自己！“……也好过这条通天的歧途”，不，它于我而言并非歧途，正因我的涉足，它成为正道！没有我，它一文不值，它可以随意地在他人的眼中被磨灭，被蔑视；但是，正因我的存在，我的踏足！它已然不能这样默默无闻，它不再是所谓“歧途”！想想啊，她写书，她想让他人懂得，她用“歧途”。我写日记，写给自己看，我无需用“歧途”！</p><p>寻求意义？只是在这样的过程中，你不再迷茫……尽管颠沛，尽管哀戚与狂喜此消彼长，你只是站在那里……你着你的存在，你的过去，你的回忆，你的一切。感受！“我”的声音响彻“我”的全部，“我”前所未有的统一，我就此处于无上的欢乐之中。</p><p>你惧怕溪流的枯竭吗？……你认为这是你的一部分的死亡，你想要祭奠？雄伟的山岳倒塌，它的后人未必感激。</p><p>勿停息，勿外流，勿声张。你的声音应且仅应牢固你自己……</p><p>伟大的人逝去了，让我们记住它。</p><p>不要忘记我……</p><p>映证了开头：万物只是小小的一颗费列罗，它的核心更加小，更加浓缩，仅仅是拨开它冗余的外壳或许就要耗费巨额的精力和时间……你的一生或许被埋葬在无尽的剥壳中，你见不到光明。然而，真理孑然，当它显现，万物失色，它不需要证明，它矗立，它的光芒不会刺痛你的眼睛，你的手覆上它的心，温暖充遍了你的全身。</p><p>如何找到我：不要忘记我，不要放过你，不要放空任何太久，但也不要吝于给自己打开特例。</p><p>你不满足，你的羽翼扇动不愿俯冲……</p><p>你有时候自视甚高，有时候姿态过低。</p><p>看我说的话，我已经临近大地了。在这种时候，我才会意识到，方才我原来飞得那么高，几乎触及星辰……？</p><p><strong>附：向psych发的癫：</strong></p><p>她不会犹疑，她不会停顿，她原本模糊，她因为我这段话清晰些许，她，不，“它”，“祂”？青春或少年取她的形象做了外表？</p><p>阻隔层，我要飞离地面时，必看见她？她的神情坚定然而静滞，哈哈，好一堵来自过去的墙！她未实施帮助，也未阻拦，她注视我，我注视她，一瞬如永恒，决生死。</p><p><strong>2023.7.24 评</strong></p><p>陈述中出现最多的字：“我”。此文的省思是向内的。</p><p>理由：最充足、丰富、真实的论据来自自己，许多的问题需要求诸己身。“人穷则返本。”</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><blockquote><p>作于2024.2.4</p></blockquote><p>某本书曾指明：世上一半的人是澡堂哲学家，另一半则是澡堂音乐家。我颇为赞同。这篇随笔即是澡堂哲学家未能在离开浴室的同时离开哲学殿堂的产物。</p><p>个人性质极强。意识流。不建议带着脑子阅读。</p><p>注： [1] “通天歧途”之语：《太岁》。 [2] “阻隔层”概念：克丽斯腾。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远绪 </tag>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页脚</title>
      <link href="/2024/02/04/footer/"/>
      <url>/2024/02/04/footer/</url>
      
        <content type="html"><![CDATA[<p>by Antares</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>乾果</title>
      <link href="/2024/02/04/%E4%B9%BE%E6%9E%9C/"/>
      <url>/2024/02/04/%E4%B9%BE%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>建立个人网站一愿始从2022年，今日得以实施。所求不过畅所欲言的一隅。</p><p>心中感慨良多，尽诉于明日发布的文章中吧。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
